#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
Introduccion
\end_layout

\begin_layout Standard
Tenemos que poner en algun lado que en el lab se contaba con horus pero
 no era tiempo real, y los problemas que tenia, etc.
\end_layout

\begin_layout Section
Fundamentos de hidrodinamica marina
\end_layout

\begin_layout Subsection
Introduccion
\end_layout

\begin_layout Standard
Las olas del oceano son movimientos ondulatorios que ponen de manifiesto
 la propagacion de energia mecánica entre la superficie marina y la atmosfera.
 Éstas son generadas por distintos factores naturales (viento, perturbaciones
 meterológicas, terremotos, etc).
 Las olas se propagan debido a la fuerza de gravedad y tension superficial
 que tienden a restaurar la forma lisa de la superficie, provocando el avance
 de la onda.
 
\end_layout

\begin_layout Standard
De manera esquematica, en la figura 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a imagen
\end_layout

\end_inset

 se puede observar la energia de las ondas de superficie asociadas a cada
 frecuencia.
 En este trabajo se trabajara con las olas pertenecientes a las frecuencias
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
agregar frecuencias de ondas con las que se trabajan en el lab.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_tam_olas.png
	lyxscale 50

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref img
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Matematicamente se puede describir a las olas, en forma general, como oscilacion
es uniformes y periodicas de la superficie del agua, distinguiendo dos tipos:
 ondas progresivas (se propagan en una profundidad constante manteniendo
 su forma) y ondas estacionarias (aquellas que no se propagan) 
\begin_inset Note Note
status open

\begin_layout Plain Layout
poner cuales se trabajan en este trabajo
\end_layout

\end_inset

.
 Existen distintas magnitudes que caraterizan a las ondas y algunas definiciones
 utiles para representarlas, estas son:
\end_layout

\begin_layout Standard
\begin_inset Formula $\eta$
\end_inset

: Desplazamiento de la superficie libre (desplazamiento vertical de la superfici
e del fluido con respecto a un nivel medio de referencia NM (MWL)).
 
\end_layout

\begin_layout Standard
\begin_inset Formula $T$
\end_inset

: Periodo de la onda.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $L$
\end_inset

: Longitud de la onda.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $cresta$
\end_inset

: Punto en el que la superficie libre alcanza un un máximo.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $seno$
\end_inset

: Punto en el que la superficie libre alcana un minimo.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $pasoporcero$
\end_inset

: Puntos en el que la superficie libre interseca al nivel medio de referencia.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $H$
\end_inset

: Altura de onda (distancia vertical total entre seno y cresta).
\end_layout

\begin_layout Standard
\begin_inset Formula $A_{c}$
\end_inset

: Amplitud de la cresta (distancia vertical maxima entre nivel de reposo
 y cresta).
\end_layout

\begin_layout Standard
\begin_inset Formula $A_{s}$
\end_inset

: Amplitud del seno (distancia vertical maxima entre nivel de reposo y seno).
 
\end_layout

\begin_layout Standard
\begin_inset Formula $nivelenreposo$
\end_inset

: NR (SWL) nivel correspondiente en ausencia de olas.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $h$
\end_inset

: profundidad o calado (distancia entre el fondo y el NR, en caso de presencia
 de ondas, la referencia es NM).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_param_onda.png
	scale 40

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Parametros de las ondas"

\end_inset


\end_layout

\begin_layout Standard
En general, las teorias de ondas, tienen como objetivo calcular la 
\shape italic
celeridad 
\shape default
o
\shape italic
 velocidad de fase
\shape default
 (cuando las magnitudes 
\begin_inset Formula $H$
\end_inset

, 
\begin_inset Formula $L$
\end_inset

 o 
\begin_inset Formula $h$
\end_inset

 son conocidas), que es la velocidad de propagacion 
\begin_inset Formula $C$
\end_inset

, definida como
\end_layout

\begin_layout Standard
\begin_inset Formula $C=\frac{L}{T}(m/s)$
\end_inset

 o 
\begin_inset Formula $C=\frac{\omega}{\kappa}(m/s)$
\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $\kappa$
\end_inset

 es el 
\shape italic
numero de onda
\shape default
 definida como
\end_layout

\begin_layout Standard
\begin_inset Formula $\kappa=\frac{2\pi}{L}(1/m)$
\end_inset


\end_layout

\begin_layout Standard
y 
\shape italic

\begin_inset Formula $\omega$
\end_inset

 
\shape default
la
\shape italic
 frecuencia angular 
\shape default
definida como
\end_layout

\begin_layout Standard
\begin_inset Formula $\omega=\frac{2\pi}{T}(1/s)$
\end_inset


\end_layout

\begin_layout Standard
Utilizando estos parametros se puede caracterizar la superficie libre de
 las ondas de tipo estacionarias como
\end_layout

\begin_layout Standard
\begin_inset Formula $\eta(x,t)=A\cos\kappa x\cos\omega t$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref formula
\end_layout

\end_inset


\end_layout

\begin_layout Standard
las cuales se caracterizan por tener su evolución espacial y temporal desacoplad
a.
 Este tipo de ondas no progresa en el espacio oscilando verticalmente entre
 puntos fijos llamados nodos.
\end_layout

\begin_layout Standard
Por otro lado se encuentran las ondas progresivas, donde su movimiento temporal
 y espacial estan acoplados, dando lugar a la siguiente formula, la cual
 caracteriza su superficie libre
\end_layout

\begin_layout Standard
\begin_inset Formula $\eta(x,t)=A\cos(\kappa x-\omega t)$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref formula
\end_layout

\end_inset


\end_layout

\begin_layout Standard
propagandose y manteniendo su forma en la direccion positiva del eje 
\begin_inset Formula $x$
\end_inset

 a una velocidad 
\begin_inset Formula $C$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
donde metemos la ref al libro?
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Teoria lineal de ondas
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
La teoria lineal de ondas presenta numerosas ventajas con respecto a las
 otras, estas son: su simplicidad en comparacion con las otras teorias;
 el nivel de reposo de la onda coincide con el nivel medio; su caracter
 lineal posibilita la eliminacion de terminos no lineals dando a lugar solucione
s mas sencillas; la solucion es lienal y puede ser usada como base para
 encontrar otras soluciones por superposicion.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La teoria lineal de ondas presenta numerosas ventajas con respecto a la
 otra, principalmente debido a su simplicidad 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref libro donde explique esta teoria
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Se consideran ademas olas de forma permanente sobre un fondo horizontal
 e impermeable sobre un plano bidimensional.
\end_layout

\begin_layout Standard
En esta teoria existe un eje horizontal de simetria que es el nivel de reposo
 donde se cumple que 
\begin_inset Formula $A_{c}=A_{s}$
\end_inset

 lo que nos da 
\begin_inset Formula $H=A_{c}+A_{s}$
\end_inset

 donde 
\begin_inset Formula $A_{c}=A_{s}=A$
\end_inset

 quedando 
\begin_inset Formula $H=2A$
\end_inset

, donde 
\begin_inset Formula $A$
\end_inset

 se define simplemente como magnitud.
\end_layout

\begin_layout Standard
Sea
\begin_inset Formula $\Phi(x,z,t)$
\end_inset

 el 
\shape italic
potencial de velocidades 
\shape default

\begin_inset Note Note
status open

\begin_layout Plain Layout

\shape italic
ref al libro
\end_layout

\end_inset

, se lo puede expresar de diferentes formas, pero la estructura es siempre
 la misma, donde se pueden identificar tres partes diferentes: (1) el módulo
 o magnitud del potencial dado 
\begin_inset Formula $g\frac{A}{\omega}$
\end_inset

 (siendo 
\begin_inset Formula $g$
\end_inset

 la gravedad, 
\begin_inset Formula $A$
\end_inset

 amplitud, 
\begin_inset Formula $\omega$
\end_inset

 la frecuencia angular); (2) una funcion de profundidad 
\begin_inset Formula $\cosh\kappa(h+z)/\cosh\kappa h$
\end_inset

 (donde 
\begin_inset Formula $h$
\end_inset

 es la profundidad o calado y
\begin_inset Formula $\kappa$
\end_inset

 el numero de onda); (3) una funcion 
\begin_inset Formula $(\kappa x-\omega t)$
\end_inset

 que relaciona 
\begin_inset Formula $x$
\end_inset

 con 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Standard
A este potencial le corresponde una superficie libre en 
\begin_inset Formula $z=0$
\end_inset

 dada por
\end_layout

\begin_layout Standard
\begin_inset Formula $\eta(x,t)=\frac{1}{g}(\frac{\partial\Phi}{\partial t})=A\cos(\kappa x-\omega t)=\frac{H}{2}\cos(\kappa x-\omega t)$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref formula 1.77
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esta ultima expresion corresponde a una onda que se propaga con una celeridad
 
\begin_inset Formula $C=\omega/\kappa=L/T$
\end_inset

 en el sentido positivo del eje 
\begin_inset Formula $x$
\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref al libro?
\end_layout

\end_inset

.
 A modo de ejemplo se puede observar la figura 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a figura
\end_layout

\end_inset

 donde dados dos tiempos 
\begin_inset Formula $t_{1}<t_{2}$
\end_inset

, se marca el mismo punto sobre el perfil de la onda y se diferencian los
 distintos puntos sobre el eje 
\begin_inset Formula $x$
\end_inset

 (
\begin_inset Formula $x_{1}$
\end_inset

y 
\begin_inset Formula $x_{2}$
\end_inset

), que al igual que los tiempos 
\begin_inset Formula $t_{1},t_{2}$
\end_inset

 varian ya que las variables 
\begin_inset Formula $x,t$
\end_inset

 se encuentran acopladas como lo indica la ecuacion 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref formula 1.77
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_propagacion_lineal_onda.png

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref figura
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Oleaje irregular
\end_layout

\begin_layout Standard
El oleaje irregular puede ser considerado como la superposicion de un gran
 numero (o infinito) de componentes correspondientes a ondas con diferentes
 periodos, alturas y direcciones.
 Este conjunto de ondas forman un 
\shape italic
grupo de ondas 
\shape default
el cual se mueve con una velocidad equivalente a la mitad del promedio de
 las velocidades de sus componentes.
 Analogamente, la energia espectral de las olas (explicado en el siguiente
 capitulo), no se mueve a la velocidad de la ola en si sino a la velocidad
 del grupo de olas.
 En la siguiente imagen 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a la img
\end_layout

\end_inset

 se muestra como 2 
\begin_inset Quotes eld
\end_inset

trenes
\begin_inset Quotes erd
\end_inset

 de de olas (lineas punteadas y finas) interfieren formando un 
\shape italic
grupo de ondas 
\shape default
de mayor amplitud (linea gruesa).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_irregular_wave_group.png

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref img
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nuevamente basandonos en 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref al libro...
 queda bien eso 
\begin_inset Quotes eld
\end_inset

basandonos en
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset

la representacion de la superficie libre de este tipo de oleaje puede expresarse
 como 
\end_layout

\begin_layout Standard
\begin_inset Formula $\eta(x,y,t)=\overset{\infty}{\underset{m=1}{\sum}}\overset{\infty}{\underset{n=1}{\sum}}A_{mn}\cos(\kappa_{m}\cos\theta_{n}x+\kappa_{m}\sin\theta_{n}y-2\pi f_{m}t+\epsilon_{mn})$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref formula
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Donde 
\begin_inset Formula $A_{mn}$
\end_inset

y 
\begin_inset Formula $\epsilon_{mn}$
\end_inset

 representan la amplitud y la fase correspondiente a cada una de las componontes
 cuyas frecuencias varian en el rango 
\begin_inset Formula $f_{m}$
\end_inset

a 
\begin_inset Formula $f_{m}+\Delta f_{m}$
\end_inset

 y el ángulo de incidencia en el rango 
\begin_inset Formula $\alpha_{m}$
\end_inset

 a 
\begin_inset Formula $\alpha_{m}+\Delta\alpha_{m}$
\end_inset

.
 Las variables 
\begin_inset Formula $A_{mn}$
\end_inset

 y 
\begin_inset Formula $\epsilon_{mn}$
\end_inset

son aleatorias y 
\begin_inset Formula $\kappa_{m}$
\end_inset

es el numero de onda asociado a la m-esima onda.
\end_layout

\begin_layout Standard
Esta expresion sirve como base para la definicion del 
\shape italic
espectro de energia
\shape default
, el cual se explica en el siguiente capitulo.
\end_layout

\begin_layout Subsection
Analisis del oleaje
\end_layout

\begin_layout Standard

\color red
Genéricamente a los movimientos correspondientes a la superficie del mar,
 que son ondas de gravedad, generadas por el viento y que se propagan desde
 el area de generacion perdiendo lentamente energia por firccion con la
 atmosfera y viscosidad molecular (hasta alcanzar las cosas), se lo conoce
 como Oleaje.
 Una manera simple de modelizar el comportamiento del oleaje es su descomposicio
n en una suma de trenes de ondas regulares de amplitudes, periodos y direcciones
 variables.
\end_layout

\begin_layout Standard

\color red
\begin_inset Note Note
status open

\begin_layout Plain Layout
alomejor agregar la fig 1 de la introduccion del volumen 2
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color red
La cantidad maxima de energia que puede existir en cada tren de ondas componente
s del oleaje esta regulada por los procesos de rotura y de interaccion entre
 las mismas.
 Para el caso de las olas generadas por accion del viento, se las puede
 clasificar como oleaje totalmente desarrollado (estado de equilibro logrado
 bajo la accion de un viento constante sobre una superficie ilimitada) o
 parcialmente desarrollado (oleaje en crecimiento, sucede cuando el tiempo
 minimo o distancia minima para llegar al estado desarrollado no es alcanzada)
\begin_inset Note Note
status open

\begin_layout Plain Layout

\shape italic
ref al libro
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
El analisis del oleaje se puede realizar mediante 2 aproximaciones diferentes,
 por un lado el analisis estadistico o en el dominio de la probabilidad,
 y por el otro lado, el analisis espectral en el dominio de la frecuencia
 (utilizado en este trabajo).
\end_layout

\begin_layout Subsubsection
Análisis estadístico
\end_layout

\begin_layout Standard
En este enfoque, los parametros del oleaje (por ejemplo el desplazamiento
 de la superficie libre) son considerados como sucesos aleatorios ordinarios.
 Los valores medidos forman un conjunto de datos que son utilizados para
 expresar los resultados finales mediante las funciones de distribucion
 y densidad y los momentos estadisticos de las variables que se estan midiendo.
\end_layout

\begin_layout Standard
Este enfoque tiene la ventaja de ser sencillo e intuitivo, pero es deficiente
 a la hora de aportar informacion relativa a la direccion de propagacion
 del oleaje
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref al libro
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Análisis espectral
\end_layout

\begin_layout Standard
Tiene como objetivo la obtencion de la 
\shape italic
funcion de densidad espectral
\shape default
, la cual representa la energía total asociada a cada una de los trenes
 de ondas en que se puede descomponer un registro de oleaje en funcion de
 la frecuencia y de la dirección de propagación.
 Este enfoque es mas complejo que el anterior pero es mas adecuado para
 el analisis direccional del oleaje, lo que no quiere decir que pueda utilizado
 en conjunto como complemento del modelo anterior.
\end_layout

\begin_layout Standard
Existen 2 formas de obtener la 
\shape italic
funcion de densidad espectral 
\shape default
asociada a un conjunto de valores.
 Un metodo se basa en la realización de las transformadas de Fourier de
 la funcion de autocorrelación asociada a la variable medida en un punto
 (por ejemplo la superficie libre) y de la función de correlación cruzada
 entre dos variables de medida en el mismo punto, o de la misma variable
 en dos puntos diferentes.
 El segundo metodo se basa en descomponer el registro temporal en sus componente
s de Fourier 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a esto
\end_layout

\end_inset

, por medio de la tecnica 
\shape italic
Transformada Rápida de Fourier 
\shape default
o 
\shape italic
FFT
\begin_inset Note Note
status open

\begin_layout Plain Layout

\shape italic
ref
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Descripcion espectral del oleaje
\end_layout

\begin_layout Subsubsection
Metodo para la obtencion del espectro
\end_layout

\begin_layout Standard
En nuestro caso, es de interes obtener el espectro dado un registro del
 parametro 
\begin_inset Quotes eld
\end_inset

superficie libre
\begin_inset Quotes erd
\end_inset

 del oleaje.
 Este registro del oleaje viene dado por la funcion 
\begin_inset Formula $\eta(t)$
\end_inset

 (
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref al libro donde sale esta funcion 2.3.1
\end_layout

\end_inset

) donde nos da la altura de la superficie libre dado el tiempo 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Standard
Este metodo se basa en el teorema de Wiener - Kinchine
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a donde sea que haga falta
\end_layout

\end_inset

partiendo de la funcion de autocorrelacion del registro, se aplica una transform
ada de fourier sobre la misma y se consigue el espectro de frecuencias deseado.
\end_layout

\begin_layout Standard
Para la realizacion de la transormada de fourier se emplea el algoritmo
 de la 
\shape italic
Transformada Rapida de Fourier (FFT)
\shape default
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

, el cual permite eficientemente transformar directamente la serie temporal
 del registro al dominio frecuencial sin necesidad de determinar la funcion
 de autocorrelacion del mismo.
 El espectro de energia correspondiente a un registro dado por la funcion
 
\begin_inset Formula $\eta(t)$
\end_inset

 puede calcularse realizando la 
\shape italic
FFT 
\shape default
mediante:
\end_layout

\begin_layout Standard
\begin_inset Formula $S(\omega)=\frac{1}{IR}\left[\overset{N}{\underset{n=1}{\sum}}\eta(n\Delta t)e^{i\omega n\Delta t}\Delta t\right]^{2}$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
agregar id
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $IR$
\end_inset

 es la longitud total del registro y 
\begin_inset Formula $\Delta t$
\end_inset

 es el intervalo de muestreo 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref de donde salio la form?
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
El registro se divide en 
\begin_inset Formula $M$
\end_inset

 segmentos pequeños conteniendo igual cantidad de puntos (
\begin_inset Formula $N$
\end_inset

), separados por un intervalo constante (
\begin_inset Formula $\Delta t$
\end_inset

).
 El resultado se obtiene promediando los espectros obtenidos en las 
\begin_inset Formula $M$
\end_inset

 secciones.
\end_layout

\begin_layout Subsubsection
Parametros espectrales
\end_layout

\begin_layout Standard
Existen ciertos parametros que dan a conocer las caracteristicas principales
 del espectro del oleaje.
 Algunos de estos parametros aparecen frecuentemente en las funciones de
 distribucion asociadas al oleaje.
 A continuacion mencionaremos los mas relevantes para el caso de estudio
 presente.
\end_layout

\begin_layout Standard
Se define 
\shape italic
momento de orden n 
\shape default
de la funcion de densidad espectral como:
\end_layout

\begin_layout Standard
\begin_inset Formula $m_{n}=\overset{\infty}{\underset{0}{\int}}\omega^{n}S(\omega)d\omega\,\:;n=0,1,2,...$
\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Otro parametro de utilidad es
\end_layout

\begin_layout Standard
\begin_inset Formula $H_{s}=4.004\eta_{rms}=4.004\sqrt{m_{0}}$
\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $H_{s}$
\end_inset

 es la altura de ola significante, o altura media de las 
\begin_inset Formula $N/3$
\end_inset

 mayores olas de un registro de superficie libre compuesto de 
\begin_inset Formula $N$
\end_inset

 olas.
\end_layout

\begin_layout Standard
Estos parametros seran utilizados en los siguientes puntos.
\end_layout

\begin_layout Subsection
Propiedades espectrales del oleaje: espectro de JONSWAP
\end_layout

\begin_layout Standard
La energia espectral alcanza su maximo en la 
\shape italic
frecuencia de pico
\shape default
, 
\begin_inset Formula $\omega=\omega_{p}$
\end_inset

 y decrece tanto hacia las altas como hacia las bajas frecuencias.
\end_layout

\begin_layout Standard
El espectro provee una buena representacion del oleaje solo cuando este
 puede representarse correctamente mediante la superposicion lienal de component
es sinusoidales.
 En el presente trabajo se trabajo con un espectro conocido como 
\shape italic
el espectro de JONSWAP
\shape default
 (JOint North Sea WAwe Project) 
\begin_inset Note Note
status open

\begin_layout Plain Layout
agregar ref
\end_layout

\end_inset

 el cual extiende el espectro de 
\shape italic
Pierson-Moskowitz
\shape default
 (P-M) 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

.
 Este espectro esta basado en una extensa campaña de medidas llevada a cabo
 en el Mar del Norte entre 1968 y 1969, el recibio una aprobacion casi inmediata
 por parte de la comunidad cientifica una vez publicado, y es quizas el
 mas utilizado.
 La forma espectral propuesta es 
\begin_inset Note Note
status open

\begin_layout Plain Layout
agregar ref, segun el libro Hasselmann et al.(1973)
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula $S(\omega)=\alpha g^{2}\omega^{-5}e^{-1.25\left(\frac{\omega}{\omega_{p}}\right)^{-4}}\gamma^{\delta}$
\end_inset

 con
\end_layout

\begin_layout Standard
\begin_inset Formula $\delta=e^{-\frac{(\omega-\omega_{p})^{2}}{2\sigma_{0}^{2}\omega_{p}^{2}}}$
\end_inset

 y 
\begin_inset Formula $\sigma_{0}=\begin{cases}
\sigma_{0}^{1} & para\;\omega\leq\omega_{p}\\
\sigma_{0}^{2} & para\;\omega>\omega_{p}\end{cases}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Pedirle a paolo en teoria la ultima version aca
\end_layout

\end_inset


\end_layout

\begin_layout Standard
el espectro de JONSWAP (
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

) contiene 5 parametros 
\begin_inset Note Note
status open

\begin_layout Plain Layout
completar esto dependiendo lo que me diga paolo, pagina 137 pdf Formula
 96
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Faltaria agregar el tema de como se diferencia esta teoria utilizada y todo
 lo explicado anteriormente en laboratorio.
 Me parece que todo asi explicado queda medio colgado, preguntarle a paolo....
\end_layout

\end_inset


\end_layout

\begin_layout Section
Deteccion de la superficie libre en laboratorio
\end_layout

\begin_layout Subsection
Tipo de sensores
\end_layout

\begin_layout Standard
Existen una gran cantidad de instrumentos utilizados para medir la altura
 de la superficie libre del oleaje en laboratorio, cada uno con ventajas
 y desventajas asociadas, donde todos requieren una buena experiencia por
 parte del usuario para su correcta utilizacion y en general sus costos
 son elevados.
 Estos se los pueden clasificar como intrusivos o no intrusivos.
\end_layout

\begin_layout Subsubsection
Instrumentos intrusivos
\end_layout

\begin_layout Standard
Son aquellos que se introducen dentro de la zona que contiene el fluido
 a medir, en contacto con el mismo.
 Éstos tienen como desventaja que con el paso del tiempo, al estar en contacto
 con el medio, su durabilidad es menor, y en algunos casos limitan los tipos
 de fluidos que se pueden medir (algunos instrumentos no pueden medir agua
 salada).
 Ademas, estos sensores son especificos para la medicion de variables en
 un cierto rango de escala espacio-temporal, generan conflictos a la hora
 de medir los procesos cerca de los contornos, dependen de la siembra de
 particulas en el fluido, entre otras.
 
\end_layout

\begin_layout Standard
Por otra parte, estos instrumentos pueden brindar una alta frecuencia de
 muestreos con alta presicion.
\end_layout

\begin_layout Standard
Como ejemplo, podemos mencionar el ADV (Acoustic Doppler Velocimeter 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

), que es un sensor de nivel resistivo que trabaja altas frecuencias de
 muestro por voltaje.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Completar con mas ejemplos, pedirle a paolo nombre de otros instrumentos
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Instrumentos no instrusivos
\end_layout

\begin_layout Standard
Son aquellos que no necesitan estar sumergidos ni en contacto con en el
 fluido.
 Algunos de estos instrumentos (como es el caso del PIV - Particle Image
 Velocimeter -
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref?
\end_layout

\end_inset

, LDV - Laser Doppler Velocimetry -
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref?
\end_layout

\end_inset

), funcionan por medio de sensores muy delicados como el laser, que en general,
 sin las precauciones adecuadas, puede generar daños a los seres humanos
 o dañar el sensor en si.
 A su vez, dentro de esta rama de instrumentos se encuentra el presentado
 en este trabajo, el cual utiliza tecnicas de procesamiento de imagenes
 para detectar la superficie libre.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Preguntar a paolo por otros metodos
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tecnicas basadas en procesamiento de imagenes
\end_layout

\begin_layout Standard
A diferencia de los intrsumentos tradicionales, los cuales son muy costosos
 pero que brindan una elevada presicion de la medicion que realizan, las
 técnicas basadas en procesamiento de imagenes (por medio de videocamaras)
 brindan una opcion alternativa de bajo costo, que requieren de poca experiencia
 por parte del usuario, no son peligrosos (ya que no pueden generar ningun
 daño fisico a personas ni instrumentos en si), tienen una mayor flexibilidad
 (aplicables a otros tipos de mediciones y a diferentes escalas espacio-temporal
es de los procesos
\begin_inset Note Note
status open

\begin_layout Plain Layout
que se refiere con 
\begin_inset Quotes eld
\end_inset

diferentes escalas espacio-temporales
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

) y en general, su presicion es limitada por la definicion de la camara
 utilizada, lo que a su vez, a mayor presicion, mayor costo.
 Sin embargo, con una camara de alta definicion standard puede ser suficiente
 para la aplicaciones ingenieriles de laboratorio, como lo es el fin de
 este trabajo (medir la altura de ola).
\end_layout

\begin_layout Standard

\shape italic
\color red
Las tecnicas analizadas en este trabajo se basan en el modelo de camaras
 
\begin_inset Quotes eld
\end_inset

pinhole
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

.
\end_layout

\begin_layout Standard
Para lograr obtener resultados adecuados es necesario capturar imagenes
 con la mayor calidad posible, ademas de una buena resolucion, es importante
 tener en cuenta varios factores del entorno donde se realizaran las muestras
 de laboratorio, como por ejemplo, luz ambiental, contraste de la superficie
 libre con respecto al fluido y paredes del canal, evitar suciedades en
 los vidrios laterales del canal, entre otras.
 Siempre tendiendo a minimzar la cantidad de ruido (zonas que pueden generar
 contornos que se confundan con la superficie libre, o zonas que puedan
 evitar la correcta captura de la misma).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Probablemente este bueno agregar aca alguna imagen de como se toma la imagen
 desde la camara con respecto al canal y una mini intro.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dentro del conjunto de tecnicas basadas en procesamiento de imagenes se
 pueden diferenciar aquellas que son en tiempo real y las que no, pero ambas,
 a grandes rasgos siguen un mismo proceso.
 Este proceso, que tiene como entrada una imagen y como salida la deteccion
 de alguna variable determinada (altura de la superficie libre) podemos
 describirlo, a grandes rasgos, como un conjunto de pasos (secuenciales)
 o sub-procesos:
\end_layout

\begin_layout Itemize
Rectificacion.
\end_layout

\begin_layout Itemize
Detección de contornos.
\end_layout

\begin_layout Itemize
Analisis y procesamiento.
\end_layout

\begin_layout Standard
Cada uno de estos pasos pueden ser llevados a cabo de distintas maneras
 y utilizando diferentes algoritmos o modelos matematicos.
 A continuacion se explican en mayor detalle cada uno de estos pasos.
\begin_inset Note Note
status open

\begin_layout Plain Layout
completar con info en general sobre las tecnicas actuales
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Rectificacion de imagen
\end_layout

\begin_layout Standard
Este proceso tiene como objetivo la transformacion de una imagen obtenida
 directamente desde el dispositivo (ya sea en tiempo real o mediante un
 archivo de video) y transformarla de manera tal que la imagen resultante
 contenga la menor cantidad de errores.
 Por un lado se encuentran los errores (distorciones) introducidos por el
 dispositivo de captura de imagen (videoc, que pueden ser radiales (relacionada
 con la forma del lente de la camara) y tangenciales (provenientes del proceso
 de ensamblaje de la camara en su totalidad)
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Aca podemos explayarnos bastante con los errores estos, no se si tiene sentido...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por otro lado se encuentra el problema de la diferencia que existe entre
 el sistema de coordenadas del plano real el cual captura la camara y el
 sistema de coordenadas del mismo plano en la imagen que el dispositivo
 posee
\begin_inset Note Note
status open

\begin_layout Plain Layout
agregar link a imagen
\end_layout

\end_inset

 (transformacion de perspectiva).
 Esto debido a que resulta practicamente imposible (siempre existe el error
 humano) colocar la videocamara de forma perpendicular a este plano, ademas
 de que no es conveniente (debido al angulo optimo en la que la camara debe
 ser colocada para evitar tomar la superficie del fluido a analizar, la
 cual genera interferencia en el procesamiento posterior).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_rectification_2.png
	lyxscale 50
	scale 50

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Imagen 1"

\end_inset


\end_layout

\begin_layout Standard
Para llevar a cabo la rectificacion, se utilizan diferentes metodos, entre
 ellos el modelo de transformada lineal directa (DTL) 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

, solucion por minimos cuadrados 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 y metodos alternativos 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Preguntarle a paolo que onda esto, yo los lei pero no me los acuerdo mucho
 como funcionaban, hace falta realmente acordarse de todo esto perfectamente
 para cuando se entregue la tesis?
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Detección de contornos
\end_layout

\begin_layout Standard
Esta etapa tiene como fin detectar los bordes asociados a la superficie
 libre que se encuentran en la imagen de entrada, minimizando la deteccion
 de bordes falsos (aquellos que pertenecen al entorno y no a la superficie
 libre en si).
\end_layout

\begin_layout Standard
En una primera instancia, se procede a disminuir la complejidad de la imagen
 reduciendo la cantidad de canales (colores) de la misma, en general, convirtien
dola a una imagen monocromatica.
\end_layout

\begin_layout Standard
En segundo lugar, se aplican una serie de filtros (o mascaras) con el fin
 de delimitar la zona que se quiere analizar, evitando procesar zonas que
 no son de interes y a su vez, eliminando posibles errores causados por
 falsos valores (esto es, los bordes falsos mencionados anteriormente).
 Por ultimo se realiza la deteccion de contornos sobre la imagen filtrada
 por medio de algun algoritmo.
 Existen varios metodos utilizados para detectar los bordes, alguno de estos
 se pueden ver en 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

.
\end_layout

\begin_layout Standard
A continuacion se muestra un ejemplo en el que la figura superior es la
 imagen de entrada de este sub-proceso (ya rectificada) pero sin ningun
 filtro aplicado, mientras que la figura inferior muestra la imagen de salida
 (de esta etapa) luego de haberla procesado con el algoritmo de deteccion
 de contornos.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_comp_canny1.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_comp_canny2.png

\end_inset


\end_layout

\begin_layout Standard
Como se puede ver, dependiendo del entorno de trabajo (luz, contraste de
 la superficie libre con respecto al canal, etc), el algoritmo utilizado,
 y los filtros aplicados, la existencia de bordes falsos puede generar mucho
 ruido e introducir errores a la hora de medir la altura de ola.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
agregamos algo mas? medio feo esta...
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Analisis y procesamiento
\end_layout

\begin_layout Standard
Una vez detectado los bordes de la imagen y en base a los algoritmos utilizados
 en la etapa anterior, se aplica cierta heuristica para diferenciar los
 bordes correspondientes a la altura de la superficie libre (llamemoslos
 
\shape italic
bordes positivos
\shape default
), de aquellos que no corresponden a la variable que se quiere analizar
 (lo que se denomina ruido o 
\shape italic
bordes negativos
\shape default
) como claramente se puede observar en la imagen anterior 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref img anterior
\end_layout

\end_inset

.
 La forma en la que se detectan estos 
\shape italic
bordes positivos 
\shape default
no es unica y esta intimamente ligado en como fue modificada la imagen en
 la etapa anterior.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
podemos mencionar y dar ejemplos de los otros papers que por ejemplo algunos
 detectan el contorno, otros pintan de color el contorno, otros arman un
 arreglo de booleanos y en base a eso determiann cual es el borde.
 etc
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Luego de lograr la deteccion de los 
\shape italic
bordes positivos
\shape default
 se procede a obtener la altura en metros (o alguna otra unidad de longitud)
 por medio de la transformacion de la relacion pixels/metros (o la unidad
 de longitud correspondiente).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
No vi tecnicas para esto.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es probablemente esta etapa la que mas varia de tecnica en tecnica.
\end_layout

\begin_layout Subsection
Tecnicas utilizadas
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar alomejor algo con respecto a tiempo real
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el presente trabajo podemos dividir el proceso general en cuatro sub-procesos
 como lo muestra el siguiente diagrama 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref diagrama
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_tecnica_utilizada.png
	lyxscale 80

\end_inset


\end_layout

\begin_layout Standard
Como se puede ver, el proceso (rectangulo azul) tiene como entrada una imagen
 que puede provenir de una videocamara o de un archivo de video.
 Dentro del proceso general se pueden diferenciar los cuatro subprocesos
 que trabajan de manera secuencial, donde cada uno de estos tiene como entrada
 la imagen procesada por el subproceso inmediatamente anterior.
 Antes de continuar a explicar cada uno de los subprocesos definiremos algunas
 cosas para una mayor comprension de lo que se explique.
\end_layout

\begin_layout Standard
Basandonos en el siguiente esquema 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_eje_trabajo.jpg
	lyxscale 40

\end_inset


\end_layout

\begin_layout Standard
definiremos el 
\shape italic
plano de captura
\shape default
 como el plano formado por los ejes 
\begin_inset Formula $x$
\end_inset

, 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Standard

\shape italic
zona de captura: 
\shape default
al rectangulo capturado por la videocamara sobre la pared del canal que
 es paralelo al plano de captura 
\begin_inset Note Note
status open

\begin_layout Plain Layout
mejor pintar el plano de captura y dibujar una camara para que se vea como
 capturar
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
alomejor esta mas facil dibujar el rectangulo de captura y definirlo aca
 en vez de abajo
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\shape italic
angulo de captura:
\shape default
 El angulo de rotacion del a camara con respecto al 
\shape italic
plano de captura.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar en la imagen el angulo de captura
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Definamos ademas a una imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 como una matriz de valores numericos enteros tal que 
\begin_inset Formula $a_{ij}$
\end_inset

 es el pixel (valor numerico) que se encuentra en la i-esima fila y j-esima
 columna, tales que 
\begin_inset Formula $0\leq i<m$
\end_inset

 y 
\begin_inset Formula $0\leq j<n$
\end_inset

, definamos tambien a 
\begin_inset Formula $I_{*k}$
\end_inset

 a la columna (de pixels) k-esima de la imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 tal que 
\begin_inset Formula $0\leq k<n$
\end_inset

 y analogamente para las filas de pixels 
\begin_inset Formula $I_{l*}$
\end_inset

.
 Dada una imagen 
\begin_inset Formula $I_{mn}$
\end_inset

, 
\begin_inset Formula $a_{00}\in I_{mn}$
\end_inset

 corresponde al pixel superior izquierdo de la imagen mientras que el pixel
 
\begin_inset Formula $a_{mn}\in I_{mn}$
\end_inset

 al inferior derecho.
\end_layout

\begin_layout Subsubsection

\series bold
Rectificador
\end_layout

\begin_layout Standard
Este subproceso requiere de una previa configuracion antes de poder procesar
 la imagen de entrada.
 Necesita de 2 grupos de 4 puntos (en dos dimensiones) correspondientes
 los puntos de origen y de destino.
 Los primeros estan asociados a la zona de trabajo 
\begin_inset Note Note
status open

\begin_layout Plain Layout
o rectangulo de captura si lo definimos arriba
\end_layout

\end_inset

 que se quiere analizar (la cual debe ser un rectangulo contenido dentro
 de la 
\shape italic
zona de captura
\shape default
 con base alineada al eje 
\begin_inset Formula $x$
\end_inset

).
 Mientras que el segundo grupo esta relacionado con el tamaño de la imagen
 capturada por el dispositivo en si (esto eso, el tamaño del frame con el
 que se trabaja).
 El primer grupo de puntos necesita ser especificado por el usuario mientras
 que el segundo se asigna de manera automatica.
 
\end_layout

\begin_layout Standard
Debido a que el dispositivo se encuentra con un 
\shape italic
angulo de captura
\shape default
 
\begin_inset Formula $\alpha\neq0$
\end_inset

, la imagen tomada por el dispositivo posee una perspectiva distinta a la
 zona de captura 
\begin_inset Note Note
status open

\begin_layout Plain Layout
redactar mejor esta parte
\end_layout

\end_inset

, esto es, el sistema de coordenadas de la imagen en el dispositivo se encuentra
 rotado 
\begin_inset Formula $-\alpha$
\end_inset

 grados sobre el eje 
\begin_inset Formula $x$
\end_inset

.
 Para solucionar esto, y gracias a que el 
\shape italic
rectangulo de captura
\shape default
 esta alineado con el 
\shape italic
plano de captura
\shape default
, se genera una matriz de transformacion de perspectiva (
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a http://java.sun.com/products/java-media/jai/forDevelopers/jai1_0_1guide-unc/
Geom-image-manip.doc.html?
\end_layout

\end_inset

) por medio de los 8 puntos mencionados anteriormente, la cual mapea cada
 pixel de la imagen origen a su nueva posicion en la imagen destino (solventando
 el defasaje de los distintos sistemas de coordenadas 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a la imagen 1 de arriba (la que muestra la perspectiva en la camara
 y del objeto en la realidad, sacada del opencv book)
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
De esta manera se soluciona el error de la perspectiva y al mismo tiempo
 se eliminan las zonas (a grandes rasgos) que no pertenecen al area de interes.
 Ademas de que es una metodo sencillo y facil de configurar por parte del
 usuario.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
En el siguiente capitulo se realiza un desarrollo mas profundo sobre el
 algoritmo de rectificacion.
 (sacamos lo de arriba toda la explicacion matematicay la ponemos mas adelante?)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Recortador
\end_layout

\begin_layout Standard
Tiene como finalidad realizar un recorte aún mayor sobre la imagen de entrada.
 Para lograrlo requiere de 2 datos previos (configuracion), estos son:
\end_layout

\begin_layout Standard
1) 
\begin_inset Formula $i$
\end_inset

: Es el numero de columna 
\begin_inset Formula $I_{*i}$
\end_inset

 (columna de pixels) de la imagen de entrada 
\begin_inset Formula $I_{mn}$
\end_inset

 a la cual se quiere analizar la altura de la superficie libre (
\begin_inset Formula $0\leq i<n$
\end_inset

).
\end_layout

\begin_layout Standard
2) 
\begin_inset Formula $c$
\end_inset

: Cantidad de columnas analizar, donde las columnas analizar son las 
\begin_inset Formula $I_{*j}$
\end_inset

 con 
\begin_inset Formula $j=i-\frac{c}{2},...,i+\frac{c}{2}$
\end_inset

, 
\begin_inset Formula $c>0$
\end_inset

.
\end_layout

\begin_layout Standard
Su funcionalidad es simplemente la siguiente: dada la imagen de entrada
 
\begin_inset Formula $I_{mn}$
\end_inset

 transformarla a una imagen 
\begin_inset Formula $I'_{mc}$
\end_inset

 (de salida) reduciendo la cantidad de datos a analizar en los siguientes
 subprocesos (ya que como requerimiento del sistema necesitamos realizar
 todo el proceso en tiempo real).
 Además que solo necesitamos analizar la altura de la superficie libre en
 un punto determinado (aún asi no podemos solo dejar una unica columna para
 analizar debido a ciertos problemas como se analizará mas adelante).
 Por otro lado simplifica las configuraciones de los posteriores subprocesos
 (como se vera mas adelante).
\end_layout

\begin_layout Subsubsection

\series bold
Detector de bordes
\end_layout

\begin_layout Standard
Su objetivo es detectar los bordes evitando la mayor cantidad de ruido posible,
 pero no de discernir entre 
\shape italic
bordes positivos
\shape default
 y 
\shape italic
bordes negativos
\shape default
.
 Podemos distinguir una secuencia de acciones realizadas por este proceso.
 Estas son:
\end_layout

\begin_layout Enumerate
Se convierte la imagen de entrada 
\begin_inset Formula $I_{mn}$
\end_inset

 (en general color) en una imagen en blanco y negro, por medio de un simple
 filtro de imagen, el cual se aplica a cada 
\begin_inset Formula $a_{ij}\in I_{mn}$
\end_inset

 modificando solo su valor.
\end_layout

\begin_layout Enumerate
Se le aplica un segundo filtro denominado 
\shape italic
Gaussian Blur
\shape default
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref..
\end_layout

\end_inset

 con el fin de 
\begin_inset Quotes eld
\end_inset

suavizar
\begin_inset Quotes erd
\end_inset

 la imagen suprimiendo posible ruido (como puntos aislados debido a basuras
 en la imagen capturada u otras cosas) para una mayor diferenciacion de
 los bordes reales.
 El funcionamiento de este algoritmo se explicara en el siguiente capitulo.
\end_layout

\begin_layout Enumerate
Por ultimo se corre el algoritmo conocido por el nombre 
\shape italic
Algoritmo de Canny
\begin_inset Note Note
status open

\begin_layout Plain Layout

\shape italic
ref..
\end_layout

\end_inset


\shape default
 utilizado para detectar los bordes en la imagen basado en ciertos parametros
 previamente configurados por el usuario que seran mencionados posteriormente
 junto con detalles del funcionamiento del algoritmo.
\end_layout

\begin_layout Standard
Al finalizar esta secuencia de pasos, podemos asumir que la imagen 
\begin_inset Formula $I'_{mn}$
\end_inset

 de salida, cumple lo siguiente:
\end_layout

\begin_layout Standard
\begin_inset Formula $\forall a_{ij}\in I_{mn}:\begin{cases}
a_{ij}=1 & si\; a_{ij}\: pertenece\: a\: un\: contorno\\
a_{ij}=0 & caso\: contrario.\end{cases}$
\end_inset


\end_layout

\begin_layout Standard
Dicho de otra manera, la imagen de salida 
\begin_inset Formula $I'_{mn}$
\end_inset

 pasa a ser una matriz de valores booleanos donde los 
\begin_inset Formula $a_{ij}$
\end_inset

 (pixels) perteneciente a la misma, contienen el valor verdadero si y solo
 si forman parte de un contorno detectado por el algoritmo, caso contrario,
 contienen el valor booleano falso.
\end_layout

\begin_layout Standard
Este subproceso es el que mayor tiempo de procesamiento requiere.
 
\shape italic
\color red
Basicamente se opto por la utilizacion de este algoritmo debido a que la
 libreria con la que se trabajo no proveia de otro algoritmo integrado para
 detectar bordes.
 Aún asi, al ser el proceso de manera secuencial e independiente cada uno
 con respecto a los otros, cambiar de algoritmo solo deberia implicar la
 modificacion de este único subproceso (modulo).
\end_layout

\begin_layout Subsubsection
Analizador
\end_layout

\begin_layout Standard
El objetivo del 
\shape italic
Analizador
\shape default
 es: dada la imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 preprocesada por el algoritmo de deteccion de contornos, decidir cuales
 de éstos 
\begin_inset Formula $a_{ij}\in I_{mn}$
\end_inset

(pixeles) marcados como verdaderos (recordando que son verdaderos si y solo
 si pertenecen a un contorno detectado) son 
\shape italic
bordes positivos 
\shape default
y cuales son 
\shape italic
bordes negativos
\shape default
.
 Para lograrlo, este subproceso se basa en un simple algoritmo explicado
 en el siguiente capitulo 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref al algoritmo
\end_layout

\end_inset

 y una serie de parametros que sirven de base como configuracion inicial
 (suministrados por el usuario).
 
\end_layout

\begin_layout Standard
Una vez detectado los 
\shape italic
bordes positivos
\shape default
, se realiza una conversion de unidades, pasando de 
\begin_inset Quotes eld
\end_inset

altura de superficie libre en pixels
\begin_inset Quotes erd
\end_inset

 a 
\begin_inset Quotes eld
\end_inset

altura de superficie libre en metros
\begin_inset Quotes erd
\end_inset

, por medio de uno de los parametros de configuracion que establece la relacion
 de equivalencia de pixels en metros.
\end_layout

\begin_layout Standard
A diferencia de las otras etapas, ésta tiene como salida un valor numerico
 (y no una imagen), que es la salida del proceso completo, esto es, la altura
 de la superficie libre detectada y convertida en metros.
\end_layout

\begin_layout Section
Algoritmos involucrados
\end_layout

\begin_layout Standard
En esta seccion describiremos las bases teoricas de los algoritmos utilizados
 en este trabajo a lo largo del proceso de la deteccion de la superficie
 libre.
 Se mencionaran en el orden en el que son aplicados sobre la imagen de entrada
 
\begin_inset Formula $I_{mn}$
\end_inset

 del proceso, proviniente ya sea del dispositivo (videocamara) o de un archivo
 de video.
\end_layout

\begin_layout Subsection
Perspective transform
\end_layout

\begin_layout Standard
Se basa en una transformacion de perspectiva (por medio de una matriz de
 transofrmacion 
\begin_inset Formula $T$
\end_inset

) 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref algun lado..
 http://java.sun.com/products/java-media/jai/forDevelopers/jai1_0_1guide-unc/Geom-
image-manip.doc.html
\end_layout

\end_inset

 sobre la imagen de entrada 
\begin_inset Formula $I_{mn}$
\end_inset

 dando como resultado una imagen 
\begin_inset Formula $I'_{mn}$
\end_inset

 donde cada pixel 
\begin_inset Formula $a'_{i'j'}\in I'_{mn}$
\end_inset

 puede ser expresado en terminos del punto original 
\begin_inset Formula $a_{ij}\in I_{mn}$
\end_inset

, utilizando coordenadas homogeneas 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a coordenadas homogeneas
\end_layout

\end_inset

 de forma tal que las coordenadas origen 
\begin_inset Formula $(i,j,1)$
\end_inset

 pasen a ser las coordenadas destinos 
\begin_inset Formula $(i',j',w)$
\end_inset

 para algun 
\begin_inset Formula $w$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula $\begin{cases}
i'=\frac{m_{00}i+m_{01}j+m_{02}}{m_{20}i+m_{21}j+m_{22}}\\
j'=\frac{m_{10}i+m_{11}j+m_{12}}{m_{20}i+m_{21}j+m_{22}}\end{cases}$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref eq1
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\end_layout

\begin_layout Standard
\begin_inset Formula $T=\left(\begin{array}{ccc}
m_{00} & m_{01} & m_{02}\\
m_{10} & m_{11} & m_{12}\\
m_{20} & m_{21} & m_{22}\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
es la matriz de transformacion, entonces podemos expresar
\end_layout

\begin_layout Standard
\begin_inset Formula $\left(\begin{array}{c}
i'\\
j'\\
w\end{array}\right)=\left(\begin{array}{ccc}
m_{00} & m_{01} & m_{02}\\
m_{10} & m_{11} & m_{12}\\
m_{20} & m_{21} & m_{22}\end{array}\right)\left(\begin{array}{c}
i\\
j\\
1\end{array}\right)=\left(\begin{array}{c}
m_{00}i+m_{01}j+m_{02}\\
m_{10}i+m_{11}j+m_{12}\\
m_{20}i+m_{21}j+m_{22}\end{array}\right)$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref from Multiplicacion
\end_layout

\end_inset


\end_layout

\begin_layout Standard
y cada uno de los 
\begin_inset Formula $m_{ab}$
\end_inset

 se calculan en base a los 8 puntos bidimensionales de configuracion, 4
 de origen (llamemoslos 
\begin_inset Formula $p_{o_{k}}:k=1,..,4$
\end_inset

), con sus 4 puntos de destino correspondientes (
\begin_inset Formula $p_{d_{k}}:k=1,..,4$
\end_inset

) resolviendo un sistema lineal de ecuaciones como se lo puede ver en 
\begin_inset Note Note
status open

\begin_layout Plain Layout
imgwrap.cpp de openCv sale como es la matriz monstruosa.
 Deberiamos buscar algun lugar donde se pueda ver mejor
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notar que asumimos que los puntos 
\begin_inset Formula $i'$
\end_inset

, 
\begin_inset Formula $j'$
\end_inset

 obtenidos luego de multiplicar la matriz de transformacion sobre los puntos
 origen 
\begin_inset Formula $i$
\end_inset

, 
\begin_inset Formula $j$
\end_inset

, caen dentro de una imagen de igual tamaño, esto es 
\begin_inset Formula $0\leq i,i'<m$
\end_inset

 y 
\begin_inset Formula $0\leq j,j'<n$
\end_inset

, lo que siempre sucede debido a que los puntos origen y puntos destino
 se encuetran dentro del tamaño de la imagen.
\end_layout

\begin_layout Standard
Con todo esto, el algoritmo simplemente se puede describir como sigue:
\end_layout

\begin_layout Enumerate
Establecidos los 8 puntos de configuracion (
\begin_inset Formula $p_{o_{k}},p_{d_{k}}:k=1,..,4$
\end_inset

), se contruye la matriz de transformacion de perspectiva 
\begin_inset Formula $T$
\end_inset

.
\end_layout

\begin_layout Enumerate
Para cada pixel 
\begin_inset Formula $a_{ij}\in I_{mn}$
\end_inset

 se obtiene su nueva posicion en la imagen de salida 
\begin_inset Formula $I'_{mn}$
\end_inset

utilizando la matriz 
\begin_inset Formula $T$
\end_inset

 como se muestra en 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref form Multiplicacion
\end_layout

\end_inset

 copiandose el valor del pixel (
\begin_inset Formula $a'_{i'j'}=a_{ij}$
\end_inset

).
\end_layout

\begin_layout Standard
Este algoritmo es utilizado para la rectificacion de la imagen al comienzo
 del proceso.
 
\end_layout

\begin_layout Subsection
Gaussian Blur
\end_layout

\begin_layout Standard
Este algoritmo, tambien conocido como 
\shape italic
Gaussian smoothing
\shape default
, se lo puede categorizar como un 
\begin_inset Quotes eld
\end_inset

low-pass image filter
\begin_inset Quotes erd
\end_inset

, que tiene como finalidad disminuir la amplitud de las variaciones de la
 imagen (ruido)
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

, especialmente utilizado en la fase previa a los algoritmos que detectan
 bordes o contornos.
\end_layout

\begin_layout Standard
Para comprender mejor el funcionamiento del algoritmo expliquemos algunos
 conceptos utilizados:
\end_layout

\begin_layout Standard

\shape italic
Kernel
\shape default
 o 
\shape italic
Mask
\shape default
: Usualmente una matriz de numeros usada en lo que se denomina 
\begin_inset Quotes eld
\end_inset


\shape italic
image convolution
\shape default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard

\shape italic
Convolution
\shape default
:
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

Es una simple operacion matematica que provee una forma de multiplicar entre
 si 2 arrays de numeros, generalmente de diferentes tamaños pero de igual
 dimension produciendo un tercer array (resultado) de numeros de la misma
 dimension.
 En éste caso (procesamiento de imagenes), los arrays numericos multiplicados
 son por un lado la imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 (que puede verse como un array numerico bidimensional) y por el otro lado
 la matriz 
\shape italic
kernel
\shape default
, dando como resultado, la imagen con el suavizado aplicado.
 Para una mayor claridad observemos la siguiente figura:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_convolution_kernel.png

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
a izquierda imagen, a derecha kernel
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La 
\shape italic
convolucion 
\shape default
es realizada deslizando el kernel (empezando generalmente desde por arriba
 a la izquierda) sobre todos los pixels de la imagen de forma tal que la
 matriz kernel entre completamente dentro de los limites de la imagen, devolvien
do en cada posicion (que se desliza el kernel) un unico valor correspondiente.
 A modo de ejemplo en el caso del ultimo pixel (abajo a la derecha) el resultado
 de la operacion seria 
\begin_inset Formula $O_{57}=I_{57}K_{11}+I_{58}K_{12}+I_{59}K_{13}+I_{67}K_{21}+I_{68}K_{22}+I_{69}K_{23}$
\end_inset

, donde 
\begin_inset Formula $O_{57}$
\end_inset

 es el resultado de esta operación.
 Notemos que si la imagen de entrada tiene M filas y N columnas, y el kernel
 tiene m filas y n columnas, entonces el tamaño de la imagen de salida tendrá
 M-m+1 filas y N-n+1 columnas.
\end_layout

\begin_layout Standard

\shape italic
Distribucion gaussiana 1D:
\end_layout

\begin_layout Standard
\begin_inset Formula $G(x)=\frac{1}{\sqrt{2\pi\sigma^{2}}}e^{-\frac{x^{2}}{2\sigma^{2}}}$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref f1
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\shape italic
Distribucion gaussiana 2D:
\end_layout

\begin_layout Standard
\begin_inset Formula $G(x,y)=\frac{1}{2\pi\sigma^{2}}e^{-\frac{x^{2}+y^{2}}{2\sigma^{2}}}$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref f2
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La idea es usar esta distribucion 2D (
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref f2
\end_layout

\end_inset

) como una funcion del tipo 
\begin_inset Quotes eld
\end_inset

punto de propagacion
\begin_inset Quotes erd
\end_inset

, por medio de la 
\shape italic
convolucion
\shape default
.
 Dicho en otras palabras, armar la matriz kernel utilizando la 
\shape italic
distribucion gaussiana
\shape default
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref f2
\end_layout

\end_inset

 para luego aplicar la 
\shape italic
convolucion
\shape default
 y obtener la imagen resultante
\shape italic
.
\end_layout

\begin_layout Standard
Por temas de eficiencia en general, y gracias a que 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref f2
\end_layout

\end_inset

 puede separarse en las componentes 
\begin_inset Formula $x$
\end_inset

 e 
\begin_inset Formula $y$
\end_inset

 (dandonos 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref f1
\end_layout

\end_inset

), podemos aplicar la 
\shape italic
convolucion 
\shape default
primero en la direccion 
\begin_inset Formula $x$
\end_inset

 y luego en la direccion 
\begin_inset Formula $y$
\end_inset

 por medio de 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref f1
\end_layout

\end_inset

, obteniendo el mismo resultado que habiendo aplicado 
\shape italic
convolucion
\shape default
 con 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref f2
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Este algoritmo da como resultado (en cada corrida de la convolucion) un
 promedio ponderado de cada pixel vecino, con la media ponderada mas hacia
 el valor de los pixeles centrales.
 Utiliza ademas ciertos parametros que determinan el tamaño de la kernel
 y el sigma utilizado (los cuales, en este trabajo, fueron predefinidos
 como una kernel de tamaño 7x7 y 
\begin_inset Formula $\sigma=1.5$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Tenemos que explicar porque pusimos estos valoreS? estaban por defecto en
 la lib..
 si no sacamos esta ultima parte!
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
A modo de ejemplo, se muestran dos imagenes, una (la izquierda) antes y
 la otra (derecha) luego de haber aplicado el filtro (extraidas de 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_gaussian_comp.png
	lyxscale 80

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
agregar comments
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Canny edge detector
\end_layout

\begin_layout Standard
Este algoritmo fue desarrollado por John F.
 Canny
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

 en 1986, tiene como finalidad detectar los bordes en una imagen, filtrando
 todo aquello que no pertenezca a un contorno.
 El algoritmo se basa en 5 pasos separados:
\end_layout

\begin_layout Enumerate

\series bold
Smoothing
\series default
: Suavizar la imagen para remover el ruido utilizando el filtro gaussiano
 anteriormente mencionado 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref?
\end_layout

\end_inset

 con parametro 
\begin_inset Formula $\sigma=1.4$
\end_inset

 y un kernel de tamaño 5x5.
\end_layout

\begin_layout Enumerate

\series bold
Finding gradients
\series default
: Los bordes deben ser marcados donde los gradientes de la imagen tengan
 magnitudes grandes por medio de utilizacion de alguno de los 
\begin_inset Quotes eld
\end_inset

operadores de gradiente
\begin_inset Quotes erd
\end_inset

 como (Roberts 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

, Sobel 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

, Prewitt 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

, entre otros).
\end_layout

\begin_layout Enumerate

\series bold
Non-maximum suppression
\series default
: Dada la imagen de magnitudes de gradientes calculada en el paso anterior,
 se convierten los bordes encontrados pero borrosos, en bordes bien marcados
 (fuertes).
 Esto se hace por medio de la eliminacion de todo maximo que no sea local
 en la imagen de gradientes y dejando solo los maximo locales, los cuales
 son marcados como contornos fuertes.
\end_layout

\begin_layout Enumerate

\series bold
Double thresholding
\series default
: La imagen resultante del paso anterior es procesada comparando cada uno
 de los pixels (marcados como pertenecientes a un contorno) con un umbral
 alto y uno bajo.
 Aquellos pixels que esten por debajo del 
\begin_inset Quotes eld
\end_inset

umbral bajo
\begin_inset Quotes erd
\end_inset

 son descartados, aquellos que esten por encima del 
\begin_inset Quotes eld
\end_inset

umbral alto
\begin_inset Quotes erd
\end_inset

 son marcados como 
\shape italic
fuertes
\shape default
, mientras que aquellos que se encuentren por encima del bajo y por debajo
 del alto son marcados como 
\shape italic
debiles
\shape default
.
\end_layout

\begin_layout Enumerate

\series bold
Edge tracking by hysteresis
\series default
: Dada la imagen anterior, todos los pixels marcados como 
\shape italic
fuertes 
\shape default
son automaticamente clasificados como contornos reales (y por ende incluidos
 a la imagen resultante).
 Aquellos pixels marcados como 
\shape italic
debiles
\shape default
 son incluidos como contornos reales si y solo si estan conectados a alguno
 de los contornos 
\shape italic
fuertes
\shape default
, caso contrario son descartados.
\end_layout

\begin_layout Standard
En 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

 y en 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref2
\end_layout

\end_inset

 se describe en mayor detalle cada uno de los pasos mencionados anteriormente.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
PREGUNTARLE A PAOLO SI EXPLICO TODO ENTERO PORQUE ES UN RESUMEN DEL MANUAL
 ESE MAS O MENOS...
 AL DOPE
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Wave height analyzer
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Este nombre lo invente yo al igual que el primero, como hago con esto? este
 algoritmo lo invente yo...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Este algoritmo tiene como finalidad determinar cual de todos los contornos
 que se encuentran en la imagen corresponde a la altura de ola que se este
 analizando.
 Para lograrlo requiere de la siguiente informacion.
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $I_{mn}$
\end_inset

 la imagen de entrada, preprocesada de manera tal que 
\begin_inset Formula $I_{mn}\ni a_{ij}=1$
\end_inset

 si y solo si 
\begin_inset Formula $a_{ij}$
\end_inset

 pertenece a un contorno detectado (por simplicidad asumamos 
\begin_inset Formula $n$
\end_inset

 impar).
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $h_{0}$
\end_inset

 el valor de la altura de ola inicial en pixels, esto es, el numero de fila
 en la imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 en la que se encuentra la altura inicial (
\begin_inset Formula $0\leq h_{0}<m$
\end_inset

).
 
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $V$
\end_inset

 una constante numerica predefinida representando la maxima variancia de
 altura de ola aceptable en pixels (esto es la cantidad maxima de pixels
 aceptables que puede cambiar la ola de un paso al otro).
\end_layout

\begin_layout Standard
Se asume ademas que el movimiento de la ola se realiza sobre el eje 
\begin_inset Formula $y$
\end_inset

, esto es, dada la columna k-esima (
\begin_inset Formula $I_{*k}$
\end_inset

) de la imagen, podemos observar la diferencia de altura a medida que nos
 movemos verticalmente sobre las diferentes filas de 
\begin_inset Formula $I$
\end_inset

.
\end_layout

\begin_layout Standard
Teniendo en cuenta que como objetivo principal, este algoritmo debe obtener
 la altura de ola en un punto determinado de la imagen (esto es, en una
 columna determinada), se asume que este punto se encuentra sobre la columna
 
\begin_inset Formula $\frac{m}{2}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Podemos describir entonces el funcionamiento del algoritmo como:
\end_layout

\begin_layout Enumerate
Para cada columna 
\begin_inset Formula $I_{*k}:0\leq k<n$
\end_inset

, sea 
\begin_inset Formula $\bar{w}_{k}$
\end_inset

 la ultima altura calculada en la k-esima columna, buscamos la nueva altura
 
\begin_inset Formula $w_{k}$
\end_inset

de la siguiente forma: Partiendo de 
\begin_inset Formula $a_{\bar{w}_{k}k}\in I_{mn}$
\end_inset

, buscamos el 
\begin_inset Formula $i$
\end_inset

 tal que se cumpla 
\begin_inset Formula $a_{ik}=1\wedge\left|i-\bar{w}_{k}\right|\leq\left|j-\bar{w}_{k}\right|\forall j=0..m:\; a_{jk}=1$
\end_inset

, asignando entonces 
\begin_inset Formula $w_{k}=a_{ik}$
\end_inset

, en caso de que tal 
\begin_inset Formula $i$
\end_inset

 no exista, 
\begin_inset Formula $w_{k}=\bar{w}_{k}$
\end_inset

.
 En palabras, esto no es mas que encontrar el pixel marcado como verdadero
 que se encuentre mas cercano (en posicion) a la ultima altura calculada
 (
\begin_inset Formula $\bar{w}_{k}$
\end_inset

).
\end_layout

\begin_layout Enumerate
Sea 
\begin_inset Formula $k=\frac{m}{2}$
\end_inset

 la columna de mayor importancia (la que se esta analizando), se calcula
 la varianza 
\begin_inset Formula $v=\left|w_{k}-\bar{w}_{k}\right|$
\end_inset

.
 Si 
\begin_inset Formula $v\leq V$
\end_inset

 se termina el algoritmo y se devuelve 
\begin_inset Formula $v$
\end_inset

, caso contrario se continua con el siguiente paso.
\end_layout

\begin_layout Enumerate
Sea 
\begin_inset Formula $k=\frac{m}{2}$
\end_inset

, calculan las 
\begin_inset Formula $v_{i}=\left|w_{k-i}-\bar{w}_{k-i}\right|+\left|w_{k+i}-\bar{w}_{k+i}\right|,\; i=1,..,k-1$
\end_inset

 y se elije el 
\begin_inset Formula $i$
\end_inset

 tale que 
\begin_inset Formula $v_{i}\leq\min\{v_{j}\}:\: j=1,..,k-1$
\end_inset

.
 Una vez encontrado este 
\begin_inset Formula $i$
\end_inset

 se calcula la altura promedio entre estas 2 ultimas alturas de las columnas
 correspondientes, esto es, 
\begin_inset Formula $h=\frac{w_{k-i}+w_{k+i}}{2}$
\end_inset

 y devolvemos 
\begin_inset Formula $h$
\end_inset

 como altura.
\end_layout

\begin_layout Standard
Cada vez que finaliza el algoritmo se actualizan las ultimas alturas encontradas
 para evitar acumulacion de error.
 
\end_layout

\begin_layout Standard
Las 
\begin_inset Formula $\bar{w_{k}}$
\end_inset

de cada una de las columnas, son inicializadas por defecto con el valor
 
\begin_inset Formula $h_{0}$
\end_inset

.
\end_layout

\begin_layout Standard

\color red
Puede parecer que el paso 3 agrega complejidad inecesaria pero debido a
 que en ciertas situaciones (por problemas de luz o de entorno), la deteccion
 de contornos no se realiza correctamente evitando la deteccion de la ola
 (no se encuentra ningun contorno).
 Es por esto que hay que hacer el algoritmo lo mas robusto posible.
\end_layout

\begin_layout Section
Implementacion y funcionamiento el sistema
\end_layout

\begin_layout Standard
Tendriamos que poner en algun lado (no se donde) el tema de cuales fueron
 los problemas a solucionar y como se fueron solucionando, por ejemplo:
 buscar una camara de forma tal que cumpla con lo que se queria y ademas
 funcione en linux (en ningun lado pusimos esto que llevo bastante tiempo).
 Elegir una libreria de manejo de imagenes que sirviese.
\end_layout

\begin_layout Subsection
Requerimientos principales
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
REDACTAR BIEN TODO ESTO:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como objetivo principal, el sistema debía poder capturar la altura de la
 superficie libre del fluido a medir desde una camara (web/usb) y lograrlo
 en tiempo real.
 A continuacion se listan los requerimientos mas importantes que el sistema
 debia cumplir:
\end_layout

\begin_layout Itemize

\series bold
REQ1:
\series default
 Dada una camara web usb, poder capturar y procesar las imagenes a una velocidad
 no inferior a 15 fps (o 15 capturas por segundo) y una resolucion que permita
 una deteccion de altura con no mas de 0.5 cm de error.
\end_layout

\begin_layout Itemize

\series bold
REQ2:
\series default
 El sistema debía funcionar en una maquina estandar (esto es, que no se
 requiera de una supercomputadora para lograr la velocidad de procesamiento),
 ya que, como se menciono anteriormente, una de las ventajas del sistema
 era su bajo costo.(
\begin_inset Note Note
status open

\begin_layout Plain Layout
poner el porque de se uso C++ opencv abajo
\end_layout

\end_inset

).
\end_layout

\begin_layout Itemize

\series bold
REQ3:
\series default
 Ser facil de utilizar y configurar por cualquier persona (que no posea
 conocimientos previos) que use el sistema.(
\begin_inset Note Note
status open

\begin_layout Plain Layout
por eso se desarrollo una interfaz grafica con QT
\end_layout

\end_inset

).
\end_layout

\begin_layout Itemize

\series bold
REQ4:
\series default
 Tener una estructura (arquitectura) flexible que posibilite el desarrollo
 de futuras aplicaciones (que midan otras variables hidrodinamicas) o ser
 modificado por otras personas en el futuro.
\end_layout

\begin_layout Itemize

\series bold
REQ5:
\series default
 Contar con una interfaz grafica que permita mostrar los datos procesados
 y además la posibilidad de compararlos con los obtenidos 
\color red
por el otro sistema de medicion que actualmente esta siendo utilizado (Acoustic
 Doppler Velocimeter 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

)
\color inherit
 (
\begin_inset Note Note
status open

\begin_layout Plain Layout
por eso se realizo la ventana de analisis de postprocesso Qwt
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
Debido a que no existia ninguna restriccion sobre el lenguaje de programacion
 a utilizar, entorno sobre el cual desarrollar, ni tipos de librerias a
 emplear, se tomaron ciertas deciciones sobre como sería la implementacion
 del sistema, y teniendo en cuenta los requerimientos antes mencionados,
 se opto por lo siguiente:
\end_layout

\begin_layout Itemize

\series bold
Entorno
\series default
: Linux 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Lenguaje de programacion
\series default
: C++ 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Librerias de procesamiento grafico
\series default
: OpenCV 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Librerias de interfaz grafica (GUI
\begin_inset Note Note
status open

\begin_layout Plain Layout

\series bold
ref o nota al pie
\end_layout

\end_inset

)
\series default
: Qt 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Librerias adicionales
\series default
: Tinyxml 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

.
 Qwt 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

.
 v4l-utils 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ref
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En los siguientes parrafos se dará una breve explicacion del porque de éstas
 deciciones.
\end_layout

\begin_layout Standard
El sistema fue desarrollado en el entorno linux principalmente por comodidad
 y gusto, aún asi, las librerias utilizadas son multiplaforma por lo que
 deberia poder ser compilado en otras plataformas (exceptuando la aplicacion
 externa utilizada para configurar la camara web, que en el caso de windows,
 la aplicacion proveída por el manufacturador de la camara deberia bastar).
\end_layout

\begin_layout Standard
El lenguaje de programacion 
\shape italic
C++
\shape default
 fue elegido debido a que es un lenguaje de programacion con mayor performance
 en comparacion con otros, lo que era necesario para cumplir con el procesamient
o en tiempo real (
\series bold
REQ1
\series default
, 
\series bold
REQ2
\series default
).
 Por otro lado ya se poseian conocimientos previos del mismo (como asi tambien
 preferencia), lo que agilizaria el desarrollo.
\end_layout

\begin_layout Standard
Dentro de un gran conjunto de librerias de procesamiento grafico, se opto
 por 
\shape italic
OpenCV
\shape default
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

 ya que ésta esta principalmente orientada a sistemas que requieren de manipulac
ion de imagenes en tiempo real (real time computer vision systems) como
 la robotica.
 Además de que tiene un alto grado de maduración, está actualmente activa
 y existe mucha documentacion.
\end_layout

\begin_layout Standard
En cuanto al 
\series bold
REQ3
\series default
, para poder cumplirlo, necesariamente se requeria de una interfaz grafica
 para el usuario, por lo cual se decidio elegir 
\shape italic
Qt
\shape default

\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

 ya que posee una interfaz para C++, cubria con todas las necesidades que
 el sistema planteaba, era de facil integracion con 
\shape italic
OpenCV
\shape default
 y se poseia cierto grado de conocimiento previo sobre la misma.
\end_layout

\begin_layout Standard
Con respecto a las librerias adicionales, la que mayor impacto tiene sobre
 el sistema es 
\shape italic
Qwt
\shape default
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

 ya que 
\series bold
REQ5 
\series default
se basa en ésta.
 Fue elegida debido a que proveia la funcionalidad deseada de una manera
 muy sencilla y de facil integracion con las demas librerias (ya que es
 una extencion de 
\shape italic
Qt
\shape default
 - utilizada para la 
\shape italic
GUI
\shape default
 del sistema -).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Faltarian las librerias adicionales pero me parece que va agrandar esto
 al pedo, no tienen mucha importancia (no son principales).
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Arquitectura
\end_layout

\begin_layout Subsubsection
A nivel general
\end_layout

\begin_layout Standard
A un nivel macro, la arquitectura del sistema se la puede simplificar como
 se lo muestra en la figura 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref fig 5.1
\end_layout

\end_inset

.
 Esta decision fue tomada para poder cubrir el 
\series bold
REQ4
\series default
, esto es, flexibilidad para la facil integracion de posibles futuras aplicacion
es.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_arq_high_level.png
	lyxscale 80
	scale 30

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref fig 5.1
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se puede ver en el diagrama superior 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref fig 5.1
\end_layout

\end_inset

, el sistema consta de un modulo principal (
\series bold
\shape italic
I
\series default
mage
\series bold
P
\series default
rocessing
\series bold
S
\series default
ystem
\shape default
 Loader o 
\shape italic
IPS
\shape default
 Loader) el cual tiene como finalidad listar y mostrar todos los modulos
 
\shape italic
IPS
\shape default
 que encuentren 
\color red
(ya sean plugins o no)
\color inherit
 dando la posibilidad al usuario de elegir y cargar uno especifico.
 Estos 
\shape italic
IPS
\shape default
 tienen como objetivo encapsular una aplicacion con una finalidad especifica,
 que en el caso de este trabajo, es detectar la altura de la superficie
 libre de un fluido.
\end_layout

\begin_layout Standard
Cada 
\shape italic
IPS
\shape default
 esta conformado por 2 partes, una grafica (
\shape italic
IPS GUI
\shape default
) y una de procesamiento (
\shape italic
IPS Core
\shape default
).
 La primera, tiene como fin brindarle al usuario una forma facil y agil
 de configurar a la segunda, la cual en general, requiere de muchos pasos
 y parametros para poder ser utilizada correctamente.
 En esta ultima (
\shape italic
IPS Core
\shape default
) se encuentra toda la logica y algoritmos para el procesamiento de imagenes,
 que no depende en absoluto de la parte grafica para su funcionamiento,
 lo que permite, si se deseea, desarrollar nuevas aplicaciones sin la necesidad
 de implementar una interfaz grafica o aún más, modificar de manera sencilla
 el sistema para soportar otro tipo de librerias para la 
\shape italic
GUI
\shape default
.
\end_layout

\begin_layout Standard
Debido a que las aplicaciones que pueden ser desarrolladas requieren de
 una interfaz grafica, y que ademas, la configuracion se realiza en una
 fase previa al procesamiento de imagenes (antes de empezar a capturar y
 procesar las imagenes el 
\shape italic
IPS Core
\shape default
 debe estar configurado), se opto por ejecutar la interfaz grafica en un
 principio y que esta sea la encargada de ejecutar la otra parte (
\shape italic
IPS Core
\shape default
).
 Esto se lo puede ver en el diagrama anterior a travez de las flechas (
\shape italic
IPS Loader
\shape default
 --> 
\shape italic
IPS GUI
\shape default
, 
\shape italic
IPS GUI
\shape default
 --> 
\shape italic
IPS Core
\shape default
).
\end_layout

\begin_layout Subsubsection
A nivel de IPS
\end_layout

\begin_layout Standard
En este trabajo se creo una estructura general para todos los 
\shape italic
Image Processing System
\shape default
 que posibilitara la suficiente flexibilidad para las futuras aplicaciones
 a desarrollar.
 Esta estructura se aplica principalmente a la parte de procesamiento (
\shape italic
Core
\shape default
) ya que la interfaz grafica puede variar mucho de aplicacion en aplicacion.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_arq_ips.png

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
ref fig 5.2.2.1 ver de cambiar por la otra img alomejor (ver diagrama)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A grandes rasgos, se puede observar que el 
\shape italic
IPS Core
\shape default
 consta de dos modulos, por un lado el 
\shape italic
ImageGenerator
\shape default
, el cual, como su nombre lo indica, tiene como fin generar imagenes para
 ser procesadas, estas pueden provenir de una camara o bien de un archivo
 de video.
 Por otro lado se encuentra el 
\shape italic
ImageAnalyzer, 
\shape default
el cual se rige de sus unidades basicas funcionales llamadas 
\shape italic
ImageProcessor
\shape default
, las cuales realizan el veradero procesamiento de imagenes, cada uno con
 una funcionalidad determinada.
 El 
\shape italic
ImageAnalyzer
\shape default
 tiene entonces como fin, tomar del 
\shape italic
ImageGenerator
\shape default
 imagenes y procesarlas por medio de cada uno de los 
\shape italic
ImageProcessors
\shape default
 que contenga.
\end_layout

\begin_layout Standard
En la parte superior del diagrama se puede observar la interfaz grafica,
 la cual se comunica con el IPS Core, con el fin de poder configurar cada
 uno de estos 
\shape italic
ImageProcessors
\shape default
, que son las unidades basicas de procesamiento.
\end_layout

\begin_layout Standard
Gracias a esta arquitectura, el sistema es muy flexible en cuanto a la actividad
 que deba realizar (y por ende la aplicacion que se quiera desarrollar),
 ya que simplemente se basa en lo que los 
\shape italic
ImageProcessor
\shape default
 esten configurados para hacer.
\end_layout

\begin_layout Standard
A modo de ejemplo, en el caso particular de este trabajo se desarrollo un
 
\shape italic
IPS
\shape default
 con el fin de capturar la altura de superficie libre de un fluido, al cual
 se lo llamo como 
\series bold
WaveHeightIPS 
\series default
(
\shape italic
WHIPS
\shape default
).
 Para lograr la funcionalidad deseada se desarrollaron cuatro 
\shape italic
ImageProcessor
\shape default
 distintos los cuales se muestran en la siguiente figura.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_arq_whips.png

\end_inset


\end_layout

\begin_layout Standard
En los siguientes 
\begin_inset Note Note
status open

\begin_layout Plain Layout
capitulos?? o como pongo esto
\end_layout

\end_inset

 se explicara el funcionamiento detallado de cada uno de estos 
\shape italic
ImageProcessor.
\end_layout

\begin_layout Subsection
Diseño
\end_layout

\begin_layout Subsubsection
Preliminares
\end_layout

\begin_layout Standard
Comenzaremos describiendo el diseño del sistema al nivel de abstraccion
 sin entrar en detalles sobre el 
\shape italic
IPS
\shape default
 desarrollado para este trabajo, osea, se mostrará en un principio, como
 es el diseño de la maquinaria que permite la creacion de estos 
\shape italic
IPS
\shape default
.
\end_layout

\begin_layout Subsubsection
Nivel abstraccion
\end_layout

\begin_layout Standard
Como se menciono anteriormente, el sistema debia posibilitar el desarrollo
 de futuras aplicaciones (
\series bold
REQ4
\series default
) de manera facil, para lograr esto, se modelo y encapsulo a cada posible
 aplicacion como un 
\shape italic
Image Processing System
\shape default
.
 Esto llevo a un 
\begin_inset Quotes eld
\end_inset

diseño de abstraccion
\begin_inset Quotes erd
\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
medio raro esto de diseño de abstraccion
\end_layout

\end_inset

 como se muestra a continuacion.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_abstract_design.png

\end_inset


\end_layout

\begin_layout Standard
En la imagen anterior se observa el diseño a grandes rasgos del sistema
 completo sin ningun detalle de la interfaz de cada una de las clases, como
 asi tambien, se obviaron varias clases auxiliares para evitar complejidad
 en el esquema.
 Listaremos a continuacion, en forma general, las funcionalidades principales
 de cada una de estas clases.
\end_layout

\begin_layout Itemize

\series bold
MainProgram
\series default
: Programa principal encargado de cargar los 
\shape italic
IPS
\shape default
 y ejecutarlos segun corresponda.
\end_layout

\begin_layout Itemize

\series bold
IPSFactory
\series default
: Clase auxiliar encargada de buscar y listar todos los 
\shape italic
IPS
\shape default
 disponibles.
\end_layout

\begin_layout Itemize

\series bold
GUIImageProcessingSystem
\series default
: Clase abstracta que brinda la interfaz de como deben ser los 
\shape italic
IPS
\shape default
 
\shape italic
GUI
\shape default
 a ser implementados.
\end_layout

\begin_layout Itemize

\series bold
ConfigWindowManager
\series default
: Manejador de ventanas, encargado de organizarlas y mostrarlas segun correspond
a.
\end_layout

\begin_layout Itemize

\series bold
ConfigWindow
\series default
: Abstraccion de como debe ser toda ventana de configuracion.
\end_layout

\begin_layout Itemize

\series bold
ImageGenerator
\series default
: Clase encargada de abstraer la generacion de imagenes, ya sea de archivo
 o de una videocamara.
\end_layout

\begin_layout Itemize

\series bold
ImageProcessingSystem
\series default
: Abstraccion de como deben ser los 
\shape italic
IPS
\shape default
 
\shape italic
Core
\shape default
 a ser implementados.
\end_layout

\begin_layout Itemize

\series bold
ImageAnalyzer
\series default
: Clase encargada de contener y ejecutar en orden a los ImageProcessor que
 contenga.
 Representa el modulo de procesamiento de imagenes.
\end_layout

\begin_layout Itemize

\series bold
ImageProcessor
\series default
: Abstraccion de como debe ser la unidad basica de procesamiento.
\end_layout

\begin_layout Standard
Como se puede observar, y como se menciono en el capitulo de la arquitectura
 del sistema, se diferencian 2 partes (separadas por la linea discontinua
 celeste).
 En la fraccion superior se encuentra el denominado 
\shape italic
IPS Core
\shape default
 (donde se realiza el procesamiento real de las imagenes), mientras que
 en la parte inferior se encuentran el programa principal (conformado por:
\shape italic
 MainProgram
\shape default
 y 
\shape italic
IPSFactory
\shape default
) y el 
\shape italic
IPS GUI
\shape default
.
 El diseño en mayor detalle de cada una de estas partes seran descriptas
 a continuacion.
\end_layout

\begin_layout Subsubsection
IPS Core
\end_layout

\begin_layout Standard
El nucleo de procesamiento se encuentra en este modulo.
 A modo simplificado, el diseño de clases del IPS Core se puede observar
 en la siguiente diagrama:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename imagenes/img_disenio_IPS_Core.png
	lyxscale 80

\end_inset


\end_layout

\begin_layout Standard
Describiremos a continuacion, de manera detallada, la funcionalidad de cada
 uno de las clases.
\end_layout

\begin_layout Itemize

\series bold
Frame
\series default
: Es el tipo de dato con la que se maneja el sistema para almacenar la imagen
 capturada por el dispositivo con el tiempo de captura asociada.
\end_layout

\begin_layout Itemize

\series bold
FrameListener, FrameEmitter
\series default
: Funcionan en conjunto como notificador (
\shape italic
FrameEmitter
\shape default
) y receptor -procesador- (
\shape italic
FrameListener
\shape default
) de 
\series bold
Frame
\series default
.
 Esto es lo que se denomina 
\shape italic
Observer
\shape default
 en patrones de diseño
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
ImageGenerator
\series default
: Clase encargada de abstraer la generacion de imagenes.
 Dependiendo del metodo llamado el 
\shape italic
ImageGeneretor
\shape default
 puede ser configurado para obtener imagenes desde una videocamara (
\shape italic
createDevice(cameraID)
\shape default
) o bien desde un archivo de video (
\shape italic
createDevice(videoFilePath)
\shape default
).
 Ademas brinda 2 opciones para devolver nuevos 
\series bold
Frame
\series default
, por un lado los puede generar automaticamente (si se llama a 
\shape italic
startGenerating()
\shape default
) y distribuyendolos/notificando a los 
\series bold
FrameListener
\series default
 asociados (asumiendo que ya fueron asociados por medio del metodo 
\shape italic
addNewListener
\shape default
), o puede hacerlo a pedido (por medio de la llamada 
\shape italic
captureFrame(Frame)
\shape default
) devolviendo de a un único 
\series bold
Frame
\series default
.
 
\shape italic
\color red
Ademas, en caso de ser necesario, tener la posibilidad de realizar buffering
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref
\end_layout

\end_inset

 agilizando por medio de la paralelizacion, la captura de frames desde el
 dispositivo (esto no se implemento debido a que se pudo cumplir con la
 velocidad requerida).
\end_layout

\begin_layout Itemize

\series bold
ImageProcessor
\series default
: Abstraccion de la unidad base funcional, esto es, toda transformacion,
 manipulacion y analisis que se haga sobre las imagenes tomadas (
\series bold
Frame
\series default
) se realiza por medio de un 
\series bold
ImageProcessor
\series default
.
 Como se puede ver, existen 4 metodos principales puramente virtuales, los
 cuales deben ser implementados por aquellos que hereden de éste.
 Estos son: 
\shape italic
getParam
\shape default
, 
\shape italic
setParam
\shape default
, utilizados para configurar el ImageProcessor, mientras que 
\shape italic
processData(Image_t)
\shape default
, 
\shape italic
processData(GPUImage_t)
\shape default
, determinan donde se realiza el procesamiento de la imagen.
 La existencia de este último (
\shape italic
processData(GPUImage_t)
\shape default
) es debido a que en un principio se planteo la posibilidad de realizar
 analisis mas exaustivos sobre imagenes de mayor tamaño lo que necesariamente
 requeria un poder de procesamiento mucho mayor, pero con la condicion de
 mantener la velocidad, para esto, se considero la posibilidad de realizar
 este trabajo en la GPU
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref GPU
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
ImageAnalyzer
\series default
: Clase encargada de contener y almacenar ordenadamente a los 
\series bold
ImageProcessor 
\series default
utilizados para la transformacion/analis del 
\series bold
Frame
\series default
.
 En conjunto con los 
\series bold
ImageProcessor
\series default
 conforma la unidad principal de procesamiento.
 Debido a que el procesamiento del 
\series bold
Frame
\series default
 se realiza de manera secuencial, la orden de ejecucion de cada 
\series bold
ImageProcessor 
\series default
esta dada por el orden en el que son agregados al 
\series bold
ImageAnalyzer 
\series default
(por medio del metodo 
\shape italic
addNewProcessor
\shape default
), ademas, como se puede observar, el 
\series bold
Frame 
\series default
puede ser analizado tanto en CPU como en la GPU si cada uno de los 
\series bold
ImageProcessor
\series default
 cuentan con la implementacion correspondiente.
 Ademas de esto, se puede realizar un tracking del proceso por medio del
 parametro adicional 
\shape italic
trackProcess
\shape default
, el cual permite recopilar informacion sobre el tiempo invertido en procesar
 el 
\series bold
Frame
\series default
 en cada uno de los 
\series bold
ImageProcessor
\series default
.
\end_layout

\begin_layout Itemize

\series bold
ImageProcessingSystem
\series default
: Abstraccion de un 
\shape italic
IPS Core
\shape default
.
 Tiene asociado un nombre e informacion (sobre que hace) que lo identifican
 (
\shape italic
getName()
\shape default
, 
\shape italic
getInfo()
\shape default
 respectivamente).
 Los metodos a ser implementados por cada uno de los 
\shape italic
IPS Core
\shape default
 desarrollados son solamente 2: 
\shape italic
initialize()
\shape default
 y 
\shape italic
execute()
\shape default
.
 La primera es la que carga todo lo necesario para su correcto funcionamiento,
 mientras que la segunda, es la encargada de realizar el proceso completo
 asociado al 
\shape italic
IPS
\shape default
 (esto es, tomar y procesar los 
\series bold
Frame
\series default
).
\end_layout

\begin_layout Subsubsection
IPS GUI
\end_layout

\begin_layout Subsection
WHIPS
\end_layout

\begin_layout Standard
Aca deberiamos explicar en detalle sobre la aplicacion desarrollada para
 este trabajo (esto es el WHIPS)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Bradski08"
key "key-1"

\end_inset

Bradski, Gary & Kaehler, Adrian.
 
\begin_inset Quotes eld
\end_inset

Learning OpenCV: Computer Vision with the OpenCV Library
\begin_inset Quotes erd
\end_inset

.
 2008.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Brady07"
key "key-1"

\end_inset

P.D.M.
 Brady , M.
 Boutounet and S.
 Beecham.
 
\begin_inset Quotes eld
\end_inset

Free Surface Monitoring Using Image Processing
\begin_inset Quotes erd
\end_inset

.
 University of Technology Sydney, NSW, 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Zhang"
key "key-2"

\end_inset

Rong Zhang .
 
\begin_inset Quotes eld
\end_inset

Image Rectification: Remove Projective and Affine Distortions
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Perez09"
key "key-3"

\end_inset

Perez Muñoz, Juan C.
 
\begin_inset Quotes eld
\end_inset

Optimización no lineal y calibración de cámaras fotográficas
\begin_inset Quotes erd
\end_inset

.
 Medellín, 2009.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Nader08"
key "key-4"

\end_inset

Ehsan Nadernejad, Sara Sharifzadeh and Hamid Hassanpour.
 
\begin_inset Quotes eld
\end_inset

Edge Detection Techniques: Evaluations and Comparisons
\begin_inset Quotes erd
\end_inset

.
 Applied Mathematical Sciences, Vol.
 2, 2008.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

S.
 Barreto Melo.
 
\begin_inset Quotes eld
\end_inset

Transformaciones geométricas sobre imágenes digitales
\begin_inset Quotes erd
\end_inset

.
 Universidad Distrital Francisco José de Caldas.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Rob11"
key "key-1"

\end_inset

Robert Laganière.
 
\begin_inset Quotes eld
\end_inset

OpenCV 2 Computer Vision Application Programming Cookbook
\begin_inset Quotes erd
\end_inset

.
 2011
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Gam94"
key "key-1"

\end_inset

Gamma, Helm, Johnson, Vlissides.
 
\begin_inset Quotes eld
\end_inset

Design Patterns: Elements of Reusable Object Oriented Software
\begin_inset Quotes erd
\end_inset

.
 1994
\end_layout

\end_body
\end_document
