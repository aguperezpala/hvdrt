#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
Introduccion
\end_layout

\begin_layout Standard

\color red
En algun lado tenemos que poner que trabajamos con el laboratorio de hidraulica,
 puede ser aca en la intro o puede ser en el cap Aplicaion en un canal 2D....
\end_layout

\begin_layout Subsection
Motivaciones
\end_layout

\begin_layout Standard
En la modelación física de laboratorio se emplean en muchos casos instrumentos
 costosos para la medición de variables hidrodinámicas tales como velocidades,
 variaciones de niveles, presiones, trayectorias de las partículas, turbulencia,
 o variables de dinámica sedimentaria, como erosiones de playas, erosiones
 en las pilas de puentes.
 
\end_layout

\begin_layout Standard
Todos los instrumentos modernos de medición de laboratorio requieren una
 buena experiencia por parte del usuario, como en el caso del PIV
\shape italic
\color blue
 ref
\shape default
\color inherit
 (Particle Image Velocimeter), donde se utilizan sensores muy delicados
 como el laser, que inclusive pueden causar daños a las personas que lo
 utilizan sin las adecuadas precauciones.
 En otros casos, los instrumentos que se suelen utilizar son de tipo intrusivos,
 como en el caso del ADV 
\shape italic
\color blue
ref
\shape default
\color inherit
 (Acoustic Doppler Velocimeter), o de los sensores de nivel resistivos,
 que se sumergen directamente en el fluido; asimismo, tales instrumentos
 se estropean con el uso.
 Además, todos los sensores son específicos para la medición de las variables
 en un cierto rango de escala espacio-temporal, en algunos casos se los
 utilizan solamente en ensayos bidimensionales, determinan un parámetro
 en un cierto volumen de fluido, no pueden describir los procesos cerca
 de los contornos, dependen de la siembra de partículas en el fluido, se
 corroen si el agua es salada, etc.
 
\end_layout

\begin_layout Standard
En este trabajo se desarrolla un sistema de medición y análisis de variables
 hidrodinámicas en laboratorio mediante técnicas de video con cámaras de
 alta definición.
 Estas técnicas tienen diferentes ventajas con respecto a los métodos e
 instrumentos tradicionales: son técnicas no intrusivas, económicas, son
 fácilmente utilizables por usuarios con poca experiencia en trabajos de
 laboratorio, y son muy flexibles porqué se pueden aplicar a diferentes
 tipos de mediciones y a diferentes escalas espacio-temporales de los procesos.
 
\end_layout

\begin_layout Standard
La ventaja principal de los instrumentos tradicionales es la elevada precisión
 de la medición que tienen que realizar.
 La exactitud de las mediciones que se pueden realizar con video cámaras
 depende de la definición de las mismas, con lo cual un aumento en la precisión
 requiere un costo económico mayor en la adquisición de la misma.
 Sin embargo en aplicaciones ingenieriles de laboratorio, una video cámara
 de alta definición estándar puede ser suficiente para el nivel de detalle
 requerido.
 Este aspecto será analizado en este proyecto, en particular para realizar
 mediciones de niveles con la suficiente precisión.
 
\end_layout

\begin_layout Standard
En mediciones de campo, las muestras con video cámaras de alta definición
 ofrecen ya muchas aplicaciones practicas y muy funcionales, por ejemplo
 para la detección de la erosión costera y en la determinación de parámetros
 de oleaje (
\begin_inset CommandInset citation
LatexCommand cite
key "key-7"

\end_inset

).
 En laboratorio, aunque en los últimos años ya se están empleando estas
 técnicas en el estudio de variables hidrodinámicas, no se ha alcanzado
 un nivel de optimización en el procesado de las imagenes para que el instrument
o sea comparable con la alta definición en la adquisición de datos de los
 muestreos con instrumentos tradicionales.
 
\end_layout

\begin_layout Standard
Las aplicaciones de estas técnicas en laboratorio son múltiples en los campos
 de la mecánica de fluidos y de la dinámica sedimentaria, entre otros.
 En principio, se implementará una técnica para la adquisición de datos
 de altura de ola en tiempo real, pero la metodología servirá como punto
 de partida para las mediciones de otros parámetros hidrodinámicos y sedimentoló
gicos de interés.
 
\end_layout

\begin_layout Subsection
Objetivos
\end_layout

\begin_layout Standard
El objetivo principal de este trabajo es optimizar la toma de datos de la
 variable 
\begin_inset Quotes eld
\end_inset

altura de la superficie libre
\begin_inset Quotes erd
\end_inset

 (altura de ola) mediante video cámaras de alta definición, durante la realizaci
ón de ensayos de laboratorio con un canal bidimensional de oleaje.
 La adquisición de datos de altura de ola en tiempo real se realiza en la
 actualidad mediante el empleo de sensores de niveles intrusivos (se sumergen
 en el fluido) de tipo resistivos que brindan una frecuencia de muestreo
 de hasta 100 Hz.
 En la mayoría de los trabajos que se realizan en el campo de la ingeniería
 marítima o de costas, es suficiente un muestreo de 20-25 Hz para medir
 y procesar la altura de ola que se genera en laboratorio.
 
\end_layout

\begin_layout Standard
Las técnicas de video a implementar deberán en primer lugar rectificar las
 imágenes a procesar y realizar muestreos de las variables a medir con tomas
 de imagenes de alta definición de frecuencias igual o superiores a los
 20 Hz.
 
\end_layout

\begin_layout Standard
Durante los ensayos estas tomas deberán permitir la visualización en tiempo
 real de la variación de la variable a medir de manera tal que el funcionamiento
 de esta metodología pueda ser equivalente (dentro de una precisión admitida)
 a las mediciones realizadas con los instrumentos tradicionales para estudios
 en el campo de la ingeniería.
 
\end_layout

\begin_layout Section
Fundamentos de hidrodinamica marina
\end_layout

\begin_layout Subsection
Introduccion
\end_layout

\begin_layout Standard
Las olas del oceano son movimientos ondulatorios que ponen de manifiesto
 la propagacion de energia mecánica entre la superficie marina y la atmosfera.
 Éstas son generadas por distintos factores naturales (viento, perturbaciones
 meterológicas, terremotos, etc).
 Las olas se propagan debido a la fuerza de gravedad y tension superficial
 que tienden a restaurar la forma lisa de la superficie, provocando el avance
 de la onda.
 
\end_layout

\begin_layout Standard
De manera esquematica, en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Distribucion-energética-de"

\end_inset

 se puede observar la energia de las ondas de superficie asociadas a cada
 frecuencia.
 En este trabajo se trabajara con las olas pertenecientes a las frecuencias
 
\shape italic
\color blue
agregar frecuencias de ondas con las que se trabajan en el lab.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_tam_olas.png
	lyxscale 50
	width 70page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Distribucion-energética-de"

\end_inset

Distribucion energética de las ondas de superficie
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Matematicamente se puede describir a las olas, en forma general, como oscilacion
es uniformes y periodicas de la superficie del agua, distinguiendo dos tipos:
 ondas progresivas (se propagan en una profundidad constante manteniendo
 su forma) y ondas estacionarias (aquellas que no se propagan); en este
 trabajo se analizan las primeras.
 Existen distintas magnitudes que caraterizan a las ondas y algunas definiciones
 utiles para representarlas, estas son:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\eta$
\end_inset

: Desplazamiento de la superficie libre (desplazamiento vertical de la superfici
e del fluido con respecto a un nivel medio de referencia NM (MWL)).
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $T$
\end_inset

: Periodo de la onda.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $L$
\end_inset

: Longitud de la onda.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $cresta$
\end_inset

: Punto en el que la superficie libre alcanza un un máximo.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $seno$
\end_inset

: Punto en el que la superficie libre alcana un minimo.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $pasoporcero$
\end_inset

: Puntos en el que la superficie libre interseca al nivel medio de referencia.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $H$
\end_inset

: Altura de onda (distancia vertical total entre seno y cresta).
\end_layout

\begin_layout Itemize
\begin_inset Formula $A_{c}$
\end_inset

: Amplitud de la cresta (distancia vertical maxima entre nivel de reposo
 y cresta).
\end_layout

\begin_layout Itemize
\begin_inset Formula $A_{s}$
\end_inset

: Amplitud del seno (distancia vertical maxima entre nivel de reposo y seno).
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $nivelenreposo$
\end_inset

: NR (SWL) nivel correspondiente en ausencia de olas.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $h$
\end_inset

: profundidad o calado (distancia entre el fondo y el NR, en caso de presencia
 de ondas, la referencia es NM).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_param_onda.png
	width 60page%
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Parámetros asociados a la onda
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Parametros de las ondas"

\end_inset


\end_layout

\begin_layout Standard
En general, las teorias de ondas, tienen como objetivo calcular la 
\shape italic
celeridad 
\shape default
o
\shape italic
 velocidad de fase
\shape default
 (cuando las magnitudes 
\begin_inset Formula $H$
\end_inset

, 
\begin_inset Formula $L$
\end_inset

 o 
\begin_inset Formula $h$
\end_inset

 son conocidas), que es la velocidad de propagacion 
\begin_inset Formula $C$
\end_inset

, definida como
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
C=\frac{L}{T}(m/s)\quad o\quad C=\frac{\omega}{\kappa}(m/s)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $\kappa$
\end_inset

 es el 
\shape italic
numero de onda
\shape default
 definida como
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\kappa=\frac{2\pi}{L}(1/m)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
y 
\shape italic

\begin_inset Formula $\omega$
\end_inset

 
\shape default
la
\shape italic
 frecuencia angular 
\shape default
definida como
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\omega=\frac{2\pi}{T}(1/s)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Utilizando estos parametros se puede caracterizar la superficie libre de
 las ondas de tipo estacionarias como
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\eta(x,t)=A\cos\kappa x\cos\omega t\end{equation}

\end_inset


\end_layout

\begin_layout Standard
las cuales se caracterizan por tener su evolución espacial y temporal desacoplad
a 
\shape italic
\color blue
ref formula libro de paolo (no el de los volumenes si no el otro
\shape default
\color inherit
).
 Este tipo de ondas no progresa en el espacio oscilando verticalmente entre
 puntos fijos llamados nodos.
\end_layout

\begin_layout Standard
Por otro lado se encuentran las ondas progresivas, donde su movimiento temporal
 y espacial estan acoplados, dando lugar a la siguiente formula, la cual
 caracteriza su superficie libre
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\eta(x,t)=A\cos(\kappa x-\omega t)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
propagandose y manteniendo su forma en la direccion positiva del eje 
\begin_inset Formula $x$
\end_inset

 a una velocidad 
\begin_inset Formula $C$
\end_inset


\shape italic
\color blue
donde metemos la ref al libro?
\shape default
\color inherit
.
\end_layout

\begin_layout Subsection
Teoria lineal de ondas
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout

\shape italic
\color blue
La teoria lineal de ondas presenta numerosas ventajas con respecto a las
 otras, estas son: su simplicidad en comparacion con las otras teorias;
 el nivel de reposo de la onda coincide con el nivel medio; su caracter
 lineal posibilita la eliminacion de terminos no lineals dando a lugar solucione
s mas sencillas; la solucion es lienal y puede ser usada como base para
 encontrar otras soluciones por superposicion.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La teoria lineal de ondas presenta numerosas ventajas con respecto a las
 otras, principalmente debido a su simplicidad 
\shape italic
\color blue
ref libro donde explique esta teoria
\shape default
\color inherit
.
\end_layout

\begin_layout Standard
Se consideran ademas olas de forma permanente sobre un fondo horizontal
 e impermeable sobre un plano bidimensional.
\end_layout

\begin_layout Standard
En esta teoria existe un eje horizontal de simetria que es el nivel de reposo
 donde se cumple que 
\begin_inset Formula $A_{c}=A_{s}$
\end_inset

 lo que nos da 
\begin_inset Formula $H=A_{c}+A_{s}$
\end_inset

 donde 
\begin_inset Formula $A_{c}=A_{s}=A$
\end_inset

 quedando 
\begin_inset Formula $H=2A$
\end_inset

, donde 
\begin_inset Formula $A$
\end_inset

 se define simplemente como magnitud.
\end_layout

\begin_layout Standard
Sea
\begin_inset Formula $\Phi(x,z,t)$
\end_inset

 el 
\shape italic
potencial de velocidades 
\color blue
ref al libro
\shape default
\color inherit
, se lo puede expresar de diferentes formas, pero la estructura es siempre
 la misma, donde se pueden identificar tres partes diferentes: (1) el módulo
 o magnitud del potencial dado 
\begin_inset Formula $g\frac{A}{\omega}$
\end_inset

 (siendo 
\begin_inset Formula $g$
\end_inset

 la gravedad, 
\begin_inset Formula $A$
\end_inset

 amplitud, 
\begin_inset Formula $\omega$
\end_inset

 la frecuencia angular); (2) una funcion de profundidad 
\begin_inset Formula $\cosh\kappa(h+z)/\cosh\kappa h$
\end_inset

 (donde 
\begin_inset Formula $h$
\end_inset

 es la profundidad o calado y
\begin_inset Formula $\kappa$
\end_inset

 el numero de onda); (3) una funcion 
\begin_inset Formula $(\kappa x-\omega t)$
\end_inset

 que relaciona 
\begin_inset Formula $x$
\end_inset

 con 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Standard
A este potencial le corresponde una superficie libre en 
\begin_inset Formula $z=0$
\end_inset

 dada por
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\eta(x,t)=\frac{1}{g}(\frac{\partial\Phi}{\partial t})=A\cos(\kappa x-\omega t)=\frac{H}{2}\cos(\kappa x-\omega t)\label{eq:1.77}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Esta ultima expresion corresponde a una onda que se propaga con una celeridad
 
\begin_inset Formula $C=\omega/\kappa=L/T$
\end_inset

 en el sentido positivo del eje 
\begin_inset Formula $x$
\end_inset

 
\shape italic
\color blue
ref al libro?
\shape default
\color inherit
.
 A modo de ejemplo se puede observar la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Propagación-del-perfil"

\end_inset

ref a figura donde dados dos tiempos 
\begin_inset Formula $t_{1}<t_{2}$
\end_inset

, se marca el mismo punto sobre el perfil de la onda y se diferencian los
 distintos puntos sobre el eje 
\begin_inset Formula $x$
\end_inset

 (
\begin_inset Formula $x_{1}$
\end_inset

y 
\begin_inset Formula $x_{2}$
\end_inset

), que al igual que los tiempos 
\begin_inset Formula $t_{1},t_{2}$
\end_inset

 varian ya que las variables 
\begin_inset Formula $x,t$
\end_inset

 se encuentran acopladas como lo indica la ecuacion 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:1.77"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_propagacion_lineal_onda.png
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Propagación-del-perfil"

\end_inset

Propagación del perfil de la onda
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Oleaje irregular
\end_layout

\begin_layout Standard
El oleaje irregular puede ser considerado como la superposicion de un gran
 numero (o infinito) de componentes correspondientes a ondas con diferentes
 periodos, alturas y direcciones.
 Este conjunto de ondas forman un 
\shape italic
grupo de ondas 
\shape default
el cual se mueve con una velocidad equivalente a la mitad del promedio de
 las velocidades de sus componentes.
 Analogamente, la energia espectral de las olas (explicado en el siguiente
 capitulo), no se mueve a la velocidad de la ola en si sino a la velocidad
 del grupo de olas.
 En la siguiente imagen 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Solapamiento-de-trenes"

\end_inset

 se muestra como 2 
\begin_inset Quotes eld
\end_inset

trenes
\begin_inset Quotes erd
\end_inset

 de de olas (lineas punteadas y finas) interfieren formando un 
\shape italic
grupo de ondas 
\shape default
de mayor amplitud (linea gruesa).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_irregular_wave_group.png
	width 40page%
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Solapamiento-de-trenes"

\end_inset

Solapamiento y grupos de trenes de ondas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nuevamente basandonos en 
\shape italic
\color blue
ref al libro...
 queda bien eso 
\begin_inset Quotes eld
\end_inset

basandonos en
\begin_inset Quotes erd
\end_inset

 
\shape default
\color inherit
la representacion de la superficie libre de este tipo de oleaje puede expresarse
 como 
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\eta(x,y,t)=\overset{\infty}{\underset{m=1}{\sum}}\overset{\infty}{\underset{n=1}{\sum}}A_{mn}\cos(\kappa_{m}\cos\theta_{n}x+\kappa_{m}\sin\theta_{n}y-2\pi f_{m}t+\epsilon_{mn})\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Donde 
\begin_inset Formula $A_{mn}$
\end_inset

y 
\begin_inset Formula $\epsilon_{mn}$
\end_inset

 representan la amplitud y la fase correspondiente a cada una de las componontes
 cuyas frecuencias varian en el rango 
\begin_inset Formula $f_{m}$
\end_inset

a 
\begin_inset Formula $f_{m}+\Delta f_{m}$
\end_inset

 y el ángulo de incidencia en el rango 
\begin_inset Formula $\alpha_{m}$
\end_inset

 a 
\begin_inset Formula $\alpha_{m}+\Delta\alpha_{m}$
\end_inset

.
 Las variables 
\begin_inset Formula $A_{mn}$
\end_inset

 y 
\begin_inset Formula $\epsilon_{mn}$
\end_inset

son aleatorias y 
\begin_inset Formula $\kappa_{m}$
\end_inset

es el numero de onda asociado a la m-esima onda 
\shape italic
\color blue
ref libro?
\shape default
\color inherit
.
\end_layout

\begin_layout Standard
Esta expresion sirve como base para la definicion del 
\shape italic
espectro de energia
\shape default
, el cual se explica en el siguiente capitulo.
\end_layout

\begin_layout Subsection
Analisis del oleaje
\end_layout

\begin_layout Standard
Genéricamente a los movimientos correspondientes a la superficie del mar,
 que son ondas de gravedad, generadas por el viento y que se propagan desde
 el area de generacion perdiendo lentamente energia por firccion con la
 atmosfera y viscosidad molecular (hasta alcanzar las cosas), se lo conoce
 como Oleaje.
 Una manera simple de modelizar el comportamiento del oleaje es su descomposicio
n en una suma de trenes de ondas regulares de amplitudes, periodos y direcciones
 variables.
\end_layout

\begin_layout Standard

\shape italic
\color blue
alomejor agregar la fig 1 de la introduccion del volumen 2
\end_layout

\begin_layout Standard
La cantidad maxima de energia que puede existir en cada tren de ondas componente
s del oleaje esta regulada por los procesos de rotura y de interaccion entre
 las mismas.
 Para el caso de las olas generadas por accion del viento, se las puede
 clasificar como oleaje totalmente desarrollado (estado de equilibro logrado
 bajo la accion de un viento constante sobre una superficie ilimitada) o
 parcialmente desarrollado (oleaje en crecimiento, sucede cuando el tiempo
 minimo o distancia minima para llegar al estado desarrollado no es alcanzada)
\shape italic
\color blue
ref al libro
\shape default
\color red
.
\end_layout

\begin_layout Standard
El analisis del oleaje se puede realizar mediante 2 aproximaciones diferentes,
 por un lado el analisis estadistico o en el dominio de la probabilidad,
 y por el otro lado, el analisis espectral en el dominio de la frecuencia
 (utilizado en este trabajo).
\end_layout

\begin_layout Subsubsection
Análisis estadístico
\end_layout

\begin_layout Standard
En este enfoque, los parametros del oleaje (por ejemplo el desplazamiento
 de la superficie libre) son considerados como sucesos aleatorios ordinarios.
 Los valores medidos forman un conjunto de datos que son utilizados para
 expresar los resultados finales mediante las funciones de distribucion
 y densidad y los momentos estadisticos de las variables que se estan midiendo.
\end_layout

\begin_layout Standard
Este enfoque tiene la ventaja de ser sencillo e intuitivo, pero es deficiente
 a la hora de aportar informacion relativa a la direccion de propagacion
 del oleaje
\shape italic
\color blue
ref al libro
\shape default
\color inherit
.
\end_layout

\begin_layout Subsubsection
Análisis espectral
\end_layout

\begin_layout Standard
Tiene como objetivo la obtencion de la 
\shape italic
funcion de densidad espectral
\shape default
, la cual representa la energía total asociada a cada una de los trenes
 de ondas en que se puede descomponer un registro de oleaje en funcion de
 la frecuencia y de la dirección de propagación.
 Este enfoque es mas complejo que el anterior pero es mas adecuado para
 el analisis direccional del oleaje, lo que no quiere decir que pueda utilizado
 en conjunto como complemento del modelo anterior.
\end_layout

\begin_layout Standard
Existen 2 formas de obtener la 
\shape italic
funcion de densidad espectral 
\shape default
asociada a un conjunto de valores.
 Un metodo se basa en la realización de las transformadas de Fourier de
 la funcion de autocorrelación asociada a la variable medida en un punto
 (por ejemplo la superficie libre) y de la función de correlación cruzada
 entre dos variables de medida en el mismo punto, o de la misma variable
 en dos puntos diferentes.
 El segundo metodo se basa en descomponer el registro temporal en sus componente
s de Fourier 
\shape italic
\color blue
ref a esto
\shape default
\color inherit
, por medio de la tecnica 
\shape italic
Transformada Rápida de Fourier 
\shape default
o 
\shape italic
FFT
\color blue
ref
\color inherit
.
\end_layout

\begin_layout Subsection
Descripcion espectral del oleaje
\end_layout

\begin_layout Subsubsection
Metodo para la obtencion del espectro
\end_layout

\begin_layout Standard
En nuestro caso, es de interes obtener el espectro dado un registro del
 parametro 
\begin_inset Quotes eld
\end_inset

superficie libre
\begin_inset Quotes erd
\end_inset

 del oleaje.
 Este registro del oleaje viene dado por la funcion 
\begin_inset Formula $\eta(t)$
\end_inset

 (
\shape italic
\color blue
ref al libro donde sale esta funcion 2.3.1
\shape default
\color inherit
) donde nos da la altura de la superficie libre dado el tiempo 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Standard
Este metodo se basa en el teorema de Wiener - Kinchine
\shape italic
\color blue
ref a donde sea que haga falta
\shape default
\color inherit
partiendo de la funcion de autocorrelacion del registro, se aplica una transform
ada de fourier sobre la misma y se consigue el espectro de frecuencias deseado.
\end_layout

\begin_layout Standard
Para la realizacion de la transormada de fourier se emplea el algoritmo
 de la 
\shape italic
Transformada Rapida de Fourier (FFT)
\shape default
 
\shape italic
\color blue
ref
\shape default
\color inherit
, el cual permite eficientemente transformar directamente la serie temporal
 del registro al dominio frecuencial sin necesidad de determinar la funcion
 de autocorrelacion del mismo.
 El espectro de energia correspondiente a un registro dado por la funcion
 
\begin_inset Formula $\eta(t)$
\end_inset

 puede calcularse realizando la 
\shape italic
FFT 
\shape default
mediante:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
S(\omega)=\frac{1}{IR}\left[\overset{N}{\underset{n=1}{\sum}}\eta(n\Delta t)e^{i\omega n\Delta t}\Delta t\right]^{2}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $IR$
\end_inset

 es la longitud total del registro y 
\begin_inset Formula $\Delta t$
\end_inset

 es el intervalo de muestreo 
\shape italic
\color blue
ref de donde salio la form?
\shape default
\color inherit
.
\end_layout

\begin_layout Standard
El registro se divide en 
\begin_inset Formula $M$
\end_inset

 segmentos pequeños conteniendo igual cantidad de puntos (
\begin_inset Formula $N$
\end_inset

), separados por un intervalo constante (
\begin_inset Formula $\Delta t$
\end_inset

).
 El resultado se obtiene promediando los espectros obtenidos en las 
\begin_inset Formula $M$
\end_inset

 secciones.
\end_layout

\begin_layout Subsubsection
Parametros espectrales
\end_layout

\begin_layout Standard
Existen ciertos parametros que dan a conocer las caracteristicas principales
 del espectro del oleaje.
 Algunos de estos parametros aparecen frecuentemente en las funciones de
 distribucion asociadas al oleaje.
 A continuacion mencionaremos los mas relevantes para el caso de estudio
 presente.
\end_layout

\begin_layout Standard
Se define 
\shape italic
momento de orden n 
\shape default
de la funcion de densidad espectral como:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
m_{n}=\overset{\infty}{\underset{0}{\int}}\omega^{n}S(\omega)d\omega\,\:;n=0,1,2,...\end{equation}

\end_inset

 
\end_layout

\begin_layout Standard
Otro parametro de utilidad es
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
H_{s}=4.004\eta_{rms}=4.004\sqrt{m_{0}}\end{equation}

\end_inset

 
\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $H_{s}$
\end_inset

 es la altura de ola significante, o altura media de las 
\begin_inset Formula $N/3$
\end_inset

 mayores olas de un registro de superficie libre compuesto de 
\begin_inset Formula $N$
\end_inset

 olas.
\end_layout

\begin_layout Standard
Estos parametros seran utilizados en los siguientes puntos.
\end_layout

\begin_layout Subsection
Propiedades espectrales del oleaje: espectro de JONSWAP
\end_layout

\begin_layout Standard
La energia espectral alcanza su maximo en la 
\shape italic
frecuencia de pico
\shape default
, 
\begin_inset Formula $\omega=\omega_{p}$
\end_inset

 y decrece tanto hacia las altas como hacia las bajas frecuencias.
\end_layout

\begin_layout Standard
El espectro provee una buena representacion del oleaje solo cuando este
 puede representarse correctamente mediante la superposicion lienal de component
es sinusoidales.
 En el presente trabajo se trabajo con un espectro conocido como 
\shape italic
el espectro de JONSWAP
\shape default
 (JOint North Sea WAwe Project) 
\shape italic
\color blue
agregar ref
\shape default
\color inherit
 el cual extiende el espectro de 
\shape italic
Pierson-Moskowitz
\shape default
 (P-M) 
\shape italic
\color blue
ref
\shape default
\color inherit
.
 Este espectro esta basado en una extensa campaña de medidas llevada a cabo
 en el Mar del Norte entre 1968 y 1969, el recibio una aprobacion casi inmediata
 por parte de la comunidad cientifica una vez publicado, y es quizas el
 mas utilizado.
 La forma espectral propuesta es 
\shape italic
\color blue
agregar ref, segun el libro Hasselmann et al.(1973)
\shape default
\color inherit
:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
S(\omega)=\alpha g^{2}\omega^{-5}e^{-1.25\left(\frac{\omega}{\omega_{p}}\right)^{-4}}\gamma^{\delta}\end{equation}

\end_inset

 
\end_layout

\begin_layout Standard
con
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\delta=e^{-\frac{(\omega-\omega_{p})^{2}}{2\sigma_{0}^{2}\omega_{p}^{2}}}\quad y\quad\sigma_{0}=\begin{cases}
\sigma_{0}^{1} & para\;\omega\leq\omega_{p}\\
\sigma_{0}^{2} & para\;\omega>\omega_{p}\end{cases}\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\shape italic
\color blue
Pedirle a paolo en teoria la ultima version aca
\end_layout

\begin_layout Standard
el espectro de JONSWAP (
\shape italic
\color blue
ref
\shape default
\color inherit
) contiene 5 parametros 
\shape italic
\color blue
completar esto dependiendo lo que me diga paolo, pagina 137 pdf Formula
 96
\end_layout

\begin_layout Standard

\shape italic
\color blue
Faltaria agregar el tema de como se diferencia esta teoria utilizada y todo
 lo explicado anteriormente en laboratorio.
 Me parece que todo asi explicado queda medio colgado, preguntarle a paolo....
\end_layout

\begin_layout Section
Deteccion de la superficie libre en laboratorio
\end_layout

\begin_layout Subsection
Tipo de sensores
\end_layout

\begin_layout Standard
Existen una gran cantidad de instrumentos utilizados para medir la altura
 de la superficie libre del oleaje en laboratorio, cada uno con ventajas
 y desventajas asociadas, donde todos requieren una buena experiencia por
 parte del usuario para su correcta utilizacion y en general sus costos
 son elevados.
 Estos se los pueden clasificar como intrusivos o no intrusivos.
\end_layout

\begin_layout Subsubsection
Instrumentos intrusivos
\end_layout

\begin_layout Standard
Son aquellos que se introducen dentro de la zona que contiene el fluido
 a medir, en contacto con el mismo.
 Éstos tienen como desventaja que con el paso del tiempo, al estar en contacto
 con el medio, su durabilidad es menor, y en algunos casos limitan los tipos
 de fluidos que se pueden medir (algunos instrumentos no pueden medir agua
 salada).
 Ademas, estos sensores son especificos para la medicion de variables en
 un cierto rango de escala espacio-temporal, generan conflictos a la hora
 de medir los procesos cerca de los contornos, dependen de la siembra de
 particulas en el fluido, entre otras.
 
\end_layout

\begin_layout Standard
Por otra parte, estos instrumentos pueden brindar una alta frecuencia de
 muestreos con alta presicion.
\end_layout

\begin_layout Standard
Como ejemplo, podemos mencionar el ADV (Acoustic Doppler Velocimeter 
\shape italic
\color blue
ref
\shape default
\color inherit
), que es un sensor de nivel resistivo que trabaja altas frecuencias de
 muestro por voltaje.
\shape italic
\color blue
Completar con mas ejemplos, pedirle a paolo nombre de otros instrumentos
\end_layout

\begin_layout Subsubsection
Instrumentos no instrusivos
\end_layout

\begin_layout Standard
Son aquellos que no necesitan estar sumergidos ni en contacto con en el
 fluido.
 Algunos de estos instrumentos (como es el caso del PIV - Particle Image
 Velocimeter -
\shape italic
\color blue
ref?
\shape default
\color inherit
, LDV - Laser Doppler Velocimetry -
\shape italic
\color blue
ref?
\shape default
\color inherit
), funcionan por medio de sensores muy delicados como el laser, que en general,
 sin las precauciones adecuadas, puede generar daños a los seres humanos
 o dañar el sensor en si.
 A su vez, dentro de esta rama de instrumentos se encuentra el presentado
 en este trabajo, el cual utiliza tecnicas de procesamiento de imagenes
 para detectar la superficie libre.
\shape italic
\color blue
Preguntar a paolo por otros metodos
\end_layout

\begin_layout Subsection
Tecnicas basadas en procesamiento de imagenes
\end_layout

\begin_layout Standard
A diferencia de los intrsumentos tradicionales, los cuales son muy costosos
 pero que brindan una elevada presicion de la medicion que realizan, las
 técnicas basadas en procesamiento de imagenes (por medio de videocamaras)
 brindan una opcion alternativa de bajo costo, que requieren de poca experiencia
 por parte del usuario, no son peligrosos (ya que no pueden generar ningun
 daño fisico a personas ni instrumentos en si), tienen una mayor flexibilidad
 (aplicables a otros tipos de mediciones y a diferentes escalas espacio-temporal
es de los procesos
\shape italic
\color blue
que se refiere con 
\begin_inset Quotes eld
\end_inset

diferentes escalas espacio-temporales
\begin_inset Quotes erd
\end_inset


\shape default
\color inherit
) y en general, su presicion es limitada por la definicion de la camara
 utilizada, lo que a su vez, a mayor presicion, mayor costo.
 Sin embargo, con una camara de alta definicion standard puede ser suficiente
 para la aplicaciones ingenieriles de laboratorio, como lo es el fin de
 este trabajo (medir la altura de ola).
\end_layout

\begin_layout Standard

\shape italic
\color red
Las tecnicas analizadas en este trabajo se basan en el modelo de camaras
 
\begin_inset Quotes eld
\end_inset

pinhole
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

.
\end_layout

\begin_layout Standard
Para lograr obtener resultados adecuados es necesario capturar imagenes
 con la mayor calidad posible, ademas de una buena resolucion, es importante
 tener en cuenta varios factores del entorno donde se realizaran las muestras
 de laboratorio, como por ejemplo, luz ambiental, contraste de la superficie
 libre con respecto al fluido y paredes del canal, evitar suciedades en
 los vidrios laterales del canal, entre otras.
 Siempre tendiendo a minimzar la cantidad de ruido (zonas que pueden generar
 contornos que se confundan con la superficie libre, o zonas que puedan
 evitar la correcta captura de la misma).
\end_layout

\begin_layout Standard

\shape italic
\color blue
Probablemente este bueno agregar aca alguna imagen de como se toma la imagen
 desde la camara con respecto al canal y una mini intro.
\end_layout

\begin_layout Standard
Dentro del conjunto de tecnicas basadas en procesamiento de imagenes se
 pueden diferenciar aquellas que son en tiempo real y las que no, pero ambas,
 a grandes rasgos siguen un mismo proceso.
 Este proceso, que tiene como entrada una imagen y como salida la deteccion
 de alguna variable determinada (altura de la superficie libre) podemos
 describirlo, a grandes rasgos, como un conjunto de pasos (secuenciales)
 o sub-procesos:
\end_layout

\begin_layout Itemize
Rectificacion.
\end_layout

\begin_layout Itemize
Detección de contornos.
\end_layout

\begin_layout Itemize
Analisis y procesamiento.
\end_layout

\begin_layout Standard
Cada uno de estos pasos pueden ser llevados a cabo de distintas maneras
 y utilizando diferentes algoritmos o modelos matematicos.
 A continuacion se explican en mayor detalle cada uno de estos pasos.
\shape italic
\color blue
completar con info en general sobre las tecnicas actuales
\end_layout

\begin_layout Subsubsection
Rectificacion de imagen
\end_layout

\begin_layout Standard
Este proceso tiene como objetivo la transformacion de una imagen obtenida
 directamente desde el dispositivo (ya sea en tiempo real o mediante un
 archivo de video) y transformarla de manera tal que la imagen resultante
 contenga la menor cantidad de errores.
 Por un lado se encuentran los errores (distorciones) introducidos por el
 dispositivo de captura de imagen (videoc, que pueden ser radiales (relacionada
 con la forma del lente de la camara) y tangenciales (provenientes del proceso
 de ensamblaje de la camara en su totalidad)
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

.
 
\shape italic
\color blue
Aca podemos explayarnos bastante con los errores estos, no se si tiene sentido...
\end_layout

\begin_layout Standard
Por otro lado se encuentra el problema de la diferencia que existe entre
 el sistema de coordenadas del plano real el cual captura la camara y el
 sistema de coordenadas del mismo plano en la imagen que el dispositivo
 posee 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diferencia-de-perspectiva"

\end_inset

 (transformacion de perspectiva).
 Esto debido a que resulta practicamente imposible (siempre existe el error
 humano) colocar la videocamara de forma perpendicular a este plano, ademas
 de que no es conveniente (debido al angulo optimo en la que la camara debe
 ser colocada para evitar tomar la superficie del fluido a analizar, la
 cual genera interferencia en el procesamiento posterior).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_rectification_2.png
	lyxscale 50
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diferencia-de-perspectiva"

\end_inset

Diferencia de perspectiva entre la imagen en la camara y el plano real.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Imagen 1"

\end_inset


\end_layout

\begin_layout Standard
Para llevar a cabo la rectificacion, se utilizan diferentes metodos, entre
 ellos el modelo de transformada lineal directa (DTL) 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

, solucion por minimos cuadrados 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 y metodos alternativos 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

.
 
\shape italic
\color blue
Preguntarle a paolo que onda esto, yo los lei pero no me los acuerdo mucho
 como funcionaban, hace falta realmente acordarse de todo esto perfectamente
 para cuando se entregue la tesis?
\end_layout

\begin_layout Subsubsection
Detección de contornos
\end_layout

\begin_layout Standard
Esta etapa tiene como fin detectar los bordes asociados a la superficie
 libre que se encuentran en la imagen de entrada, minimizando la deteccion
 de bordes falsos (aquellos que pertenecen al entorno y no a la superficie
 libre en si).
\end_layout

\begin_layout Standard
En una primera instancia, se procede a disminuir la complejidad de la imagen
 reduciendo la cantidad de canales (colores) de la misma, en general, convirtien
dola a una imagen monocromatica.
\end_layout

\begin_layout Standard
En segundo lugar, se aplican una serie de filtros (o mascaras) con el fin
 de delimitar la zona que se quiere analizar, evitando procesar zonas que
 no son de interes y a su vez, eliminando posibles errores causados por
 falsos valores (esto es, los bordes falsos mencionados anteriormente).
 Por ultimo se realiza la deteccion de contornos sobre la imagen filtrada
 por medio de algun algoritmo.
 Existen varios metodos utilizados para detectar los bordes, alguno de estos
 se pueden ver en 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

.
\end_layout

\begin_layout Standard
A continuacion se muestra un ejemplo en el que la figura superior (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Imagen-rectificada-sin"

\end_inset

) es la imagen de entrada de este sub-proceso (ya rectificada) pero sin
 ningun filtro aplicado, mientras que la figura inferior (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Imagen-rectificada-luego"

\end_inset

) muestra la imagen de salida (de esta etapa) luego de haberla procesado
 con el algoritmo de deteccion de contornos.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_comp_canny1.png
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Imagen-rectificada-sin"

\end_inset

Imagen rectificada sin filtros.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_comp_canny2.png
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Imagen-rectificada-luego"

\end_inset

Imagen rectificada luego de aplicar el algoritmo de deteccion de contornos.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se puede ver, dependiendo del entorno de trabajo (luz, contraste de
 la superficie libre con respecto al canal, etc), el algoritmo utilizado,
 y los filtros aplicados, la existencia de bordes falsos puede generar mucho
 ruido e introducir errores a la hora de medir la altura de ola.
\end_layout

\begin_layout Standard

\shape italic
\color blue
agregamos algo mas? medio feo esta...
\end_layout

\begin_layout Subsubsection
Analisis y procesamiento
\end_layout

\begin_layout Standard
Una vez detectado los bordes de la imagen y en base a los algoritmos utilizados
 en la etapa anterior, se aplica cierta heuristica para diferenciar los
 bordes correspondientes a la altura de la superficie libre (llamemoslos
 
\shape italic
bordes positivos
\shape default
), de aquellos que no corresponden a la variable que se quiere analizar
 (lo que se denomina ruido o 
\shape italic
bordes negativos
\shape default
) como claramente se puede observar en la imagen anterior 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Imagen-rectificada-luego"

\end_inset

.
 La forma en la que se detectan estos 
\shape italic
bordes positivos 
\shape default
no es unica y esta intimamente ligado en como fue modificada la imagen en
 la etapa anterior.
 
\shape italic
\color blue
podemos mencionar y dar ejemplos de los otros papers que por ejemplo algunos
 detectan el contorno, otros pintan de color el contorno, otros arman un
 arreglo de booleanos y en base a eso determiann cual es el borde.
 etc
\end_layout

\begin_layout Standard
Luego de lograr la deteccion de los 
\shape italic
bordes positivos
\shape default
 se procede a obtener la altura en metros (o alguna otra unidad de longitud)
 por medio de la transformacion de la relacion pixels/metros (o la unidad
 de longitud correspondiente).
\end_layout

\begin_layout Standard

\shape italic
\color blue
No vi tecnicas para esto.
\end_layout

\begin_layout Standard
Es probablemente esta etapa la que mas varia de tecnica en tecnica
\begin_inset Note Note
status open

\begin_layout Plain Layout
escribir mejor esto
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Tecnicas utilizadas
\end_layout

\begin_layout Standard

\shape italic
\color blue
Agregar alomejor algo con respecto a tiempo real
\end_layout

\begin_layout Standard
En el presente trabajo podemos dividir el proceso general en cuatro sub-procesos
 como lo muestra el siguiente diagrama 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-general-del"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_tecnica_utilizada.png
	lyxscale 80
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diagrama-general-del"

\end_inset

Diagrama general del proceso de la técnica utilizada.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se puede ver, el proceso (rectangulo azul) tiene como entrada una imagen
 que puede provenir de una videocamara o de un archivo de video.
 Dentro del proceso general se pueden diferenciar los cuatro subprocesos
 que trabajan de manera secuencial, donde cada uno de estos tiene como entrada
 la imagen procesada por el subproceso inmediatamente anterior.
 Antes de continuar a explicar cada uno de los subprocesos definiremos algunas
 cosas para una mayor comprension de lo que se explique.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_eje_trabajo.jpg
	lyxscale 40
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Esquema-del-canal"

\end_inset

Esquema del canal y la zona de interes a analizar.
\begin_inset Note Note
status open

\begin_layout Plain Layout
escribir mas lindo esto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Basandonos en el esquema 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Esquema-del-canal"

\end_inset

 haremos algunas definiciones para aclarar posteriores explicaciones.
 Definiremos: 
\end_layout

\begin_layout Itemize

\shape italic
plano de captura:
\shape default
 como el plano formado por los ejes 
\begin_inset Formula $x$
\end_inset

, 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Itemize

\shape italic
zona de captura: 
\shape default
al rectangulo (en el esquema, el de lineas punteadas) capturado por la videocama
ra sobre la pared del canal que es paralelo al 
\shape italic
plano de captura
\shape default
 
\shape italic
\color blue
mejor pintar el plano de captura y dibujar una camara para que se vea como
 capturar
\shape default
\color inherit

\begin_inset Note Note
status open

\begin_layout Plain Layout
alomejor esta mas facil dibujar el rectangulo de captura y definirlo aca
 en vez de abajo
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\shape italic
angulo de captura:
\shape default
 El angulo de rotacion de la camara con respecto al 
\shape italic
plano de captura
\shape default
 (en la imagen, el angulo 
\begin_inset Formula $\theta$
\end_inset


\shape italic
).
\color blue
Agregar en la imagen el angulo de captura
\end_layout

\begin_layout Standard
Definamos ademas a una imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 como una matriz de valores numericos enteros tal que 
\begin_inset Formula $a_{ij}$
\end_inset

 es el pixel (valor numerico) que se encuentra en la i-esima fila y j-esima
 columna, tales que 
\begin_inset Formula $0\leq i<m$
\end_inset

 y 
\begin_inset Formula $0\leq j<n$
\end_inset

, definamos tambien a 
\begin_inset Formula $I_{*k}$
\end_inset

 a la columna (de pixels) k-esima de la imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 tal que 
\begin_inset Formula $0\leq k<n$
\end_inset

 y analogamente para las filas de pixels 
\begin_inset Formula $I_{l*}$
\end_inset

.
 Dada una imagen 
\begin_inset Formula $I_{mn}$
\end_inset

, 
\begin_inset Formula $a_{00}\in I_{mn}$
\end_inset

 corresponde al pixel superior izquierdo de la imagen mientras que el pixel
 
\begin_inset Formula $a_{mn}\in I_{mn}$
\end_inset

 al inferior derecho.
\end_layout

\begin_layout Subsubsection

\series bold
Rectificador
\end_layout

\begin_layout Standard
Este subproceso requiere de una previa configuracion antes de poder procesar
 la imagen de entrada.
 Necesita de 2 grupos de 4 puntos (en dos dimensiones) correspondientes
 los puntos de origen y de destino.
 Los primeros estan asociados a la zona de trabajo 
\begin_inset Note Note
status open

\begin_layout Plain Layout
o rectangulo de captura si lo definimos arriba
\end_layout

\end_inset

 que se quiere analizar (la cual debe ser un rectangulo contenido dentro
 de la 
\shape italic
zona de captura
\shape default
 con base alineada al eje 
\begin_inset Formula $x$
\end_inset

).
 Mientras que el segundo grupo esta relacionado con el tamaño de la imagen
 capturada por el dispositivo en si (esto eso, el tamaño del frame con el
 que se trabaja).
 El primer grupo de puntos necesita ser especificado por el usuario mientras
 que el segundo se asigna de manera automatica.
 
\end_layout

\begin_layout Standard
Debido a que el dispositivo se encuentra con un 
\shape italic
angulo de captura
\shape default
 
\begin_inset Formula $\theta\neq0$
\end_inset

, la imagen tomada por el dispositivo posee una perspectiva distinta a la
 real, esto es, el sistema de coordenadas de la imagen en el dispositivo
 se encuentra rotado 
\begin_inset Formula $-\theta$
\end_inset

 grados sobre el eje 
\begin_inset Formula $x$
\end_inset

.
 Para solucionar esto, y gracias a que la 
\shape italic
zona de captura
\shape default
 esta alineado con el 
\shape italic
plano de captura
\shape default
, se genera una matriz de transformacion de perspectiva (
\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a http://java.sun.com/products/java-media/jai/forDevelopers/jai1_0_1guide-unc/
Geom-image-manip.doc.html?
\end_layout

\end_inset

) por medio de los 8 puntos mencionados anteriormente, la cual mapea cada
 pixel de la imagen origen a su nueva posicion en la imagen destino (solventando
 el defasaje de los distintos sistemas de coordenadas como se puede observar
 en 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diferencia-de-perspectiva"

\end_inset

).
\end_layout

\begin_layout Standard
De esta manera se soluciona el error de la perspectiva y al mismo tiempo
 se eliminan las zonas (a grandes rasgos) que no pertenecen al area de interes.
 Ademas de que es una metodo sencillo y facil de configurar por parte del
 usuario.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
En el siguiente capitulo se realiza un desarrollo mas profundo sobre el
 algoritmo de rectificacion.
 (sacamos lo de arriba toda la explicacion matematicay la ponemos mas adelante?)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Recortador
\end_layout

\begin_layout Standard
Tiene como finalidad realizar un recorte aún mayor sobre la imagen de entrada.
 Para lograrlo requiere de 2 datos previos (configuracion), estos son:
\end_layout

\begin_layout Standard
1) 
\begin_inset Formula $i$
\end_inset

: Es el numero de columna 
\begin_inset Formula $I_{*i}$
\end_inset

 (columna de pixels) de la imagen de entrada 
\begin_inset Formula $I_{mn}$
\end_inset

 a la cual se quiere analizar la altura de la superficie libre (
\begin_inset Formula $0\leq i<n$
\end_inset

).
\end_layout

\begin_layout Standard
2) 
\begin_inset Formula $c$
\end_inset

: Cantidad de columnas analizar, donde las columnas analizar son las 
\begin_inset Formula $I_{*j}$
\end_inset

 con 
\begin_inset Formula $j=i-\frac{c}{2},...,i+\frac{c}{2}$
\end_inset

, 
\begin_inset Formula $c>0$
\end_inset

.
\end_layout

\begin_layout Standard
Su funcionalidad es simplemente la siguiente: dada la imagen de entrada
 
\begin_inset Formula $I_{mn}$
\end_inset

 transformarla a una imagen 
\begin_inset Formula $I'_{mc}$
\end_inset

 (de salida) reduciendo la cantidad de datos a analizar en los siguientes
 subprocesos (ya que como requerimiento del sistema necesitamos realizar
 todo el proceso en tiempo real).
 Además que solo necesitamos capturar la altura de la superficie libre en
 un punto determinado (aún asi no podemos solo dejar una unica columna para
 analizar debido a ciertos problemas mencionados posteriormente).
 Por otro lado simplifica las configuraciones de los siguientes subprocesos
 (como se vera luego).
\end_layout

\begin_layout Subsubsection

\series bold
Detector de bordes
\end_layout

\begin_layout Standard
Su objetivo es detectar los bordes evitando la mayor cantidad de ruido posible,
 pero no de discernir entre 
\shape italic
bordes positivos
\shape default
 y 
\shape italic
bordes negativos
\shape default
.
 Podemos distinguir una secuencia de acciones realizadas por este proceso.
 Estas son:
\end_layout

\begin_layout Enumerate
Se convierte la imagen de entrada 
\begin_inset Formula $I_{mn}$
\end_inset

 (en general color) en una imagen en blanco y negro, por medio de un simple
 filtro de imagen, el cual se aplica a cada 
\begin_inset Formula $a_{ij}\in I_{mn}$
\end_inset

 modificando solo su valor.
\end_layout

\begin_layout Enumerate
Se le aplica un segundo filtro denominado 
\shape italic
Gaussian Blur
\shape default
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 con el fin de 
\begin_inset Quotes eld
\end_inset

suavizar
\begin_inset Quotes erd
\end_inset

 la imagen suprimiendo la mayor cantidad posible de ruido (como puntos aislados
 debido a basuras capturadas en la imagen) para una mayor diferenciacion
 de los bordes reales.
 El funcionamiento de este algoritmo se explicara en el siguiente capitulo.
\end_layout

\begin_layout Enumerate
Por ultimo se corre el algoritmo conocido por el nombre 
\shape italic
Algoritmo de Canny 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset


\shape default
 utilizado para detectar los bordes en la imagen basado en ciertos parametros
 previamente configurados por el usuario que seran mencionados posteriormente
 junto con detalles del funcionamiento del algoritmo.
\end_layout

\begin_layout Standard
Al finalizar esta secuencia de pasos, podemos asumir que la imagen 
\begin_inset Formula $I'_{mn}$
\end_inset

 de salida, cumple lo siguiente:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\forall a_{ij}\in I_{mn}:\begin{cases}
a_{ij}=1 & si\; a_{ij}\: pertenece\: a\: un\: contorno\\
a_{ij}=0 & caso\: contrario.\end{cases}\]

\end_inset


\end_layout

\begin_layout Standard
Dicho de otra manera, la imagen de salida 
\begin_inset Formula $I'_{mn}$
\end_inset

 pasa a ser una matriz de valores booleanos donde los 
\begin_inset Formula $a_{ij}$
\end_inset

 (pixels) perteneciente a la misma contienen el valor verdadero si y solo
 si forman parte de un contorno detectado por el algoritmo, caso contrario,
 contienen el valor booleano falso.
\end_layout

\begin_layout Standard
Este subproceso es el que mayor tiempo de procesamiento requiere.
 
\shape italic
\color red
Basicamente se opto por la utilizacion de este algoritmo debido a que la
 libreria con la que se trabajo no proveia de otro algoritmo integrado para
 detectar bordes.
 Aún asi, al ser el proceso de manera secuencial e independiente cada uno
 con respecto a los otros, cambiar de algoritmo solo deberia implicar la
 modificacion de este único subproceso (modulo).
\end_layout

\begin_layout Subsubsection
Analizador
\end_layout

\begin_layout Standard
El objetivo del 
\shape italic
Analizador
\shape default
 es: dada la imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 preprocesada por el algoritmo de deteccion de contornos, decidir cuales
 de éstos 
\begin_inset Formula $a_{ij}\in I_{mn}$
\end_inset

 marcados como verdaderos (recordando que son verdaderos si y solo si pertenecen
 a un contorno detectado) son 
\shape italic
bordes positivos 
\shape default
y cuales son 
\shape italic
bordes negativos
\shape default
.
 Para lograrlo, este subproceso se basa en un simple algoritmo explicado
 en el capitulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Wave-height-analyzer"

\end_inset

 y una serie de parametros que sirven de base como configuracion inicial
 (suministrados por el usuario).
 
\end_layout

\begin_layout Standard
Una vez detectado los 
\shape italic
bordes positivos
\shape default
, se realiza una conversion de unidades, pasando de 
\begin_inset Quotes eld
\end_inset

altura de superficie libre en pixels
\begin_inset Quotes erd
\end_inset

 a 
\begin_inset Quotes eld
\end_inset

altura de superficie libre en metros
\begin_inset Quotes erd
\end_inset

, por medio de uno de los parametros de configuracion que establece la relacion
 de equivalencia de pixels en metros.
\end_layout

\begin_layout Standard
A diferencia de las otras etapas, ésta tiene como salida un valor numerico
 (y no una imagen), que es la salida del proceso completo, esto es, la altura
 de la superficie libre detectada y convertida en metros.
\end_layout

\begin_layout Section
Algoritmos involucrados
\end_layout

\begin_layout Subsection
Introduccion
\end_layout

\begin_layout Standard
En esta seccion describiremos las bases teoricas de los algoritmos utilizados
 en este trabajo a lo largo del proceso de la deteccion de la superficie
 libre.
 Se mencionaran en el orden en el que son aplicados sobre la imagen de entrada
 
\begin_inset Formula $I_{mn}$
\end_inset

 del proceso, proviniente ya sea del dispositivo (videocamara) o de un archivo
 de video.
\end_layout

\begin_layout Subsection
Perspective transform
\begin_inset CommandInset label
LatexCommand label
name "sub:Perspective-transform"

\end_inset


\end_layout

\begin_layout Standard
Se basa en una transformacion de perspectiva (por medio de una matriz de
 transofrmacion 
\begin_inset Formula $T$
\end_inset

) 
\shape italic
\color blue
ref algun lado..
 http://java.sun.com/products/java-media/jai/forDevelopers/jai1_0_1guide-unc/Geom-
image-manip.doc.html, no encuentro otro lugar que lo explique asi de simple,
 el tema es que esta referencia es muy trucha por el hecho de que es la
 explicacion de como lo implementa java (java es un lenguaje de programacion
 como C++)....
 Vale esta referencia?
\shape default
\color inherit
 sobre la imagen de entrada 
\begin_inset Formula $I_{mn}$
\end_inset

 dando como resultado una imagen 
\begin_inset Formula $I'_{mn}$
\end_inset

 donde cada pixel 
\begin_inset Formula $a'_{i'j'}\in I'_{mn}$
\end_inset

 puede ser expresado en terminos del punto original 
\begin_inset Formula $a_{ij}\in I_{mn}$
\end_inset

, utilizando coordenadas homogeneas 
\shape italic
\color red
[BaTra]
\shape default
\color inherit

\begin_inset Note Note
status open

\begin_layout Plain Layout
ref a coordenadas homogeneas
\end_layout

\end_inset

 de forma tal que las coordenadas origen 
\begin_inset Formula $(i,j,1)$
\end_inset

 pasen a ser las coordenadas destinos 
\begin_inset Formula $(i',j',w)$
\end_inset

 para algun 
\begin_inset Formula $w$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\begin{cases}
i'=\frac{m_{00}i+m_{01}j+m_{02}}{m_{20}i+m_{21}j+m_{22}}\\
j'=\frac{m_{10}i+m_{11}j+m_{12}}{m_{20}i+m_{21}j+m_{22}}\end{cases}\]

\end_inset


\end_layout

\begin_layout Standard
donde 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
T=\left(\begin{array}{ccc}
m_{00} & m_{01} & m_{02}\\
m_{10} & m_{11} & m_{12}\\
m_{20} & m_{21} & m_{22}\end{array}\right)\]

\end_inset


\end_layout

\begin_layout Standard
es la matriz de transformacion, entonces podemos expresar
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left(\begin{array}{c}
i'\\
j'\\
w\end{array}\right)=\left(\begin{array}{ccc}
m_{00} & m_{01} & m_{02}\\
m_{10} & m_{11} & m_{12}\\
m_{20} & m_{21} & m_{22}\end{array}\right)\left(\begin{array}{c}
i\\
j\\
1\end{array}\right)=\left(\begin{array}{c}
m_{00}i+m_{01}j+m_{02}\\
m_{10}i+m_{11}j+m_{12}\\
m_{20}i+m_{21}j+m_{22}\end{array}\right)\label{eq:multiplicacion}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
y cada uno de los 
\begin_inset Formula $m_{ab}$
\end_inset

 se calculan en base a los 8 puntos bidimensionales de configuracion, 4
 de origen (llamemoslos 
\begin_inset Formula $p_{o_{k}}:k=1,..,4$
\end_inset

), con sus 4 puntos de destino correspondientes (
\begin_inset Formula $p_{d_{k}}:k=1,..,4$
\end_inset

) resolviendo un sistema lineal de ecuaciones como se lo puede ver en 
\shape italic
\color blue
imgwrap.cpp de openCv sale como es la matriz monstruosa.
 Deberiamos buscar algun lugar donde se pueda ver mejor
\end_layout

\begin_layout Standard
Notar que asumimos que los puntos 
\begin_inset Formula $i'$
\end_inset

, 
\begin_inset Formula $j'$
\end_inset

 obtenidos luego de multiplicar la matriz de transformacion sobre los puntos
 origen 
\begin_inset Formula $i$
\end_inset

, 
\begin_inset Formula $j$
\end_inset

, caen dentro de una imagen de igual tamaño, esto es 
\begin_inset Formula $0\leq i,i'<m$
\end_inset

 y 
\begin_inset Formula $0\leq j,j'<n$
\end_inset

, en caso de no cumplirse esta condicion, los pixels son automaticamente
 descartados.
\end_layout

\begin_layout Standard
Con todo esto, el algoritmo simplemente se puede describir como sigue:
\end_layout

\begin_layout Enumerate
Establecidos los 8 puntos de configuracion (
\begin_inset Formula $p_{o_{k}},p_{d_{k}}:k=1,..,4$
\end_inset

), se contruye la matriz de transformacion de perspectiva 
\begin_inset Formula $T$
\end_inset

.
\end_layout

\begin_layout Enumerate
Para cada pixel 
\begin_inset Formula $a_{ij}\in I_{mn}$
\end_inset

 se obtiene su nueva posicion en la imagen de salida 
\begin_inset Formula $I'_{mn}$
\end_inset

utilizando la matriz 
\begin_inset Formula $T$
\end_inset

 como se muestra en 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:multiplicacion"

\end_inset

 copiandose el valor del pixel (
\begin_inset Formula $a'_{i'j'}=a_{ij}$
\end_inset

).
\end_layout

\begin_layout Standard
Este algoritmo es utilizado para la rectificacion de la imagen al comienzo
 del proceso.
 
\end_layout

\begin_layout Subsection
Gaussian Blur
\begin_inset CommandInset label
LatexCommand label
name "sub:Gaussian-Blur"

\end_inset


\end_layout

\begin_layout Standard
Este algoritmo, tambien conocido como 
\shape italic
Gaussian smoothing
\shape default
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

, se lo puede categorizar como un 
\begin_inset Quotes eld
\end_inset

low-pass image filter
\begin_inset Quotes erd
\end_inset

, que tiene como finalidad disminuir la amplitud de las variaciones de la
 imagen (ruido), especialmente utilizado en la fase previa a los algoritmos
 que detectan bordes o contornos.
\end_layout

\begin_layout Standard
Para comprender mejor el funcionamiento del algoritmo expliquemos algunos
 conceptos utilizados:
\end_layout

\begin_layout Itemize

\shape italic
Kernel
\shape default
 o 
\shape italic
Mask
\shape default
: Usualmente una matriz de numeros usada en lo que se denomina 
\begin_inset Quotes eld
\end_inset


\shape italic
image convolution
\shape default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize

\shape italic
Convolution
\shape default
: Es una simple operacion matematica 
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset

 que provee una forma de multiplicar entre si 2 arrays de numeros, generalmente
 de diferentes tamaños pero de igual dimension produciendo un tercer array
 (resultado) de numeros de la misma dimension.
 En éste caso (procesamiento de imagenes), los arrays numericos multiplicados
 son por un lado la imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 (que puede verse como un array numerico bidimensional) y por el otro lado
 la matriz 
\shape italic
kernel
\shape default
, dando como resultado, la imagen con el suavizado aplicado.
 Para una mayor claridad observemos la siguiente figura:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_convolution_kernel.png
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Representacion de una imágen (a izquierda) y un 
\shape italic
kernel
\shape default
 (a derecha).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La 
\shape italic
convolucion 
\shape default
es realizada deslizando el kernel (empezando generalmente desde por arriba
 a la izquierda) sobre todos los pixels de la imagen de forma tal que la
 matriz kernel entre completamente dentro de los limites de la imagen, devolvien
do en cada posicion (que se desliza el kernel) un unico valor correspondiente.
 A modo de ejemplo en el caso del ultimo pixel (abajo a la derecha) el resultado
 de la operacion seria 
\begin_inset Formula $O_{57}=I_{57}K_{11}+I_{58}K_{12}+I_{59}K_{13}+I_{67}K_{21}+I_{68}K_{22}+I_{69}K_{23}$
\end_inset

, donde 
\begin_inset Formula $O_{57}$
\end_inset

 es el resultado de esta operación.
 Notemos que si la imagen de entrada tiene M filas y N columnas, y el kernel
 tiene m filas y n columnas, entonces el tamaño de la imagen de salida tendrá
 M-m+1 filas y N-n+1 columnas.
\end_layout

\begin_layout Standard

\shape italic
Distribucion gaussiana 1D:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
G(x)=\frac{1}{\sqrt{2\pi\sigma^{2}}}e^{-\frac{x^{2}}{2\sigma^{2}}}\label{eq:dist_gaus_1d}\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\shape italic
Distribucion gaussiana 2D:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
G(x,y)=\frac{1}{2\pi\sigma^{2}}e^{-\frac{x^{2}+y^{2}}{2\sigma^{2}}}\label{eq:dist_gaus_2d}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
La idea es usar esta distribucion 2D (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dist_gaus_2d"

\end_inset

) como una funcion del tipo 
\begin_inset Quotes eld
\end_inset

punto de propagacion
\begin_inset Quotes erd
\end_inset

, por medio de la 
\shape italic
convolucion
\shape default
.
 Dicho en otras palabras, armar la matriz kernel utilizando la 
\shape italic
distribucion gaussiana
\shape default
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dist_gaus_2d"

\end_inset

 para luego aplicar la 
\shape italic
convolucion
\shape default
 y obtener la imagen resultante
\shape italic
.
\end_layout

\begin_layout Standard
Por temas de eficiencia en general, y gracias a que 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dist_gaus_2d"

\end_inset

 puede separarse en las componentes 
\begin_inset Formula $x$
\end_inset

 e 
\begin_inset Formula $y$
\end_inset

 (dandonos 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dist_gaus_1d"

\end_inset

), podemos aplicar la 
\shape italic
convolucion 
\shape default
primero en la direccion 
\begin_inset Formula $x$
\end_inset

 y luego en la direccion 
\begin_inset Formula $y$
\end_inset

 por medio de 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dist_gaus_1d"

\end_inset

, obteniendo el mismo resultado que habiendo aplicado 
\shape italic
convolucion
\shape default
 con 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dist_gaus_2d"

\end_inset

.
\end_layout

\begin_layout Standard
Este algoritmo da como resultado (en cada corrida de la 
\shape italic
convolucion
\shape default
) un promedio ponderado de cada pixel vecino, con la media ponderada mas
 hacia el valor de los pixeles centrales.
 Utiliza ademas ciertos parametros que determinan el tamaño de la kernel
 y el sigma utilizado (los cuales, en este trabajo, fueron predefinidos
 como una kernel de tamaño 7x7 y 
\begin_inset Formula $\sigma=1.5$
\end_inset


\shape italic
\color blue
Tenemos que explicar porque pusimos estos valoreS? estaban por defecto en
 la lib..
 si no sacamos esta ultima parte!
\shape default
\color inherit
).
\end_layout

\begin_layout Standard
A modo de ejemplo, se muestran dos imagenes, una (la izquierda) antes y
 la otra (derecha) luego de haber aplicado el filtro (extraidas de 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_gaussian_sin_filtro.png
	lyxscale 80
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Imagen antes de aplicar el filtro.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_gaussian_comp.png
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Imagen luego de aplicar el filtro.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Imagen comparativa de una imagen aplicando el filtro 
\shape italic
Gaussian Blur
\shape default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Canny edge detector
\begin_inset CommandInset label
LatexCommand label
name "sub:Canny-edge-detector"

\end_inset


\end_layout

\begin_layout Standard
Este algoritmo fue desarrollado por 
\shape italic
John F.
 Canny
\begin_inset Foot
status open

\begin_layout Plain Layout

\shape italic
http://www.eecs.berkeley.edu/Faculty/Homepages/canny.html
\end_layout

\end_inset


\shape default
 en 1986, tiene como finalidad detectar los bordes en una imagen, filtrando
 todo aquello que no pertenezca a un contorno.
 El algoritmo se basa en 5 pasos separados:
\end_layout

\begin_layout Enumerate

\series bold
Smoothing
\series default
: Suavizar la imagen para remover el ruido utilizando el filtro gaussiano
 anteriormente mencionado con parametro 
\begin_inset Formula $\sigma=1.4$
\end_inset

 y un kernel de tamaño 5x5.
\end_layout

\begin_layout Enumerate

\series bold
Finding gradients
\series default
: Los bordes deben ser marcados donde los gradientes de la imagen tengan
 magnitudes grandes por medio de utilizacion de alguno de los 
\begin_inset Quotes eld
\end_inset

operadores de gradiente
\begin_inset Quotes erd
\end_inset

 como (
\shape italic
Roberts
\shape default

\begin_inset Foot
status open

\begin_layout Plain Layout
http://en.wikipedia.org/wiki/Roberts_Cross
\end_layout

\end_inset

, 
\shape italic
Sobel
\shape default

\begin_inset Foot
status open

\begin_layout Plain Layout
http://en.wikipedia.org/wiki/Sobel_operator
\end_layout

\end_inset

, 
\shape italic
Prewitt
\begin_inset Foot
status open

\begin_layout Plain Layout

\shape italic
http://en.wikipedia.org/wiki/Prewitt_operator
\end_layout

\end_inset


\shape default
, entre otros).
\end_layout

\begin_layout Enumerate

\series bold
Non-maximum suppression
\series default
: Dada la imagen de magnitudes de gradientes calculada en el paso anterior,
 se convierten los bordes encontrados pero borrosos, en bordes bien marcados
 (
\shape italic
fuertes
\shape default
).
 Esto se hace por medio de la eliminacion de todo maximo que no sea local
 en la imagen de gradientes y dejando solo los maximo locales, los cuales
 son marcados como contornos fuertes.
\end_layout

\begin_layout Enumerate

\series bold
Double thresholding
\series default
: La imagen resultante del paso anterior es procesada comparando cada uno
 de los pixels (marcados como pertenecientes a un contorno) con un umbral
 alto y uno bajo.
 Aquellos pixels que esten por debajo del 
\begin_inset Quotes eld
\end_inset

umbral bajo
\begin_inset Quotes erd
\end_inset

 son descartados, aquellos que esten por encima del 
\begin_inset Quotes eld
\end_inset

umbral alto
\begin_inset Quotes erd
\end_inset

 son marcados como 
\shape italic
fuertes
\shape default
, mientras que aquellos que se encuentren por encima del bajo y por debajo
 del alto son marcados como 
\shape italic
debiles
\shape default
.
\end_layout

\begin_layout Enumerate

\series bold
Edge tracking by hysteresis
\series default
: Dada la imagen anterior, todos los pixels marcados como 
\shape italic
fuertes 
\shape default
son automaticamente clasificados como contornos reales (y por ende incluidos
 a la imagen resultante).
 Aquellos pixels marcados como 
\shape italic
debiles
\shape default
 son incluidos como contornos reales si y solo si estan conectados a alguno
 de los contornos 
\shape italic
fuertes
\shape default
, caso contrario son descartados.
\end_layout

\begin_layout Standard
En 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 se describe en mayor detalle cada uno de los pasos mencionados anteriormente.
\end_layout

\begin_layout Subsection
Wave height analyzer
\begin_inset CommandInset label
LatexCommand label
name "sub:Wave-height-analyzer"

\end_inset


\end_layout

\begin_layout Standard

\shape italic
\color blue
Este nombre lo invente yo al igual que el primero, como hago con esto? este
 algoritmo lo invente yo...
\end_layout

\begin_layout Standard
Este algoritmo tiene como finalidad determinar cual de todos los contornos
 que se encuentran en la imagen corresponde a la altura de ola que se este
 analizando.
 Para lograrlo requiere de la siguiente informacion.
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $I_{mn}$
\end_inset

 la imagen de entrada, preprocesada de manera tal que 
\begin_inset Formula $I_{mn}\ni a_{ij}=1$
\end_inset

 si y solo si 
\begin_inset Formula $a_{ij}$
\end_inset

 pertenece a un contorno detectado (por simplicidad asumamos 
\begin_inset Formula $n$
\end_inset

 impar).
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $h_{0}$
\end_inset

 el valor de la altura de ola inicial en pixels, esto es, el numero de fila
 en la imagen 
\begin_inset Formula $I_{mn}$
\end_inset

 en la que se encuentra la altura inicial (
\begin_inset Formula $0\leq h_{0}<m$
\end_inset

).
 
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $V$
\end_inset

 una constante numerica predefinida representando la maxima variancia de
 altura de ola aceptable en pixels (esto es la cantidad maxima de pixels
 aceptables que puede cambiar la ola de un paso al otro).
\end_layout

\begin_layout Standard
Se asume ademas que el movimiento de la ola se realiza sobre el eje 
\begin_inset Formula $y$
\end_inset

, esto es, dada la columna k-esima (
\begin_inset Formula $I_{*k}$
\end_inset

) de la imagen, podemos observar la diferencia de altura a medida que nos
 movemos verticalmente sobre las diferentes filas de 
\begin_inset Formula $I$
\end_inset

.
\end_layout

\begin_layout Standard
Teniendo en cuenta que como objetivo principal, este algoritmo debe obtener
 la altura de ola en un punto determinado de la imagen (esto es, en una
 columna determinada), se asume que este punto se encuentra sobre la columna
 
\begin_inset Formula $\frac{m}{2}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Podemos describir entonces el funcionamiento del algoritmo como:
\end_layout

\begin_layout Enumerate
Para cada columna 
\begin_inset Formula $I_{*k}:0\leq k<n$
\end_inset

, sea 
\begin_inset Formula $\bar{w}_{k}$
\end_inset

 la ultima altura calculada en la k-esima columna, buscamos la nueva altura
 
\begin_inset Formula $w_{k}$
\end_inset

de la siguiente forma: Partiendo de 
\begin_inset Formula $a_{\bar{w}_{k}k}\in I_{mn}$
\end_inset

, buscamos el 
\begin_inset Formula $i$
\end_inset

 tal que se cumpla 
\begin_inset Formula $a_{ik}=1\wedge\left|i-\bar{w}_{k}\right|\leq\left|j-\bar{w}_{k}\right|\forall j=0..m:\; a_{jk}=1$
\end_inset

, asignando entonces 
\begin_inset Formula $w_{k}=a_{ik}$
\end_inset

, en caso de que tal 
\begin_inset Formula $i$
\end_inset

 no exista, 
\begin_inset Formula $w_{k}=\bar{w}_{k}$
\end_inset

.
 En palabras, esto no es mas que encontrar el pixel marcado como verdadero
 que se encuentre mas cercano (en posicion) a la ultima altura calculada
 (
\begin_inset Formula $\bar{w}_{k}$
\end_inset

).
\end_layout

\begin_layout Enumerate
Sea 
\begin_inset Formula $k=\frac{m}{2}$
\end_inset

 la columna de mayor importancia (la que se esta analizando), se calcula
 la varianza 
\begin_inset Formula $v=\left|w_{k}-\bar{w}_{k}\right|$
\end_inset

.
 Si 
\begin_inset Formula $v\leq V$
\end_inset

 se termina el algoritmo y se devuelve 
\begin_inset Formula $v$
\end_inset

, caso contrario se continua con el siguiente paso.
\end_layout

\begin_layout Enumerate
Sea 
\begin_inset Formula $k=\frac{m}{2}$
\end_inset

, calculan las 
\begin_inset Formula $v_{i}=\left|w_{k-i}-\bar{w}_{k-i}\right|+\left|w_{k+i}-\bar{w}_{k+i}\right|,\; i=1,..,k-1$
\end_inset

 y se elije el 
\begin_inset Formula $i$
\end_inset

 tale que 
\begin_inset Formula $v_{i}\leq\min\{v_{j}\}:\: j=1,..,k-1$
\end_inset

.
 Una vez encontrado este 
\begin_inset Formula $i$
\end_inset

 se calcula la altura promedio entre estas 2 ultimas alturas de las columnas
 correspondientes, esto es, 
\begin_inset Formula $h=\frac{w_{k-i}+w_{k+i}}{2}$
\end_inset

 y devolvemos 
\begin_inset Formula $h$
\end_inset

 como altura.
\end_layout

\begin_layout Standard
Cada vez que finaliza el algoritmo se actualizan las ultimas alturas encontradas
 para evitar acumulacion de error.
 
\end_layout

\begin_layout Standard
Las 
\begin_inset Formula $\bar{w_{k}}$
\end_inset

de cada una de las columnas, son inicializadas por defecto con el valor
 
\begin_inset Formula $h_{0}$
\end_inset

.
\end_layout

\begin_layout Standard
Puede parecer que el paso 3 agrega complejidad inecesaria, pero debido a
 que en ciertas situaciones (por problemas de luz o de entorno), la deteccion
 de contornos no se realiza correctamente evitando la deteccion de la ola
 (no se encuentra ningun contorno).
 Es por esto que hay que hacer el algoritmo lo mas robusto posible.
\end_layout

\begin_layout Section
Implementacion y funcionamiento el sistema
\end_layout

\begin_layout Standard

\color red
Tendriamos que poner en algun lado (no se donde) el tema de cuales fueron
 los problemas a solucionar y como se fueron solucionando, por ejemplo:
 buscar una camara de forma tal que cumpla con lo que se queria y ademas
 funcione en linux (en ningun lado pusimos esto que llevo bastante tiempo).
 Elegir una libreria de manejo de imagenes que sirviese.
\end_layout

\begin_layout Subsection
Requerimientos principales
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
REDACTAR BIEN TODO ESTO:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como objetivo principal, el sistema debía poder capturar la altura de la
 superficie libre del fluido a medir desde una camara (web/usb) y lograrlo
 en tiempo real.
 A continuacion se listan los requerimientos mas importantes que el sistema
 debia cumplir:
\end_layout

\begin_layout Itemize

\series bold
REQ1:
\series default
 Dada una camara web usb, poder capturar y procesar las imagenes a una velocidad
 no inferior a 15 fps (o 15 capturas por segundo) y una resolucion que permita
 una deteccion de altura con no mas de 0.5 cm de error.
\end_layout

\begin_layout Itemize

\series bold
REQ2:
\series default
 El sistema debía funcionar en una maquina estandar (esto es, que no se
 requiera de una supercomputadora para lograr la velocidad de procesamiento),
 ya que, como se menciono anteriormente, una de las ventajas del sistema
 era su bajo costo.(
\shape italic
\color blue
poner el porque de se uso C++ opencv abajo
\shape default
\color inherit
).
\end_layout

\begin_layout Itemize

\series bold
REQ3:
\series default
 Ser facil de utilizar y configurar por cualquier persona (que no posea
 conocimientos previos) que use el sistema.(
\shape italic
\color blue
por eso se desarrollo una interfaz grafica con QT
\shape default
\color inherit
).
\end_layout

\begin_layout Itemize

\series bold
REQ4:
\series default
 Tener una estructura (arquitectura) flexible que posibilite el desarrollo
 de futuras aplicaciones (que midan otras variables hidrodinamicas) o ser
 modificado por otras personas en el futuro.
\end_layout

\begin_layout Itemize

\series bold
REQ5:
\series default
 Contar con una interfaz grafica que permita mostrar los datos procesados
 y además la posibilidad de compararlos con los obtenidos 
\color red
por el otro sistema de medicion que actualmente esta siendo utilizado (poner
 como se llama el sensor de niveles resistivos...
 
\shape italic
\color blue
ref
\shape default
\color red
)
\color inherit
 (
\shape italic
\color blue
por eso se realizo la ventana de analisis de postprocesso Qwt
\shape default
\color inherit
).
\end_layout

\begin_layout Standard
Debido a que no existia ninguna restriccion sobre el lenguaje de programacion
 a utilizar, entorno sobre el cual desarrollar, ni tipos de librerias a
 emplear, se tomaron ciertas deciciones sobre como sería la implementacion
 del sistema, y teniendo en cuenta los requerimientos antes mencionados,
 se opto por lo siguiente:
\end_layout

\begin_layout Itemize

\series bold
Entorno
\series default
: Linux
\begin_inset Foot
status open

\begin_layout Plain Layout
www.linux.com
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Lenguaje de programacion
\series default
: C++
\begin_inset Foot
status open

\begin_layout Plain Layout
www.cplusplus.com
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Librerias de procesamiento grafico
\series default
: OpenCV
\begin_inset Foot
status open

\begin_layout Plain Layout
http://opencv.willowgarage.com/wiki/
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Librerias de interfaz grafica (Graphical User Interface o GUI)
\series default
: Qt
\begin_inset Foot
status open

\begin_layout Plain Layout
http://qt.nokia.com/
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Librerias adicionales
\series default
: Tinyxml
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.grinninglizard.com/tinyxml/
\end_layout

\end_inset

.
 Qwt
\begin_inset Foot
status open

\begin_layout Plain Layout
http://qwt.sourceforge.net/
\end_layout

\end_inset

.
 v4l-utils
\begin_inset Foot
status open

\begin_layout Plain Layout
http://freecode.com/projects/libv4l
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
En los siguientes parrafos se dará una breve explicacion del porque de éstas
 deciciones.
\end_layout

\begin_layout Standard
El sistema fue desarrollado en el entorno linux principalmente por comodidad
 y gusto, aún asi, las librerias utilizadas son multiplaforma por lo que
 deberia poder ser compilado en otras plataformas (exceptuando la aplicacion
 externa utilizada para configurar la camara web, que en el caso de windows,
 la aplicacion proveída por el manufacturador de la camara deberia bastar).
\end_layout

\begin_layout Standard
El lenguaje de programacion 
\shape italic
C++
\shape default
 fue elegido debido a que es un lenguaje de programacion con mayor performance
 en comparacion con otros, lo que era necesario para cumplir con el procesamient
o en tiempo real (
\series bold
REQ1
\series default
, 
\series bold
REQ2
\series default
).
 Por otro lado ya se poseian conocimientos previos del mismo (como asi tambien
 preferencia), lo que agilizaria el desarrollo.
\end_layout

\begin_layout Standard
Dentro de un gran conjunto de librerias de procesamiento grafico, se opto
 por 
\shape italic
OpenCV
\shape default
 ya que ésta esta principalmente orientada a sistemas que requieren de manipulac
ion de imagenes en tiempo real (real time computer vision systems) como
 la robotica.
 Además de que tiene un alto grado de maduración, está actualmente activa
 y existe mucha documentacion.
\end_layout

\begin_layout Standard
En cuanto al 
\series bold
REQ3
\series default
, para poder cumplirlo, necesariamente se requeria de una interfaz grafica
 para el usuario, por lo cual se decidio elegir 
\shape italic
Qt
\shape default
 ya que posee una interfaz para
\shape italic
 C++
\shape default
, cubria con todas las necesidades que el sistema planteaba, era de facil
 integracion con 
\shape italic
OpenCV
\shape default
 y se poseia cierto grado de conocimiento previo sobre la misma.
\end_layout

\begin_layout Standard
Con respecto a las librerias adicionales, la que mayor impacto tiene sobre
 el sistema es 
\shape italic
Qwt
\shape default
 ya que 
\series bold
REQ5 
\series default
se basa en ésta.
 Fue elegida debido a que proveia la funcionalidad deseada de una manera
 muy sencilla y de facil integracion con las demas librerias (ya que es
 una extencion de 
\shape italic
Qt
\shape default
 - utilizada para la 
\shape italic
GUI
\shape default
 del sistema -).
\end_layout

\begin_layout Subsection
Arquitectura
\end_layout

\begin_layout Subsubsection
A nivel general
\end_layout

\begin_layout Standard
A un nivel macro, la arquitectura del sistema se la puede simplificar como
 se lo muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Arquitectura-general-del"

\end_inset

.
 Esta decision fue tomada para poder cubrir el 
\series bold
REQ4
\series default
, esto es, flexibilidad para la facil integracion de posibles futuras aplicacion
es.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_arq_high_level.png
	lyxscale 80
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Arquitectura-general-del"

\end_inset

Arquitectura general del sistema.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se puede ver en el diagrama 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Arquitectura-general-del"

\end_inset

, el sistema consta de un modulo principal (
\series bold
\shape italic
I
\series default
mage
\series bold
P
\series default
rocessing
\series bold
S
\series default
ystem
\shape default
 Loader o 
\shape italic
IPS
\shape default
 Loader) el cual tiene como finalidad listar y mostrar todos los modulos
 
\shape italic
IPS
\shape default
 que encuentren 
\color red
(ya sean plugins o no)
\color inherit
 dando la posibilidad al usuario de elegir y cargar uno especifico.
 Estos 
\shape italic
IPS
\shape default
 tienen como objetivo encapsular una aplicacion con una finalidad especifica,
 que en el caso de este trabajo, es detectar la altura de la superficie
 libre de un fluido.
\end_layout

\begin_layout Standard
Cada 
\shape italic
IPS
\shape default
 esta conformado por 2 partes, una grafica (
\shape italic
IPS GUI
\shape default
) y una de procesamiento (
\shape italic
IPS Core
\shape default
).
 La primera, tiene como fin brindarle al usuario una forma facil y agil
 de configurar a la segunda, la cual en general, requiere de muchos pasos
 y parametros para poder ser utilizada correctamente.
 En esta ultima (
\shape italic
IPS Core
\shape default
) se encuentra toda la logica y algoritmos para el procesamiento de imagenes,
 que no depende en absoluto de la parte grafica para su funcionamiento,
 lo que permite, si se deseea, desarrollar nuevas aplicaciones sin la necesidad
 de implementar una interfaz grafica o aún más, modificar de manera sencilla
 el sistema para soportar otro tipo de librerias para la 
\shape italic
GUI
\shape default
.
\end_layout

\begin_layout Standard
Debido a que las aplicaciones que pueden ser desarrolladas requieren de
 una interfaz grafica, y que ademas, la configuracion se realiza en una
 fase previa al procesamiento de imagenes (antes de empezar a capturar y
 procesar las imagenes el 
\shape italic
IPS Core
\shape default
 debe estar configurado), se opto por ejecutar la interfaz grafica en un
 principio y que esta sea la encargada de ejecutar la otra parte (
\shape italic
IPS Core
\shape default
).
 Esto se lo puede ver en el diagrama anterior a travez de las flechas (
\shape italic
IPS Loader
\shape default
 --> 
\shape italic
IPS GUI
\shape default
, 
\shape italic
IPS GUI
\shape default
 --> 
\shape italic
IPS Core
\shape default
).
\end_layout

\begin_layout Subsubsection
A nivel de IPS
\end_layout

\begin_layout Standard
En este trabajo se creo una estructura general para todos los 
\shape italic
Image Processing System
\shape default
 que posibilitara la suficiente flexibilidad para las futuras aplicaciones
 a desarrollar.
 Esta estructura se aplica principalmente a la parte de procesamiento (
\shape italic
Core
\shape default
) ya que la interfaz grafica puede variar mucho de aplicacion en aplicacion.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_arq_ips.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Arquitectura-de-los"

\end_inset

Arquitectura de los 
\shape italic
Image Processing System (IPS)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A grandes rasgos, se puede observar (en Figura:
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Arquitectura-de-los"

\end_inset

) que el 
\shape italic
IPS Core
\shape default
 consta de dos modulos, por un lado el 
\shape italic
ImageGenerator
\shape default
, el cual, como su nombre lo indica, tiene como fin generar imagenes para
 ser procesadas, estas pueden provenir de una camara o bien de un archivo
 de video.
 Por otro lado se encuentra el 
\shape italic
ImageAnalyzer, 
\shape default
el cual se rige de sus unidades basicas funcionales llamadas 
\shape italic
ImageProcessor
\shape default
, las cuales realizan el veradero procesamiento de imagenes, cada uno con
 una funcionalidad determinada.
 El 
\shape italic
ImageAnalyzer
\shape default
 tiene entonces como fin, tomar del 
\shape italic
ImageGenerator
\shape default
 imagenes y procesarlas por medio de cada uno de los 
\shape italic
ImageProcessors
\shape default
 que contenga.
\end_layout

\begin_layout Standard
En la parte superior del diagrama se puede observar la interfaz grafica,
 la cual se comunica con el 
\shape italic
IPS Core
\shape default
, con el fin de poder configurar cada uno de estos 
\shape italic
ImageProcessors
\shape default
, que son las unidades basicas de procesamiento.
\end_layout

\begin_layout Standard
Gracias a esta arquitectura, el sistema es muy flexible en cuanto a la actividad
 que deba realizar (y por ende la aplicacion que se quiera desarrollar),
 ya que simplemente se basa en lo que los 
\shape italic
ImageProcessor
\shape default
 esten configurados para hacer.
\end_layout

\begin_layout Standard
A modo de ejemplo, en el caso particular de este trabajo se desarrollo un
 
\shape italic
IPS
\shape default
 con el fin de capturar la altura de superficie libre de un fluido, al cual
 se lo llamo como 
\series bold
WaveHeightIPS 
\series default
(
\shape italic
WHIPS
\shape default
).
 Para lograr la funcionalidad deseada se desarrollaron cuatro 
\shape italic
ImageProcessor
\shape default
 distintos los cuales se muestran en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ImagePorcessor's-del-WaveHeightIPS."

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_arq_whips.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\shape italic
\begin_inset CommandInset label
LatexCommand label
name "fig:ImagePorcessor's-del-WaveHeightIPS."

\end_inset

ImagePorcessor's
\shape default
 del 
\shape italic
WaveHeightIPS
\shape default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En los siguientes capitulos se explicara el funcionamiento detallado de
 cada uno de estos 
\shape italic
ImageProcessor.
\end_layout

\begin_layout Subsection
Diseño
\end_layout

\begin_layout Subsubsection
Preliminares
\end_layout

\begin_layout Standard
Comenzaremos describiendo el diseño del sistema al nivel de abstraccion
 sin entrar en detalles sobre el 
\shape italic
IPS
\shape default
 desarrollado para este trabajo, osea, se mostrará en un principio, como
 es el diseño de la maquinaria que permite la creacion de estos 
\shape italic
IPS
\shape default
.
\end_layout

\begin_layout Subsubsection
Nivel abstraccion
\end_layout

\begin_layout Standard
Como se menciono anteriormente, el sistema debia posibilitar el desarrollo
 de futuras aplicaciones (
\series bold
REQ4
\series default
) de manera facil, para lograr esto, se modelo y encapsulo a cada posible
 aplicacion como un 
\shape italic
Image Processing System
\shape default
.
 Esto llevo a un diseño al nivel de abstraccion como se muestra en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diseño-de-alto"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_abstract_design.png
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diseño-de-alto"

\end_inset

Diseño de alto nivel.
 Se muestra al nivel de abstracción.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se observa el diseño a grandes rasgos del sistema completo sin ningun detalle
 de la interfaz de cada una de las clases, como asi tambien, se obviaron
 varias clases auxiliares para evitar complejidad en el esquema.
 Listaremos a continuacion, en forma general, las funcionalidades principales
 de cada una de estas clases.
\end_layout

\begin_layout Itemize

\series bold
MainProgram
\series default
: Programa principal encargado de cargar los 
\shape italic
IPS
\shape default
 y ejecutarlos segun corresponda.
\end_layout

\begin_layout Itemize

\series bold
IPSFactory
\series default
: Clase auxiliar encargada de buscar y listar todos los 
\shape italic
IPS
\shape default
 disponibles.
\end_layout

\begin_layout Itemize

\series bold
GUIImageProcessingSystem
\series default
: Clase abstracta que brinda la interfaz de como deben ser los 
\shape italic
IPS
\shape default
 
\shape italic
GUI
\shape default
 a ser implementados.
\end_layout

\begin_layout Itemize

\series bold
ConfigWindowManager
\series default
: Manejador de ventanas, encargado de organizarlas y mostrarlas segun correspond
a.
\end_layout

\begin_layout Itemize

\series bold
ConfigWindow
\series default
: Abstraccion de como debe ser toda ventana de configuracion.
\end_layout

\begin_layout Itemize

\series bold
ImageGenerator
\series default
: Clase encargada de abstraer la generacion de imagenes, ya sea de archivo
 o de una videocamara.
\end_layout

\begin_layout Itemize

\series bold
ImageProcessingSystem
\series default
: Abstraccion de como deben ser los 
\shape italic
IPS
\shape default
 
\shape italic
Core
\shape default
 a ser implementados.
\end_layout

\begin_layout Itemize

\series bold
ImageAnalyzer
\series default
: Clase encargada de contener y ejecutar en orden a los ImageProcessor que
 contenga.
 Representa el modulo de procesamiento de imagenes.
\end_layout

\begin_layout Itemize

\series bold
ImageProcessor
\series default
: Abstraccion de como debe ser la unidad basica de procesamiento.
\end_layout

\begin_layout Standard
Como se puede observar, y como se menciono en el capitulo de la arquitectura
 del sistema, se diferencian 2 partes (separadas por la linea discontinua
 horizontal).
 En la fraccion superior se encuentra el denominado 
\shape italic
IPS Core
\shape default
 (donde se realiza el procesamiento real de las imagenes), mientras que
 en la parte inferior se encuentran el programa principal (conformado por:
\shape italic
 MainProgram
\shape default
 y 
\shape italic
IPSFactory
\shape default
) y el 
\shape italic
IPS GUI
\shape default
.
 El diseño en mayor detalle de cada una de estas partes seran descriptas
 a continuacion.
\end_layout

\begin_layout Subsubsection
IPS Core
\end_layout

\begin_layout Standard
El nucleo de procesamiento se encuentra en este modulo.
 A modo simplificado, el diseño de clases del 
\shape italic
IPS Core
\shape default
 se puede observar en el diagrama de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diseño-de-clases-1"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_disenio_IPS_Core.png
	lyxscale 80
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diseño-de-clases"

\end_inset

Diseño de clases simplificado de un 
\shape italic
IPS Core
\shape default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Describiremos a continuacion, de manera detallada, la funcionalidad de cada
 uno de las clases.
\end_layout

\begin_layout Itemize

\series bold
Frame
\series default
: Es el tipo de dato con la que se maneja el sistema para almacenar la imagen
 capturada por el dispositivo con el tiempo de captura asociada.
\end_layout

\begin_layout Itemize

\series bold
FrameListener, FrameEmitter
\series default
: Funcionan en conjunto como notificador (
\shape italic
FrameEmitter
\shape default
) y receptor -procesador- (
\shape italic
FrameListener
\shape default
) de 
\shape italic
Frame
\shape default
.
 Esto es lo que se denomina 
\shape italic
Observer
\shape default
 en patrones de diseño
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
ImageGenerator
\series default
: Clase encargada de abstraer la generacion de imagenes.
 Dependiendo del metodo llamado el 
\shape italic
ImageGeneretor
\shape default
 puede ser configurado para obtener imagenes desde una videocamara (
\shape italic
createDevice(cameraID)
\shape default
) o bien desde un archivo de video (
\shape italic
createDevice(videoFilePath)
\shape default
).
 Ademas brinda 2 opciones para devolver nuevos 
\shape italic
Frame
\shape default
, por un lado los puede generar automaticamente (si se llama a 
\shape italic
startGenerating()
\shape default
) y distribuyendolos/notificando a los 
\shape italic
FrameListener
\shape default
 asociados (asumiendo que ya fueron asociados por medio del metodo 
\shape italic
addNewListener
\shape default
), o puede hacerlo a pedido (por medio de la llamada 
\shape italic
captureFrame(Frame)
\shape default
) devolviendo de a un único 
\shape italic
Frame
\shape default
.
 
\shape italic
\color red
Ademas, en caso de ser necesario, tener la posibilidad de realizar buffering
 
\color blue
ref
\color red
 agilizando por medio de la paralelizacion, la captura de frames desde el
 dispositivo (esto no se implemento debido a que se pudo cumplir con la
 velocidad requerida).
\end_layout

\begin_layout Itemize

\series bold
ImageProcessor
\series default
: Abstraccion de la unidad base funcional, esto es, toda transformacion,
 manipulacion y analisis que se haga sobre las imagenes tomadas (
\shape italic
Frame
\shape default
) se realiza por medio de un 
\shape italic
ImageProcessor
\shape default
.
 Como se puede ver, existen 4 metodos principales puramente virtuales, los
 cuales deben ser implementados por aquellos que hereden de éste.
 Estos son: 
\shape italic
getParam
\shape default
, 
\shape italic
setParam
\shape default
, utilizados para configurar el ImageProcessor, mientras que 
\shape italic
processData(Image_t)
\shape default
, 
\shape italic
processData(GPUImage_t)
\shape default
, determinan donde se realiza el procesamiento de la imagen.
 La existencia de este último (
\shape italic
processData(GPUImage_t)
\shape default
) es debido a que en un principio se planteo la posibilidad de realizar
 analisis mas exaustivos sobre imagenes de mayor tamaño lo que necesariamente
 requeria un poder de procesamiento mucho mayor, pero con la condicion de
 mantener la velocidad, para esto, se considero la posibilidad de realizar
 este trabajo en la GPU
\begin_inset Foot
status open

\begin_layout Plain Layout
http://en.wikipedia.org/wiki/Graphics_processing_unit
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
ImageAnalyzer
\series default
: Clase encargada de contener y almacenar ordenadamente a los 
\shape italic
ImageProcessor
\series bold
\shape default
 
\series default
utilizados para la transformacion/analisis del 
\shape italic
Frame
\shape default
.
 En conjunto con los 
\shape italic
ImageProcessor
\shape default
 conforma la unidad principal de procesamiento.
 Debido a que el procesamiento del 
\shape italic
Frame
\shape default
 se realiza de manera secuencial, la orden de ejecucion de cada 
\shape italic
ImageProcessor
\series bold
\shape default
 
\series default
esta dada por el orden en el que son agregados al 
\shape italic
ImageAnalyzer
\series bold
\shape default
 
\series default
(por medio del metodo 
\shape italic
addNewProcessor
\shape default
), ademas, como se puede observar, el 
\shape italic
Frame
\series bold
\shape default
 
\series default
puede ser analizado tanto en CPU como en la GPU si cada uno de los 
\shape italic
ImageProcessor
\shape default
 cuenta con la implementacion correspondiente.
 Se puede realizar un tracking del proceso por medio del parametro adicional
 
\shape italic
trackProcess
\shape default
, el cual permite recopilar informacion sobre el tiempo invertido en procesar
 el 
\shape italic
Frame
\shape default
 en cada uno de los 
\shape italic
ImageProcessor
\shape default
.
\end_layout

\begin_layout Itemize

\series bold
ImageProcessingSystem
\series default
: Abstraccion de un 
\shape italic
IPS Core
\shape default
.
 Tiene asociado un nombre e informacion (sobre que hace) que lo identifican
 (los cuales se pueden obtener por medio de 
\shape italic
getName()
\shape default
, 
\shape italic
getInfo()
\shape default
 respectivamente).
 Los metodos a ser implementados por cada uno de los 
\shape italic
IPS Core
\shape default
 desarrollados son solamente 2: 
\shape italic
initialize()
\shape default
 y 
\shape italic
execute()
\shape default
.
 El primero tiene como fin cargar todo lo necesario para su correcto funcionamie
nto, mientras que el segundo, es el encargado de realizar el proceso completo
 asociado al 
\shape italic
IPS
\shape default
 (esto es, obtener nuevos frames del 
\shape italic
ImageGenerator
\shape default
 y procesar cada uno de éstos).
\end_layout

\begin_layout Subsubsection
IPS GUI
\end_layout

\begin_layout Standard
El conjunto de clases que conforman la interfaz grafica (GUI) utilizada
 para la configuracion del 
\shape italic
IPS Core
\shape default
 se denomina 
\shape italic
IPS GUI
\shape default
.
 Un diseño de clases simplificado y a un nivel de abstraccion se lo puede
 observar en diagrama de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diseño-de-clases-1"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_disenio_IPS_GUI.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diseño-de-clases-1"

\end_inset

Diseño de clases simplificado de un 
\shape italic
IPS GUI
\shape default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Este diseño es el que se usará en la implementacion (concreta) de los 
\shape italic
IPS GUI
\shape default
 a desarrollar, como lo es el 
\shape italic
WHIPS
\shape default
 (mencionado en el siguiente capitulo).
 Presentaremos las principales caracteristicas e interacciones que existen
 entre las clases del 
\shape italic
IPS GUI
\shape default
 comenzando de lo mas particular a lo mas general.
\end_layout

\begin_layout Itemize

\series bold
CameraConfigWindow
\series default
: Clase utilizada para configurar los parametros de la camara web.
\end_layout

\begin_layout Itemize

\series bold
VideoFileConfigWindow
\series default
: Clase utilzada para configurar y manipular el video (adelantar, retroceder,
 posicionar el video en un instante determinado).
\end_layout

\begin_layout Itemize

\series bold
ConfigWindow
\series default
: Interfaz de una ventana de configuracion (utilizada principalmente para
 configurar los 
\shape italic
ImageProcessor
\shape default
).
 Tiene asociado un nombre identificador (el cual puede ser obtenido por
 
\shape italic
getName()
\shape default
).
 Cada ConfigWindow brinda la posibilidad ademas de poder cargar/descargar
 una configuracion determinada por medio de un xml, debido a que en general,
 la configuracion de cada 
\shape italic
ImageProcessor
\shape default
 requiere de una previsualizacion por medio de la interfaz grafica.
\end_layout

\begin_layout Itemize

\series bold
ConfigWindowManager
\series default
: Clase encargada de manejar y administrar la forma en la que se mostraran
 las 
\shape italic
ConfigWindow
\shape default
 (tamaño, posicion, orden de secuencia), como asi tambien la carga y descarga
 de la configuracion correspondiente a cada una de las ventanas por medio
 de un xml (por medio de los metodos 
\shape italic
loadConfig(xml)
\shape default
, 
\shape italic
getConfig(xml)
\shape default
).
\end_layout

\begin_layout Itemize

\series bold
GUIImageProcessingSystem
\series default
: Representacion (abstracta) de la clase que representa al 
\shape italic
IPS GUI
\shape default
.
 Al igual que el 
\shape italic
IPS Core
\shape default
, tiene asociado un nombre que lo identifica y una breve descripcion asociada
 a la finalidad del mismo (los cuales son accedidos por medio de los metodos
 
\shape italic
getName()
\shape default
, 
\shape italic
getInfo
\shape default
 respectivamente
\shape italic
()
\shape default
 ), que en general, corresponden al nombre e informacion del 
\shape italic
IPS Core
\shape default
.
 Por otro lado cuenta con 2 funciones principales, que son 
\shape italic
initialize()
\shape default
 utilizada para inicializar el 
\shape italic
IPS Core
\shape default
 asociado y el sistema de ventanas a utilizar por el 
\shape italic
IPS GUI
\shape default
, por otro lado se encuentra 
\shape italic
execute()
\shape default
 que ejecuta el sistemas de ventanas para comenzar la configuracion del
 
\shape italic
IPS Core
\shape default
 y su posterior ejecucion.
 Ademas, cada 
\shape italic
GUIImageProcessingSystem
\shape default
 cuenta con un conjunto de ConfigWindow utilizadas para configurar los 
\shape italic
ImageProcessor
\shape default
 utilizados por el 
\shape italic
IPS Core
\shape default
 asociado, las cuales son mostradas y organizadas por medio de la 
\shape italic
ConfigWindowManager
\shape default
.
\end_layout

\begin_layout Subsection
WHIPS
\end_layout

\begin_layout Subsubsection
Introduccion
\end_layout

\begin_layout Standard
Como se menciono en los capitulos anteriores, la funcionalidad del sistema
 se encuentra en las aplicaciones que pueda ejecutar, las cuales fueron
 modeladas como 
\shape italic
ImageProcessingSystem.
 
\shape default
Éstos tienen un objetivo y funcionalidad especifica.
 Como objetivo principal de este trabajo se planteo desarrollar una aplicacion
 que por medio de videocamaras pudiese capturar la altura de la superficie
 libre en tiempo real.
 Es por esto, y por medio del framework desarrollado y detallado anteriormente,
 se implemento un 
\shape italic
IPS
\shape default
 con tal finalidad, el cual recibio el nombre de 
\shape italic
WHIPS
\shape default
 (
\series bold
W
\series default
ave 
\series bold
H
\series default
eight 
\series bold
I
\series default
mage 
\series bold
P
\series default
rocessing 
\series bold
S
\series default
ystem).
 En este capitulo se mostrara el diseño y detalles del funcionamiento del
 mismo.
\end_layout

\begin_layout Subsubsection
Diseño
\end_layout

\begin_layout Standard
El diseño de 
\shape italic
WHIPS
\shape default
 parte de la base abstracta (diseño de abstraccion) enseñado anteriormente.
 Por un lado se encuentra la interfaz grafica y por el otro la unidad de
 procesamiento.
\end_layout

\begin_layout Standard
La unidad de procesamiento (o 
\begin_inset Quotes eld
\end_inset


\shape italic
WHIPS Core
\shape default

\begin_inset Quotes erd
\end_inset

), como se lo muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diseño-de-clases-2"

\end_inset

, cuenta con la clase principal 
\series bold
WaveHeightIPS
\series default
 encargada de llevar a cabo todo el proceso de analisis de imagen para capturar
 la algura de la superficie libre.
 Depende de 4 ImageProcessor para lograrlo, estos son 
\series bold
IRectifier
\series default
, 
\series bold
IClipping
\series default
, 
\series bold
IBorderDetector
\series default
, 
\series bold
IAnalyzer
\series default
, cada uno con una funcionalidad determinada y representando a una de las
 etapas explicadas en el capitulo 3.3.
 Como se puede observar en el diagrama, estos son clases abstractas que
 sirven solo para brindar una interfaz a las clases que hereden de estas.
 Esta capa de abstraccion fue agregada para facilitar (y por medio de la
 utilizacion de la 
\series bold
WaveHeightIPFactory
\series default
) la posibilidad de cambiar cada uno de los ImageProcessor (concretos) de
 forma facil sin alterar la la estructura general del modulo (por si se
 deseaba utilizar o probar distintos algoritmos en alguna de las etapas
 del proceso completo).
 En este caso en particular se muestran las 4 implementaciones correspondientes
 a cada una de las fases del proceso (osea, cada uno de los 
\series bold
ImageProcessor
\series default
), éstos son 
\series bold
PerspectiveRectifier
\series default
, 
\series bold
MiddlePointClipping
\series default
, 
\series bold
CannyBorderDetector
\series default
 y 
\series bold
WaveHeightAnalyzer
\series default
 respectivamente.
 En el siguiente capitulo se detallara el funcionamiento de cada uno de
 estos.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_disenio_WHIPS_core.png
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diseño-de-clases-2"

\end_inset

Diseño de clases de un 
\shape italic
WHIPS Core
\shape default
 a nivel de abstracción.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por otro lado se encuentra la interfaz grafica (figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diseño-de-clases-3"

\end_inset

) o 
\shape italic

\begin_inset Quotes eld
\end_inset

WHIPS GUI
\shape default

\begin_inset Quotes erd
\end_inset

, donde se pueden diferenciar 3 partes con respecto a las etapas del proceso,
 donde se ven involucradas distintas clases para cada una de estas.
 Éstas son la etapa de configuracion o pre-procesamiento (clases con reborde
 azul), la etapa de procesamiento (clase con reborde rojo), y la etapa de
 post-procesamiento o analisis de datos (clase con reborde verde).
\end_layout

\begin_layout Standard
Para la primera (configuracion) se encuentran involucradas 3 clases, 
\series bold
GUIPerspectiveRectifier
\series default
, 
\series bold
GUIMiddlePointClipping
\series default
 y 
\series bold
GUICannyBorderDetector
\series default
, que tienen como finalidad la configuracion completa de los 
\shape italic
ImageProcessor
\shape default
 pertenecientes al 
\shape italic
WHIPS Core
\shape default
 (en el capitulo siguiente se explicara la relacion que existe entre cada
 una de estas clases con los 
\shape italic
ImageProcessor
\shape default
 que configuran).
 Estas clases heredan de una interfaz comun (
\series bold
ImgProcConfigWindow
\series default
) por el simple hecho de que poseen funcionalidad similar (lo que ahorra
 repetir codigo).
\end_layout

\begin_layout Standard
La segunda etapa tiene asociada la clase 
\series bold
GUIRealTimeDataDisplayer
\series default
, la cual muestra en tiempo real los datos procesados por el WHIPS Core,
 esto es, la altura de la superficie libre obtenida luego de procesar las
 imagenes de entrada (videocamara o archivo de video).
 Adicionalmente se muestra la imagen que esta siendo procesada.
\end_layout

\begin_layout Standard
La ultima etapa (analisis de datos), esta conformada principalmente por
 la clase 
\series bold
DataAnalyzeWindow
\series default
, la cual muestra de manera grafica los resultados de todo el analisis extrayend
o y calculando valores de interes (
\shape italic
\color blue
poner aca lo que se extrae y referencias
\shape default
\color inherit
).
 Como se puede observar, la clase fue diseñada independientemente a las
 demas (no hereda de ninguna otra clase) ya que debia funcionar independientemen
te del sistema de ventanas manejado por el 
\series bold
ConfigWindowManager
\series default
.
\end_layout

\begin_layout Standard
Por otro lado se puede observar que existen 2 implementaciones de 
\shape italic
ConfigWindow
\shape default
 llamadas 
\series bold
CameraConfigWindow
\series default
 y 
\series bold
VideoFileConfigWindow
\series default
 que son utilizadas por el 
\shape italic
GUIWaveHeightIPS
\shape default
, ya sea para configurar la camara o el archivo de video dependiendo que
 se use como sistema de entrada (osea, como este configurado el 
\shape italic
ImageGenerator
\shape default
).
\end_layout

\begin_layout Standard
En el siguiente capitulo se dara informacion mas detallada sobre el funcionamien
to e implementacion de cada una de las clases.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_disenio_WHIPS_GUI.png
	lyxscale 80
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diseño-de-clases-3"

\end_inset

Diseño de clases de un 
\shape italic
WHIPS GUI
\shape default
 a nivel de abstracción
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Funcionamiento WHIPS Core
\end_layout

\begin_layout Standard
WHIPS Core hace referencia a la unidad de procesamiento principal del 
\shape italic
ImageProcessingSystem
\shape default
 encargado de detectar la altura de la superficie libre del fluido.
 Esta representado por la clase 
\shape italic
WaveHeightIPS
\shape default
 la cual carga y coordina el procesamiento de las imagenes por medio de
 varias clases auxiliares.
\end_layout

\begin_layout Standard
El procedimiento del 
\shape italic
WHIPS Core
\shape default
 se lo puede describir como una serie de pasos realizados en un orden determinad
o.
 Estos pasos son:
\end_layout

\begin_layout Enumerate
Obtener una imagen del 
\shape italic
ImageGenerator
\shape default
 asociado a la clase (ya sea que este configurado para tomar imagenes desde
 un archivo o de una videocamara).
\end_layout

\begin_layout Enumerate
Procesar por medio del 
\shape italic
ImageAnalyzer
\shape default
 la imagen obtenida.
 Donde el 
\shape italic
ImageAnalyzer
\shape default
 consta de 4 
\shape italic
ImageProc
\shape default
essor cada uno con una funcionalidad bien definida, estos son:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
IRectifier
\series default
: Encargado de transformar el sistema de coordenadas de la imagen tomada
 en un sistema de coordenadas 
\begin_inset Quotes eld
\end_inset

conocido
\begin_inset Quotes erd
\end_inset

 alineado al plano sobre el cual se esta calculando la altura.
 En particular esta accion se realiza por medio del 
\shape italic
PerspectiveRectifier
\shape default
 utilizando el algoritmo 
\begin_inset Quotes eld
\end_inset


\shape italic
Perspective Transform
\shape default

\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Perspective-transform"

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
IClipping
\series default
: Encargado de realizar el recorte de la imagen correspondiente a la zona
 que se quiere analizar.
 Esto lo hace actualmente el 
\shape italic
MiddlePointC
\shape default
lipping el cual usa el punto de reposo de la superficie seleccionado por
 el usuario y un parametro adicional 
\begin_inset Formula $k$
\end_inset

 que indica cuanta es la cantidad de columnas a analizar.
 Lo que hace es simplemente descartar de la imagen de entrada, todos las
 columnas de pixels que no esten contenidas entre el rango de columnas 
\begin_inset Formula $\left[c.x-\frac{k}{2},c.x+\frac{k}{2}\right]$
\end_inset

, donde 
\begin_inset Formula $c$
\end_inset

 es el punto de reposo seleccionado por el usuario (y 
\begin_inset Formula $c.x$
\end_inset

 la coordenada en 
\begin_inset Formula $x$
\end_inset

 del punto 
\begin_inset Formula $c$
\end_inset

, equivalente a la columna 
\begin_inset Formula $x$
\end_inset

 de la imagen).
 De esta forma ahorramos procesar informacion que no es requerida.
\end_layout

\begin_layout Itemize

\series bold
IBorderDetector
\series default
: Tiene como objetivo modificar la imagen de entrada de forma tal que luego
 de ser procesada por éste ImageProcessor quede una imagen de contornos.
 En este caso se implemento el 
\shape italic
CannyBorderDetector
\shape default
 el cual transforma la imagen (de entrada) aplicandole en una primera instancia,
 un filtro que reduce la cantidad de colores (y por ende la cantidad de
 datos analizar o complejidad de la imagen).
 Luego aplica un segundo filtro denominado
\shape italic
 Gaussian Blur
\shape default
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Gaussian-Blur"

\end_inset

) para suavizar la imagen antes de realizar el analisis de contornos, que
 para lograrlo, aplica como ultimo paso, el algoritmo de 
\shape italic
Canny
\shape default
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Canny-edge-detector"

\end_inset

).
 Dejando como resultado una imagen con solo contornos.
\end_layout

\begin_layout Itemize

\series bold
IAnalyzer
\series default
: Dada una imagen de contornos y una serie de parametros, determina la altura
 de la superficie libre.
 La implementacion de este ImageProcessor se lo llamo 
\shape italic
WaveHeightAnalyzer
\shape default
 ya que se basa en el algoritmo 
\begin_inset Quotes eld
\end_inset


\shape italic
Wave height analyzer
\shape default

\begin_inset Quotes erd
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Wave-height-analyzer"

\end_inset

).
\end_layout

\end_deeper
\begin_layout Enumerate
Como ultimo paso, guarda el resultado obtenido del 
\shape italic
IAnalyzer
\shape default
 en un archivo previamente establecido por el usuario.
\end_layout

\begin_layout Standard
Esta procedimiento (pasos 1,2,3) se realizan dentro de un loop hasta que
 el usuario lo indica, o el 
\shape italic
ImageGenerator
\shape default
 no puede obtener mas imagenes (que esto sucede cuando las imagenes son
 obtenidas de un archivo de video).
\end_layout

\begin_layout Standard
Además, el 
\shape italic
WaveHeightIPS
\shape default
 brinda la posibilidad de realizar el analisis en el CPU o GPU si los correspond
ientes 
\shape italic
ImageProcessor
\shape default
 lo permiten, para este caso particular, debido a que los implementados
 para este trabajo no implementan esta feature, no puede ser utilizado (solo
 CPU).
\end_layout

\begin_layout Subsubsection
Funcionamiento WHIPS GUI
\end_layout

\begin_layout Standard
Este modulo tiene, a grandes rasgos, 3 finalidades distintas, estas son:
\end_layout

\begin_layout Enumerate
Brindar al usuario una interfaz grafica para poder configurar de forma facil
 y agil los parametros que requieren los ImageProcessor del 
\shape italic
WHIPS Core
\shape default
 mencionados anteriormente.
 
\end_layout

\begin_layout Enumerate
Mostrar el proceso de computo en tiempo real (indicar de forma interactiva
 la altura de la superficie de ola calculada en los ultimos segundos).
\end_layout

\begin_layout Enumerate
Mostrar y procesar los datos obtenidos una vez finalizado el proceso de
 captura.
\end_layout

\begin_layout Standard
El 
\shape italic
WHIPS GUI
\shape default
 se basa en una clase principal (
\shape italic
GUIWaveHeightIPS
\shape default
) la cual carga y ordena el sistema de ventanas como asi tambien la inicializaci
on y ejecucion del 
\shape italic
WHIPS Core
\shape default
.
 Debido a la forma en la que los 
\shape italic
ImageProcessor
\shape default
 deben ser configurados (en un orden secuencial, donde en general la configuraci
on de uno depende de como fueron configurados los anteriores), la clase
 
\shape italic
ConfigWindowManager
\shape default
 fue diseñada para cumplir con tal fin, permitiendo solo pasar a la siguiente
 fase de configuracion (y por ende a la siguiente 
\shape italic
ConfigWindow
\shape default
) si y solo si se configuro correctamente el paso que esta siendo mostrado
 actualmente (
\shape italic
ConfigWindow
\shape default
).
 
\end_layout

\begin_layout Standard
Adicionalmente, para facilitar aun mas la finalidad (1), el 
\shape italic
GUIWaveHeightsIPS
\shape default
 brinda la posibilidad de cargar y guardar las configuraciones de las distintas
 
\shape italic
ConfigWindow
\shape default
, que en caso de realizar multiples ensayos con la misma configuracion (como
 es usual) ahorra tiempo al usuario evitando restablecer todos los parametros
 de nuevo.
\end_layout

\begin_layout Standard
Por otro lado se brinda la posibilidad de manejar sesiones donde se pueda
 guardar fecha, autor, nombre, descripcion, entre otros, asociadas a un
 experimento dado.
\end_layout

\begin_layout Standard
A manera esquematica, podemos mostrar la funcionalidad (secuencia de pasos)
 que brinda este modulo por medio del diagrama (conjuncion de diagrama de
 clases y diagrama de flujo) de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Esquema-representativo-del"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/img_whips_gui_flujo.png
	lyxscale 60
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Esquema-representativo-del"

\end_inset

Esquema representativo del 
\shape italic
WHIPS
\shape default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En un principio, se le brinda al usuario la posibilidad de crear o cargar
 una sesion ya existente.
 Puede ademas, ejecutar directamente la ventana de analisis de datos (
\shape italic
DataAnalyzeWindow
\shape default
), la cual funciona como modulo aparte (puede mostrarse datos ya obtenidos
 de una sesion anterior, o de datos externos no necesariamente de una sesion
 anterior).
 Esto esta relacionado con la funcionalidad (3) anteriormente enumerada.
\end_layout

\begin_layout Standard
Dependiendo del tipo de entrada seleccionado (que puede ser una videocamara
 o un archivo de video), el sistema muestra la ventana de configuracion
 correspondiente (en la figura, 
\shape italic
VideoFileConfigWindow
\shape default
 y 
\shape italic
CameraConfigWindow
\shape default
).
 Luego se pasa al ciclo de configuracion de los diferentes 
\shape italic
ImageProcessor
\shape default
 del 
\shape italic
WHIPS
\shape default
 Core, por medio de las ventanas de configuracion 
\shape italic
GUIPerspectiveRectifier
\shape default
, 
\shape italic
GUIMiddlePointClipping
\shape default
 y 
\shape italic
GUICannyBorderDetector
\shape default
.
 Cabe destacar, que en el caso del tipo de entrada ser un archivo de video,
 intercaladamente (entre cada una de estas ventanas) se muestra el 
\shape italic
VideoFileConfigWindow
\shape default
 para brindar la posibilidad de adelantar o retrasar el video a la posicion
 que se requiera (esto es de utilidad si las diferentes configuraciones
 necesarias estan asociadas a distintos frames en el video).
 Este conjunto de ventanas son utilizadas para lograr (1).
\end_layout

\begin_layout Standard
Por ultimo, una vez configurado todo los 
\shape italic
ImageProcessor
\shape default
, el usuario puede comenzar la captura de datos y observarlos en tiempo
 real gracias a la ventana 
\shape italic
GUIRealTimeDataDisplayer
\shape default
 (finalidad (2)).
\end_layout

\begin_layout Standard

\shape italic
\color red
En el apendice se pueden observar imagenes de la interfaz grafica (o podemos
 poner que en el siguiente capitulo en un caso de prueba mostramos todas
 las interfaces)
\end_layout

\begin_layout Section
Aplicacion en un canal 2D
\end_layout

\begin_layout Subsection
Canal de labortatorio
\end_layout

\begin_layout Standard
El canal sobre el cual se realizaron los ensayos posee las siguientes dimensione
s: 
\color red
25 metros de largo, 1 metro de ancho, 1 metro de alto
\color inherit
.
 Cuenta con una 
\color red
pala electronica (nombre de la pala o referencia?)
\color inherit
 la cual genera los oleajes que se quieran simular
\shape italic
\color blue
 podemos poner mas caracteristicas sobre la pala, imagen del canal y de
 la pala
\shape default
\color inherit
.
\end_layout

\begin_layout Standard
Las mediciones de la altura de ola se realizan por medio de sensores de
 nivel resistivos llamados 
\shape italic
\color blue
agregar nombre y ref
\shape default
\color inherit
, los cuales tienen la capacidad de realizar un muestreo de 100 tomas por
 segundo (o equivalentemente 100 Hz).
\shape italic
\color blue
Imagen del sensor
\end_layout

\begin_layout Subsection
Preparacion de las mediciones
\end_layout

\begin_layout Standard
Para poder realizar una medicion se debe preparar tanto el canal (y el entorno)
 como el sistema.
 En una primera instancia se debe acondicionar el canal de forma tal que
 se pueda alcanzar una maxima diferenciacion de la superficie libre, esto
 es, conseguir el mayor contraste posible entre el liquido y el aire (variando
 las posiciones e intensidades de la luz que afectan la zona a medir en
 el canal y utilizando distintos tipos de papeles o contacts sobre la cara
 opuesta a medir del canal, evitando de esta manera, capturar objetos que
 se encuentran por detras del canal).
\end_layout

\begin_layout Standard
Por otro lado se debe configurar el sistema.
 Vamos a mostrar el caso en el que se realiza una medicion nueva, los pasos
 a seguir son:
\end_layout

\begin_layout Itemize
Crear una nueva sesion (
\shape italic
\color blue
fig nueva sesion
\shape default
\color inherit
)
\end_layout

\begin_layout Itemize
Configuracion de la camara utilizada (foco, zoom, brillo, etc) 
\shape italic
\color blue
fig imagen camara
\shape default
\color inherit
.
\end_layout

\begin_layout Itemize
Configurar la escala y zona de analisis 
\shape italic
\color blue
imagen ref rectangulo
\shape default
\color inherit
.
\end_layout

\begin_layout Itemize
Configurar el punto de reposo de la ola (para lograr esto el nivel del fluido
 debe estar en estado escionario) 
\shape italic
\color blue
figura ref middlePoint
\shape default
\color inherit
.
\end_layout

\begin_layout Itemize
Configuracion de los parametros del algoritmo para la deteccion de contornos
 
\shape italic
\color blue
img ref canny
\shape default
\color inherit
.
\end_layout

\begin_layout Standard
Una vez configurado el sistema se prosigue a producir el oleaje que se quiere
 analizar por medio de la pala mecanica antes mencionada y por medio de
 una ultima ventana (
\shape italic
\color blue
ref img RealTime
\shape default
\color inherit
) se le brinda al usuario la posibilidad de comenzar a capturar las imagenes
 y observar en tiempo real los datos procesados.
\end_layout

\begin_layout Standard

\color red
Aca ponemos como se prepara el canal, y como se prepara el software, aca
 deberiamos poner la interfaz grafica.
\end_layout

\begin_layout Subsection
Ensayos propuestos
\end_layout

\begin_layout Standard
En este trabajo se propusieron los siguientes ensayos:
\end_layout

\begin_layout Enumerate
Capturar la altura de ola en un oleaje regular de altura 
\color red
X
\color inherit
 durante 
\color red
N
\color inherit
 segundos.
\end_layout

\begin_layout Enumerate
Capturar la altura de ola en un oleaje regular de altura 
\color red
X2
\color inherit
 durante 
\color red
N2
\color inherit
 segundos.
\end_layout

\begin_layout Enumerate
Capturar la altura de ola en un oleaje irregular de altura 
\color red
X3
\color inherit
 durante 
\color red
N3
\color inherit
 segundos.
\end_layout

\begin_layout Standard
Cada uno de los ensayos anteriormente mencionados se realizaron utilizando
 las mismas configuraciones del entorno (cantidad y posicion de la luz,
 tamaño de la zona de analisis, etc), donde la camara se coloco a una distancia
 
\color red
M cm
\color inherit
 del canal.
 Adicionalmente se realizaron muestreos en paralelo utilizando los sensores
 resistivos con los que cuenta el laboratorio para poder analizar y comparar
 los resultados obtenidos.
\end_layout

\begin_layout Standard

\color red
Aca hablamos sobre las diferentes mediciones propuestas (analisis de varios
 oleajes regulares, irregular, etc)
\end_layout

\begin_layout Subsection
Mediciones y analisis de los resultados
\end_layout

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Section
Trabajos futuros
\end_layout

\begin_layout Standard
Podriamos hablar de:
\end_layout

\begin_layout Standard
Implementar el ImageGenerator para que haga buffering.
\end_layout

\begin_layout Standard
Implementar algoritmos en GPU (Cuda).
\end_layout

\begin_layout Standard
Desarrollar otros IPS
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Bradski08"
key "key-1"

\end_inset

Bradski, Gary & Kaehler, Adrian.
 
\begin_inset Quotes eld
\end_inset

Learning OpenCV: Computer Vision with the OpenCV Library
\begin_inset Quotes erd
\end_inset

.
 2008.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-7"

\end_inset

www.horusvideo.com
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Brady07"
key "key-1"

\end_inset

P.D.M.
 Brady , M.
 Boutounet and S.
 Beecham.
 
\begin_inset Quotes eld
\end_inset

Free Surface Monitoring Using Image Processing
\begin_inset Quotes erd
\end_inset

.
 University of Technology Sydney, NSW, 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Zhang"
key "key-2"

\end_inset

Rong Zhang .
 
\begin_inset Quotes eld
\end_inset

Image Rectification: Remove Projective and Affine Distortions
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Perez09"
key "key-3"

\end_inset

Perez Muñoz, Juan C.
 
\begin_inset Quotes eld
\end_inset

Optimización no lineal y calibración de cámaras fotográficas
\begin_inset Quotes erd
\end_inset

.
 Medellín, 2009.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Nader08"
key "key-4"

\end_inset

Ehsan Nadernejad, Sara Sharifzadeh and Hamid Hassanpour.
 
\begin_inset Quotes eld
\end_inset

Edge Detection Techniques: Evaluations and Comparisons
\begin_inset Quotes erd
\end_inset

.
 Applied Mathematical Sciences, Vol.
 2, 2008.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "BaTra"
key "key-1"

\end_inset

S.
 Barreto Melo.
 
\begin_inset Quotes eld
\end_inset

Transformaciones geométricas sobre imágenes digitales
\begin_inset Quotes erd
\end_inset

.
 Universidad Distrital Francisco José de Caldas.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Rob11"
key "key-1"

\end_inset

Robert Laganière.
 
\begin_inset Quotes eld
\end_inset

OpenCV 2 Computer Vision Application Programming Cookbook
\begin_inset Quotes erd
\end_inset

.
 2011
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Gam94"
key "key-1"

\end_inset

Gamma, Helm, Johnson, Vlissides.
 
\begin_inset Quotes eld
\end_inset

Design Patterns: Elements of Reusable Object Oriented Software
\begin_inset Quotes erd
\end_inset

.
 1994
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "UnEdi"
key "key-1"

\end_inset

"UNIVERSITY OF EDIMBURGH SCHOOL OF INFORMATIC".
 http://www.inf.ed.ac.uk/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "canny"
key "key-2"

\end_inset


\shape italic
\color red

\begin_inset Quotes erd
\end_inset

Canny Edge Detection
\begin_inset Quotes erd
\end_inset

.
 09gr820, March 23, 2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-6"

\end_inset


\shape italic
\color red
http://en.wikipedia.org/wiki/Convolution
\begin_inset Note Note
status open

\begin_layout Plain Layout
si no lo podemos encontrar tmb en UnEdi
\end_layout

\end_inset


\end_layout

\end_body
\end_document
