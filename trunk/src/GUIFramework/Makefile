#############################################################################
# Makefile for building: GUIFramework
# Generated by qmake (2.01a) (Qt 4.6.2) on: mié ene 4 03:55:58 2012
# Project:  GUIFramework.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile GUIFramework.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDEBUG -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I../Common/tinyxml -I../Common/Debug -I../Common/Timestamp -I../Common -I../Common/tinyxml -I../DeviceCalibrator -I../GUI/ImageGeneratorConfigurator -I../GUI/IPSModule/ImageProcessingSystem -I../GUI/IPSModule/ImageProcessingSystem/WaveHeightIPS -I../GUI/IPSModule/ImageProcessingSystem/WaveHeightIPS/DeviceCalibrator -I../GUI/IPSModule/ImageProcessingSystem/WaveHeightIPS/ImageAnalizer/CoordsInterpreter -I../GUI/IPSModule/ImageProcessingSystem/WaveHeightIPS/ImageAnalizer/BorderDetector -I../GUI/IPSModule/ImageProcessingSystem/WaveHeightIPS/RealTimeDataDisplayer -I../IPSModule/ImageProcessingSystem -I../IPSModule/ImageProcessingSystem/WaveHeightIPS/ImageAnalyzer/CoordsInterpreter -I../IPSModule/ImageProcessingSystem/WaveHeightIPS/ImageAnalyzer/BorderDetector -I../IPSModule/ImageProcessingSystem/WaveHeightIPS/DeviceCalibrator -I../IPSModule/ImageProcessingSystem/WaveHeightIPS -I../ImageAnalyzer -I../ImageAnalyzer/ImageInterpreter -I../ImageGenerator -I../GUI/MainProgram -I../GUI/GUIConfiguratorDialog -I../Tests/SystemCLITest -IUtils -IConfigWindowManager/UnitTest -IConfigWindowManager -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/local/lib -lopencv_core -lopencv_imgproc -lopencv_highgui -lopencv_calib3d -lopencv_contrib -lopencv_features2d -lopencv_flann -lopencv_gpu -lopencv_ml -lopencv_objdetect -lopencv_video -lopencv_ts -lopencv_legacy -L../Common/tinyxml -ltinyxmlpath -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ConfigWindowManager/UnitTest/configwindowtest3.cpp \
		ConfigWindowManager/UnitTest/configwindowtest2.cpp \
		ConfigWindowManager/UnitTest/configwindowtest1.cpp \
		Utils/GUIUtils.cpp \
		ConfigWindowManager/configwindowmanager.cpp \
		main.cpp \
		guiframework.cpp moc_configwindowtest3.cpp \
		moc_configwindowtest2.cpp \
		moc_configwindowtest1.cpp \
		moc_configwindowmanager.cpp \
		moc_configwindow.cpp \
		moc_guiframework.cpp
OBJECTS       = configwindowtest3.o \
		configwindowtest2.o \
		configwindowtest1.o \
		GUIUtils.o \
		configwindowmanager.o \
		main.o \
		guiframework.o \
		moc_configwindowtest3.o \
		moc_configwindowtest2.o \
		moc_configwindowtest1.o \
		moc_configwindowmanager.o \
		moc_configwindow.o \
		moc_guiframework.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		GUIFramework.pro
QMAKE_TARGET  = GUIFramework
DESTDIR       = 
TARGET        = GUIFramework

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ../Common/tinyxml/libtinyxmlpath.a ui_configwindowtest3.h ui_configwindowtest2.h ui_configwindowtest1.h ui_configwindowmanager.h ui_guiframework.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: GUIFramework.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile GUIFramework.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile GUIFramework.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/GUIFramework1.0.0 || $(MKDIR) .tmp/GUIFramework1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/GUIFramework1.0.0/ && $(COPY_FILE) --parents ConfigWindowManager/UnitTest/configwindowtest3.h ConfigWindowManager/UnitTest/configwindowtest2.h ConfigWindowManager/UnitTest/configwindowtest1.h ConfigWindowManager/configwindowmanager.h ConfigWindowManager/configwindow.h Utils/GUIUtils.h ../Common/Debug/DebugUtil.h ../Common/GlobalDefines.h ../Common/tinyxml/tinyxml.h guiframework.h .tmp/GUIFramework1.0.0/ && $(COPY_FILE) --parents ConfigWindowManager/UnitTest/configwindowtest3.cpp ConfigWindowManager/UnitTest/configwindowtest2.cpp ConfigWindowManager/UnitTest/configwindowtest1.cpp Utils/GUIUtils.cpp ConfigWindowManager/configwindowmanager.cpp main.cpp guiframework.cpp .tmp/GUIFramework1.0.0/ && $(COPY_FILE) --parents ConfigWindowManager/UnitTest/configwindowtest3.ui ConfigWindowManager/UnitTest/configwindowtest2.ui ConfigWindowManager/UnitTest/configwindowtest1.ui ConfigWindowManager/configwindowmanager.ui guiframework.ui .tmp/GUIFramework1.0.0/ && (cd `dirname .tmp/GUIFramework1.0.0` && $(TAR) GUIFramework1.0.0.tar GUIFramework1.0.0 && $(COMPRESS) GUIFramework1.0.0.tar) && $(MOVE) `dirname .tmp/GUIFramework1.0.0`/GUIFramework1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/GUIFramework1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_configwindowtest3.cpp moc_configwindowtest2.cpp moc_configwindowtest1.cpp moc_configwindowmanager.cpp moc_configwindow.cpp moc_guiframework.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_configwindowtest3.cpp moc_configwindowtest2.cpp moc_configwindowtest1.cpp moc_configwindowmanager.cpp moc_configwindow.cpp moc_guiframework.cpp
moc_configwindowtest3.cpp: ui_configwindowtest3.h \
		ConfigWindowManager/UnitTest/configwindowtest3.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ConfigWindowManager/UnitTest/configwindowtest3.h -o moc_configwindowtest3.cpp

moc_configwindowtest2.cpp: ui_configwindowtest2.h \
		ConfigWindowManager/UnitTest/configwindowtest2.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ConfigWindowManager/UnitTest/configwindowtest2.h -o moc_configwindowtest2.cpp

moc_configwindowtest1.cpp: ui_configwindowtest1.h \
		ConfigWindowManager/UnitTest/configwindowtest1.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ConfigWindowManager/UnitTest/configwindowtest1.h -o moc_configwindowtest1.cpp

moc_configwindowmanager.cpp: ui_configwindowmanager.h \
		ConfigWindowManager/configwindow.h \
		../Common/tinyxml/tinyxml.h \
		../Common/tinyxml/tinystr.h \
		ConfigWindowManager/configwindowmanager.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ConfigWindowManager/configwindowmanager.h -o moc_configwindowmanager.cpp

moc_configwindow.cpp: ../Common/tinyxml/tinyxml.h \
		../Common/tinyxml/tinystr.h \
		ConfigWindowManager/configwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ConfigWindowManager/configwindow.h -o moc_configwindow.cpp

moc_guiframework.cpp: ui_guiframework.h \
		guiframework.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) guiframework.h -o moc_guiframework.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_configwindowtest3.h ui_configwindowtest2.h ui_configwindowtest1.h ui_configwindowmanager.h ui_guiframework.h
compiler_uic_clean:
	-$(DEL_FILE) ui_configwindowtest3.h ui_configwindowtest2.h ui_configwindowtest1.h ui_configwindowmanager.h ui_guiframework.h
ui_configwindowtest3.h: ConfigWindowManager/UnitTest/configwindowtest3.ui
	/usr/bin/uic-qt4 ConfigWindowManager/UnitTest/configwindowtest3.ui -o ui_configwindowtest3.h

ui_configwindowtest2.h: ConfigWindowManager/UnitTest/configwindowtest2.ui
	/usr/bin/uic-qt4 ConfigWindowManager/UnitTest/configwindowtest2.ui -o ui_configwindowtest2.h

ui_configwindowtest1.h: ConfigWindowManager/UnitTest/configwindowtest1.ui
	/usr/bin/uic-qt4 ConfigWindowManager/UnitTest/configwindowtest1.ui -o ui_configwindowtest1.h

ui_configwindowmanager.h: ConfigWindowManager/configwindowmanager.ui
	/usr/bin/uic-qt4 ConfigWindowManager/configwindowmanager.ui -o ui_configwindowmanager.h

ui_guiframework.h: guiframework.ui
	/usr/bin/uic-qt4 guiframework.ui -o ui_guiframework.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

configwindowtest3.o: ConfigWindowManager/UnitTest/configwindowtest3.cpp ConfigWindowManager/UnitTest/configwindowtest3.h \
		ui_configwindowtest3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configwindowtest3.o ConfigWindowManager/UnitTest/configwindowtest3.cpp

configwindowtest2.o: ConfigWindowManager/UnitTest/configwindowtest2.cpp ConfigWindowManager/UnitTest/configwindowtest2.h \
		ui_configwindowtest2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configwindowtest2.o ConfigWindowManager/UnitTest/configwindowtest2.cpp

configwindowtest1.o: ConfigWindowManager/UnitTest/configwindowtest1.cpp ConfigWindowManager/UnitTest/configwindowtest1.h \
		ui_configwindowtest1.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configwindowtest1.o ConfigWindowManager/UnitTest/configwindowtest1.cpp

GUIUtils.o: Utils/GUIUtils.cpp Utils/GUIUtils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GUIUtils.o Utils/GUIUtils.cpp

configwindowmanager.o: ConfigWindowManager/configwindowmanager.cpp ConfigWindowManager/configwindowmanager.h \
		ui_configwindowmanager.h \
		ConfigWindowManager/configwindow.h \
		../Common/tinyxml/tinyxml.h \
		../Common/tinyxml/tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configwindowmanager.o ConfigWindowManager/configwindowmanager.cpp

main.o: main.cpp guiframework.h \
		ui_guiframework.h \
		ConfigWindowManager/configwindowmanager.h \
		ui_configwindowmanager.h \
		ConfigWindowManager/configwindow.h \
		../Common/tinyxml/tinyxml.h \
		../Common/tinyxml/tinystr.h \
		ConfigWindowManager/UnitTest/configwindowtest1.h \
		ui_configwindowtest1.h \
		ConfigWindowManager/UnitTest/configwindowtest2.h \
		ui_configwindowtest2.h \
		ConfigWindowManager/UnitTest/configwindowtest3.h \
		ui_configwindowtest3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

guiframework.o: guiframework.cpp guiframework.h \
		ui_guiframework.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o guiframework.o guiframework.cpp

moc_configwindowtest3.o: moc_configwindowtest3.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configwindowtest3.o moc_configwindowtest3.cpp

moc_configwindowtest2.o: moc_configwindowtest2.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configwindowtest2.o moc_configwindowtest2.cpp

moc_configwindowtest1.o: moc_configwindowtest1.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configwindowtest1.o moc_configwindowtest1.cpp

moc_configwindowmanager.o: moc_configwindowmanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configwindowmanager.o moc_configwindowmanager.cpp

moc_configwindow.o: moc_configwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configwindow.o moc_configwindow.cpp

moc_guiframework.o: moc_guiframework.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_guiframework.o moc_guiframework.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

